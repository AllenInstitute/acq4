pos: (0.0, 0.0)
connects: [('Input', 'events', 'Scores', 'events'), ('EventSignFilter', 'output', 'evokedLatency', 'events'), ('EventSignFilter', 'output', 'StatsEventFilter', 'events'), ('ReadSpotSize', 'output', 'MergeData', 'spotsize'), ('Scores', 'output', 'MergeData', 'scores'), ('Input', 'events', 'EventSignFilter', 'events'), ('Input', 'regions', 'Scores', 'regions'), ('evokedLatency', 'output', 'MergeData', 'latency'), ('MergeData', 'output', 'Output', 'dataOut'), ('Input', u'directFit', 'MergeData', 'directFit'), ('Input', u'directFit', 'Scores', 'directFit'), ('Input', 'regions', 'StatsCalculator.0', 'regions'), ('StatsEventFilter', 'output', 'StatsCalculator.0', 'data'), ('StatsCalculator.0', 'stats', 'MergeData', 'stats'), ('Input', 'fileHandle', 'ReadSpotSize', 'file')]
terminals:
    events:
        multi: False
        io: 'in'
        renamable: False
        multiable: False
        removable: False
        optional: False
    regions:
        multi: False
        io: 'in'
        renamable: False
        multiable: False
        removable: False
        optional: False
    fileHandle:
        multi: False
        io: 'in'
        renamable: False
        multiable: False
        removable: False
        optional: False
    dataOut:
        multi: False
        io: 'out'
        renamable: False
        multiable: False
        removable: False
        optional: False
    directFit:
        multi: False
        io: 'in'
        renamable: True
        multiable: False
        removable: True
        optional: False
bypass: False
inputNode:
    pos: (-403.0, 97.0)
    bypass: False
nodes: [{'state': {'text': "import collections\nout = collections.OrderedDict()\nfor inp in args:\n    out.update(args[inp])\n\nreturn {'output': out}", 'terminals': OrderedDict([('output', {'multi': False, 'io': 'out', 'renamable': True, 'multiable': False, 'removable': False, 'optional': False}), ('scores', {'multi': False, 'io': 'in', 'renamable': True, 'multiable': False, 'removable': False, 'optional': False}), ('spotsize', {'multi': False, 'io': 'in', 'renamable': True, 'multiable': True, 'removable': True, 'optional': False}), ('latency', {'multi': False, 'io': 'in', 'renamable': True, 'multiable': True, 'removable': True, 'optional': False}), ('stats', {'multi': False, 'io': 'in', 'renamable': True, 'multiable': True, 'removable': True, 'optional': False}), ('directFit', {'multi': False, 'io': 'in', 'renamable': True, 'multiable': True, 'removable': True, 'optional': False})]), 'pos': (418.9373169671712, 77.14172943562653), 'bypass': False}, 'pos': (418.9373169671712, 77.14172943562653), 'class': 'PythonEval', 'name': 'MergeData'}, {'state': {'pos': (28.276747294451468, 300.65470337693057), 'bypass': False, 'ctrl': {'fitDecayTau': False, 'maxFitTime': 0.0, 'fitTime': False, 'minFitDecayTau': 0.0, 'maxFitLengthOverDecay': 100.0, 'maxFitAmp': 0.0, 'fitLengthOverDecay': False, 'fitRiseTau': False, 'minFitTime': 0.0, 'maxFitDecayTau': 0.1, 'minFitLengthOverDecay': 1.0, 'minFitAmp': 0.0, 'region': u'all', 'maxFitRiseTau': 0.0, 'minFitRiseTau': 0.0, 'fitAmplitude': False, 'fitFractionalError': False, 'maxFitFractionalError': 0.6, 'minFitFractionalError': 0.0}}, 'pos': (28.276747294451468, 300.65470337693057), 'class': 'EventFilter', 'name': 'StatsEventFilter'}, {'state': {'pos': (-228.42735843801336, 252.26510707588858), 'bypass': False, 'ctrl': {'fitDecayTau': False, 'maxFitTime': 0.0, 'fitTime': False, 'minFitDecayTau': 0.0, 'maxFitLengthOverDecay': 0.0, 'maxFitAmp': 1.0, 'fitLengthOverDecay': False, 'fitRiseTau': False, 'minFitTime': 0.0, 'maxFitDecayTau': 0.0, 'minFitLengthOverDecay': 0.0, 'minFitAmp': 0.0, 'region': u'all', 'maxFitRiseTau': 0.0, 'minFitRiseTau': 0.0, 'fitAmplitude': True, 'fitFractionalError': False, 'maxFitFractionalError': 0.0, 'minFitFractionalError': 0.0}}, 'pos': (-228.42735843801336, 252.26510707588858), 'class': 'EventFilter', 'name': 'EventSignFilter'}, {'state': {'text': "events = args['events']\nrgn = args['regions']\n\n## region lengths\npreLen = rgn['PreRegion'][1] - rgn['PreRegion'][0]\npostLen = rgn['PostRegion'][1] - rgn['PostRegion'][0]\n\npreEvents = events[events['region']=='PreRegion']\nnPrePos = (preEvents['fitAmplitude'] > 0).sum()\nnPreNeg = len(preEvents) - nPrePos\n\npostEvents = events[events['region']=='PostRegion']\nnPostPos = (postEvents['fitAmplitude'] > 0).sum()\nnPostNeg = len(postEvents) - nPostPos\n\npostNegScore = (nPostNeg/postLen) - (nPreNeg/preLen)\nif postNegScore < 0:\n    postNegScore = 0.0\npostPosScore = (nPostPos/postLen) - (nPrePos/preLen)\nif postPosScore < 0:\n    postPosScore = 0.0\n\npostScore = postNegScore + postPosScore\n\n## direct score calculation\n\ndirScore = 0.0\n\ndirEvents = events[events['region']=='DirRegion']\nif len(dirEvents) > 0:\n    dirScore = np.abs(dirEvents['fitAmplitude']).sum() * 1e11\n\ndirFit = args['directFit']\nif dirFit['directFitValid'] and dirFit['directFitSubtracted']: \n    dirScore = np.abs(dirFit['directFitPeak']) * 1e11\n\nscores = {\n    'PostScore': postScore,\n    'DirScore': dirScore,\n    'PostPositiveScore': postPosScore,\n    'PostNegativeScore': postNegScore,\n}\nreturn {'output': scores}", 'terminals': OrderedDict([('output', {'multi': False, 'io': 'out', 'renamable': True, 'multiable': False, 'removable': False, 'optional': False}), ('regions', {'multi': False, 'io': 'in', 'renamable': False, 'multiable': False, 'removable': False, 'optional': False}), ('stats', {'multi': False, 'io': 'in', 'renamable': False, 'multiable': False, 'removable': False, 'optional': False}), ('events', {'multi': False, 'io': 'in', 'renamable': False, 'multiable': False, 'removable': False, 'optional': False}), ('directFit', {'multi': False, 'io': 'in', 'renamable': True, 'multiable': True, 'removable': True, 'optional': False})]), 'pos': (282.0635693663543, -39.50446482010368), 'bypass': False}, 'pos': (282.0635693663543, -39.50446482010368), 'class': 'PythonEval', 'name': 'Scores'}, {'state': {'text': "fh = args['file']\nspotSize = fh.info().get('Scanner', {}).get('spotSize', 0.0)\nreturn {'output': {'spotSize': spotSize}}", 'terminals': OrderedDict([('output', {'multi': False, 'io': 'out', 'renamable': True, 'multiable': False, 'removable': False, 'optional': False}), ('data', {'multi': False, 'io': 'in', 'renamable': False, 'multiable': False, 'removable': False, 'optional': False}), ('file', {'multi': False, 'io': 'in', 'renamable': False, 'multiable': False, 'removable': False, 'optional': False})]), 'pos': (285.34362560032037, 173.41874033534947), 'bypass': False}, 'pos': (285.34362560032037, 173.41874033534947), 'class': 'PythonEval', 'name': 'ReadSpotSize'}, {'state': {'ui': {'rows': [['SourceFile', False, False, False, False, False, False], ['index', False, False, False, False, False, False], ['fitDecayTau', False, True, True, False, False, False], ['fitTimeToPeak', False, True, True, False, False, False], ['sum', False, False, False, False, False, False], ['fitTime', False, False, False, False, False, False], ['len', False, False, False, False, False, False], ['fitError', False, False, False, False, False, False], ['fitAmplitude', True, True, True, False, False, False], ['peak', False, False, False, False, False, False], ['time', False, False, False, False, False, False], ['region', False, False, False, False, False, False], ['fitFractionalError', False, False, False, False, False, False], ['peakIndex', False, False, False, False, False, False], ['fitRiseTau', False, True, True, False, False, False], ['fitLengthOverDecay', False, False, False, False, False, False]], 'cols': ['sum', 'avg', 'med', 'min', 'max', 'std']}, 'pos': (283.7099672788758, 285.2663761833224), 'bypass': False}, 'pos': (283.7099672788758, 285.2663761833224), 'class': 'StatsCalculator', 'name': 'StatsCalculator.0'}, {'state': {'text': "ev = args['events']\npost = ev[ev['region'] == 'PostRegion']\nif len(post) == 0:\n    return {'output': {'evokedLatency': -1.0}}\nelse:\n    return {'output': {'evokedLatency': post[0]['fitTime'] - 0.3}}\n", 'terminals': OrderedDict([('output', {'multi': False, 'io': 'out', 'renamable': True, 'multiable': False, 'removable': False, 'optional': False}), ('events', {'multi': False, 'io': 'in', 'renamable': True, 'multiable': False, 'removable': False, 'optional': False})]), 'pos': (285.42835393905125, 68.42103039327043), 'bypass': False}, 'pos': (285.42835393905125, 68.42103039327043), 'class': 'PythonEval', 'name': 'evokedLatency'}]
outputNode:
    pos: (526.516316260227, 75.49605150768275)
    bypass: False
