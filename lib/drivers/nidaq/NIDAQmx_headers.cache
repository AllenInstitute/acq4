(dp0
S'version'
p1
I20
sS'fileDefs'
p2
(dp3
S'NIDAQmx.h'
p4
(dp5
S'functions'
p6
(dp7
S'DAQmxSetSampClkSrc'
p8
((lp9
S'int32'
p10
aS'__stdcall'
p11
a((S'taskHandle'
p12
(lp13
S'TaskHandle'
p14
aNtp15
(S'data'
p16
(lp17
S'char'
p18
aS'*'
p19
aNtp20
tp21
tp22
sS'DAQmxSetCITwoEdgeSepSecondDigSyncEnable'
p23
((lp24
S'int32'
p25
ag11
a((S'taskHandle'
p26
(lp27
S'TaskHandle'
p28
aNtp29
(S'channel'
p30
(lp31
S'char'
p32
a(lp33
I-1
aaNtp34
(S'data'
p35
(lp36
S'bool32'
p37
aNtp38
tp39
tp40
sS'DAQmxTaskControl'
p41
((lp42
S'int32'
p43
ag11
a((S'taskHandle'
p44
(lp45
S'TaskHandle'
p46
aNtp47
(S'action'
p48
(lp49
S'int32'
p50
aNtp51
tp52
tp53
sS'DAQmxGetReadSleepTime'
p54
((lp55
S'int32'
p56
ag11
a((S'taskHandle'
p57
(lp58
S'TaskHandle'
p59
aNtp60
(S'data'
p61
(lp62
S'float64'
p63
ag19
aNtp64
tp65
tp66
sS'DAQmxGetCIDataXferMech'
p67
((lp68
S'int32'
p69
ag11
a((S'taskHandle'
p70
(lp71
S'TaskHandle'
p72
aNtp73
(S'channel'
p74
(lp75
S'char'
p76
a(lp77
I-1
aaNtp78
(S'data'
p79
(lp80
S'int32'
p81
ag19
aNtp82
tp83
tp84
sS'DAQmxResetAIDataXferCustomThreshold'
p85
((lp86
S'int32'
p87
ag11
a((S'taskHandle'
p88
(lp89
S'TaskHandle'
p90
aNtp91
(S'channel'
p92
(lp93
S'char'
p94
a(lp95
I-1
aaNtp96
tp97
tp98
sS'DAQmxLoadTask'
p99
((lp100
S'int32'
p101
ag11
a((S'taskName'
p102
(lp103
S'char'
p104
a(lp105
I-1
aaNtp106
(S'taskHandle'
p107
(lp108
S'TaskHandle'
p109
ag19
aNtp110
tp111
tp112
sS'DAQmxCreateAIResistanceChan'
p113
((lp114
S'int32'
p115
ag11
a((S'taskHandle'
p116
(lp117
S'TaskHandle'
p118
aNtp119
(S'physicalChannel'
p120
(lp121
S'char'
p122
a(lp123
I-1
aaNtp124
(S'nameToAssignToChannel'
p125
(lp126
S'char'
p127
a(lp128
I-1
aaNtp129
(S'minVal'
p130
(lp131
S'float64'
p132
aNtp133
(S'maxVal'
p134
(lp135
S'float64'
p136
aNtp137
(S'units'
p138
(lp139
S'int32'
p140
aNtp141
(S'resistanceConfig'
p142
(lp143
S'int32'
p144
aNtp145
(S'currentExcitSource'
p146
(lp147
S'int32'
p148
aNtp149
(S'currentExcitVal'
p150
(lp151
S'float64'
p152
aNtp153
(S'customScaleName'
p154
(lp155
S'char'
p156
a(lp157
I-1
aaNtp158
tp159
tp160
sS'DAQmxGetCICountEdgesActiveEdge'
p161
((lp162
S'int32'
p163
ag11
a((S'taskHandle'
p164
(lp165
S'TaskHandle'
p166
aNtp167
(S'channel'
p168
(lp169
S'char'
p170
a(lp171
I-1
aaNtp172
(S'data'
p173
(lp174
S'int32'
p175
ag19
aNtp176
tp177
tp178
sS'DAQmxGetSysDevNames'
p179
((lp180
S'int32'
p181
ag11
a((S'data'
p182
(lp183
S'char'
p184
ag19
aNtp185
(S'bufferSize'
p186
(lp187
S'uInt32'
p188
aNtp189
tp190
tp191
sS'DAQmxSwitchCreateScanList'
p192
((lp193
S'int32'
p194
ag11
a((S'scanList'
p195
(lp196
S'char'
p197
a(lp198
I-1
aaNtp199
(S'taskHandle'
p200
(lp201
S'TaskHandle'
p202
ag19
aNtp203
tp204
tp205
sS'DAQmxResetAITempUnits'
p206
((lp207
S'int32'
p208
ag11
a((S'taskHandle'
p209
(lp210
S'TaskHandle'
p211
aNtp212
(S'channel'
p213
(lp214
S'char'
p215
a(lp216
I-1
aaNtp217
tp218
tp219
sS'DAQmxGetAIStrainUnits'
p220
((lp221
S'int32'
p222
ag11
a((S'taskHandle'
p223
(lp224
S'TaskHandle'
p225
aNtp226
(S'channel'
p227
(lp228
S'char'
p229
a(lp230
I-1
aaNtp231
(S'data'
p232
(lp233
S'int32'
p234
ag19
aNtp235
tp236
tp237
sS'DAQmxGetSampClkDigFltrEnable'
p238
((lp239
S'int32'
p240
ag11
a((S'taskHandle'
p241
(lp242
S'TaskHandle'
p243
aNtp244
(S'data'
p245
(lp246
S'bool32'
p247
ag19
aNtp248
tp249
tp250
sS'DAQmxGetAIExcitActualVal'
p251
((lp252
S'int32'
p253
ag11
a((S'taskHandle'
p254
(lp255
S'TaskHandle'
p256
aNtp257
(S'channel'
p258
(lp259
S'char'
p260
a(lp261
I-1
aaNtp262
(S'data'
p263
(lp264
S'float64'
p265
ag19
aNtp266
tp267
tp268
sS'DAQmxGetCITimestampInitialSeconds'
p269
((lp270
S'int32'
p271
ag11
a((S'taskHandle'
p272
(lp273
S'TaskHandle'
p274
aNtp275
(S'channel'
p276
(lp277
S'char'
p278
a(lp279
I-1
aaNtp280
(S'data'
p281
(lp282
S'uInt32'
p283
ag19
aNtp284
tp285
tp286
sS'DAQmxSetCOPulseFreqInitialDelay'
p287
((lp288
S'int32'
p289
ag11
a((S'taskHandle'
p290
(lp291
S'TaskHandle'
p292
aNtp293
(S'channel'
p294
(lp295
S'char'
p296
a(lp297
I-1
aaNtp298
(S'data'
p299
(lp300
S'float64'
p301
aNtp302
tp303
tp304
sS'DAQmxSetSwitchDevAutoConnAnlgBus'
p305
((lp306
S'int32'
p307
ag11
a((S'deviceName'
p308
(lp309
S'char'
p310
a(lp311
I-1
aaNtp312
(S'data'
p313
(lp314
S'bool32'
p315
aNtp316
tp317
tp318
sS'DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseRate'
p319
((lp320
S'int32'
p321
ag11
a((S'taskHandle'
p322
(lp323
S'TaskHandle'
p324
aNtp325
(S'data'
p326
(lp327
S'float64'
p328
aNtp329
tp330
tp331
sS'DAQmxSetCIEncoderBInputDigSyncEnable'
p332
((lp333
S'int32'
p334
ag11
a((S'taskHandle'
p335
(lp336
S'TaskHandle'
p337
aNtp338
(S'channel'
p339
(lp340
S'char'
p341
a(lp342
I-1
aaNtp343
(S'data'
p344
(lp345
S'bool32'
p346
aNtp347
tp348
tp349
sS'DAQmxResetAIChanCalScaleType'
p350
((lp351
S'int32'
p352
ag11
a((S'taskHandle'
p353
(lp354
S'TaskHandle'
p355
aNtp356
(S'channel'
p357
(lp358
S'char'
p359
a(lp360
I-1
aaNtp361
tp362
tp363
sS'DAQmxResetCIFreqDigSyncEnable'
p364
((lp365
S'int32'
p366
ag11
a((S'taskHandle'
p367
(lp368
S'TaskHandle'
p369
aNtp370
(S'channel'
p371
(lp372
S'char'
p373
a(lp374
I-1
aaNtp375
tp376
tp377
sS'DAQmxGetAIChanCalVerifRefVals'
p378
((lp379
S'int32'
p380
ag11
a((S'taskHandle'
p381
(lp382
S'TaskHandle'
p383
aNtp384
(S'channel'
p385
(lp386
S'char'
p387
a(lp388
I-1
aaNtp389
(S'data'
p390
(lp391
S'float64'
p392
ag19
aNtp393
(S'arraySizeInSamples'
p394
(lp395
S'uInt32'
p396
aNtp397
tp398
tp399
sS'DAQmxGetAnlgEdgeRefTrigSlope'
p400
((lp401
S'int32'
p402
ag11
a((S'taskHandle'
p403
(lp404
S'TaskHandle'
p405
aNtp406
(S'data'
p407
(lp408
S'int32'
p409
ag19
aNtp410
tp411
tp412
sS'DAQmxGetDigEdgeRefTrigEdge'
p413
((lp414
S'int32'
p415
ag11
a((S'taskHandle'
p416
(lp417
S'TaskHandle'
p418
aNtp419
(S'data'
p420
(lp421
S'int32'
p422
ag19
aNtp423
tp424
tp425
sS'DAQmxSetHshkTrigType'
p426
((lp427
S'int32'
p428
ag11
a((S'taskHandle'
p429
(lp430
S'TaskHandle'
p431
aNtp432
(S'data'
p433
(lp434
S'int32'
p435
aNtp436
tp437
tp438
sS'DAQmxSetWriteWaitMode'
p439
((lp440
S'int32'
p441
ag11
a((S'taskHandle'
p442
(lp443
S'TaskHandle'
p444
aNtp445
(S'data'
p446
(lp447
S'int32'
p448
aNtp449
tp450
tp451
sS'DAQmxSetAIConvSrc'
p452
((lp453
S'int32'
p454
ag11
a((S'taskHandle'
p455
(lp456
S'TaskHandle'
p457
aNtp458
(S'data'
p459
(lp460
S'char'
p461
ag19
aNtp462
tp463
tp464
sS'DAQmxTristateOutputTerm'
p465
((lp466
S'int32'
p467
ag11
a((S'outputTerminal'
p468
(lp469
S'char'
p470
a(lp471
I-1
aaNtp472
tp473
tp474
sS'DAQmxGetExportedSampClkOutputBehavior'
p475
((lp476
S'int32'
p477
ag11
a((S'taskHandle'
p478
(lp479
S'TaskHandle'
p480
aNtp481
(S'data'
p482
(lp483
S'int32'
p484
ag19
aNtp485
tp486
tp487
sS'DAQmxGetPersistedChanAllowInteractiveDeletion'
p488
((lp489
S'int32'
p490
ag11
a((S'channel'
p491
(lp492
S'char'
p493
a(lp494
I-1
aaNtp495
(S'data'
p496
(lp497
S'bool32'
p498
ag19
aNtp499
tp500
tp501
sS'DAQmxGetAIAccelSensitivityUnits'
p502
((lp503
S'int32'
p504
ag11
a((S'taskHandle'
p505
(lp506
S'TaskHandle'
p507
aNtp508
(S'channel'
p509
(lp510
S'char'
p511
a(lp512
I-1
aaNtp513
(S'data'
p514
(lp515
S'int32'
p516
ag19
aNtp517
tp518
tp519
sS'DAQmxCreateCITwoEdgeSepChan'
p520
((lp521
S'int32'
p522
ag11
a((S'taskHandle'
p523
(lp524
S'TaskHandle'
p525
aNtp526
(S'counter'
p527
(lp528
S'char'
p529
a(lp530
I-1
aaNtp531
(S'nameToAssignToChannel'
p532
(lp533
S'char'
p534
a(lp535
I-1
aaNtp536
(S'minVal'
p537
(lp538
S'float64'
p539
aNtp540
(S'maxVal'
p541
(lp542
S'float64'
p543
aNtp544
(S'units'
p545
(lp546
S'int32'
p547
aNtp548
(S'firstEdge'
p549
(lp550
S'int32'
p551
aNtp552
(S'secondEdge'
p553
(lp554
S'int32'
p555
aNtp556
(S'customScaleName'
p557
(lp558
S'char'
p559
a(lp560
I-1
aaNtp561
tp562
tp563
sS'DAQmxGetCISemiPeriodDigFltrMinPulseWidth'
p564
((lp565
S'int32'
p566
ag11
a((S'taskHandle'
p567
(lp568
S'TaskHandle'
p569
aNtp570
(S'channel'
p571
(lp572
S'char'
p573
a(lp574
I-1
aaNtp575
(S'data'
p576
(lp577
S'float64'
p578
ag19
aNtp579
tp580
tp581
sS'DAQmxRestoreLastExtCalConst'
p582
((lp583
S'int32'
p584
ag11
a((S'deviceName'
p585
(lp586
S'char'
p587
a(lp588
I-1
aaNtp589
tp590
tp591
sS'DAQmxSetHshkSampleInputDataWhen'
p592
((lp593
S'int32'
p594
ag11
a((S'taskHandle'
p595
(lp596
S'TaskHandle'
p597
aNtp598
(S'data'
p599
(lp600
S'int32'
p601
aNtp602
tp603
tp604
sS'DAQmxGetCITwoEdgeSepSecondDigFltrEnable'
p605
((lp606
S'int32'
p607
ag11
a((S'taskHandle'
p608
(lp609
S'TaskHandle'
p610
aNtp611
(S'channel'
p612
(lp613
S'char'
p614
a(lp615
I-1
aaNtp616
(S'data'
p617
(lp618
S'bool32'
p619
ag19
aNtp620
tp621
tp622
sS'DAQmxGetNthTaskChannel'
p623
((lp624
S'int32'
p625
ag11
a((S'taskHandle'
p626
(lp627
S'TaskHandle'
p628
aNtp629
(S'index'
p630
(lp631
S'uInt32'
p632
aNtp633
(S'buffer'
p634
(lp635
S'char'
p636
a(lp637
I-1
aaNtp638
(S'bufferSize'
p639
(lp640
S'int32'
p641
aNtp642
tp643
tp644
sS'DAQmxSetCIMin'
p645
((lp646
S'int32'
p647
ag11
a((S'taskHandle'
p648
(lp649
S'TaskHandle'
p650
aNtp651
(S'channel'
p652
(lp653
S'char'
p654
a(lp655
I-1
aaNtp656
(S'data'
p657
(lp658
S'float64'
p659
aNtp660
tp661
tp662
sS'DAQmxSetup1520Cal'
p663
((lp664
S'int32'
p665
ag11
a((S'calHandle'
p666
(lp667
S'uInt32'
p668
aNtp669
(S'channelNames'
p670
(lp671
S'char'
p672
a(lp673
I-1
aaNtp674
(S'gain'
p675
(lp676
S'float64'
p677
aNtp678
tp679
tp680
sS'DAQmxGetCIEncoderZInputDigFltrTimebaseSrc'
p681
((lp682
S'int32'
p683
ag11
a((S'taskHandle'
p684
(lp685
S'TaskHandle'
p686
aNtp687
(S'channel'
p688
(lp689
S'char'
p690
a(lp691
I-1
aaNtp692
(S'data'
p693
(lp694
S'char'
p695
ag19
aNtp696
(S'bufferSize'
p697
(lp698
S'uInt32'
p699
aNtp700
tp701
tp702
sS'DAQmxGetAITermCfg'
p703
((lp704
S'int32'
p705
ag11
a((S'taskHandle'
p706
(lp707
S'TaskHandle'
p708
aNtp709
(S'channel'
p710
(lp711
S'char'
p712
a(lp713
I-1
aaNtp714
(S'data'
p715
(lp716
S'int32'
p717
ag19
aNtp718
tp719
tp720
sS'DAQmxSetCICustomScaleName'
p721
((lp722
S'int32'
p723
ag11
a((S'taskHandle'
p724
(lp725
S'TaskHandle'
p726
aNtp727
(S'channel'
p728
(lp729
S'char'
p730
a(lp731
I-1
aaNtp732
(S'data'
p733
(lp734
S'char'
p735
ag19
aNtp736
tp737
tp738
sS'DAQmxSetAnlgWinStartTrigSrc'
p739
((lp740
S'int32'
p741
ag11
a((S'taskHandle'
p742
(lp743
S'TaskHandle'
p744
aNtp745
(S'data'
p746
(lp747
S'char'
p748
ag19
aNtp749
tp750
tp751
sS'DAQmxDisableRefTrig'
p752
((lp753
S'int32'
p754
ag11
a((S'taskHandle'
p755
(lp756
S'TaskHandle'
p757
aNtp758
tp759
tp760
sS'DAQmxResetAIBridgeShuntCalGainAdjust'
p761
((lp762
S'int32'
p763
ag11
a((S'taskHandle'
p764
(lp765
S'TaskHandle'
p766
aNtp767
(S'channel'
p768
(lp769
S'char'
p770
a(lp771
I-1
aaNtp772
tp773
tp774
sS'DAQmxSetAIThrmcplType'
p775
((lp776
S'int32'
p777
ag11
a((S'taskHandle'
p778
(lp779
S'TaskHandle'
p780
aNtp781
(S'channel'
p782
(lp783
S'char'
p784
a(lp785
I-1
aaNtp786
(S'data'
p787
(lp788
S'int32'
p789
aNtp790
tp791
tp792
sS'DAQmxResetExportedDividedSampClkTimebaseOutputTerm'
p793
((lp794
S'int32'
p795
ag11
a((S'taskHandle'
p796
(lp797
S'TaskHandle'
p798
aNtp799
tp800
tp801
sS'DAQmxResetAOMax'
p802
((lp803
S'int32'
p804
ag11
a((S'taskHandle'
p805
(lp806
S'TaskHandle'
p807
aNtp808
(S'channel'
p809
(lp810
S'char'
p811
a(lp812
I-1
aaNtp813
tp814
tp815
sS'DAQmxSetAIInputSrc'
p816
((lp817
S'int32'
p818
ag11
a((S'taskHandle'
p819
(lp820
S'TaskHandle'
p821
aNtp822
(S'channel'
p823
(lp824
S'char'
p825
a(lp826
I-1
aaNtp827
(S'data'
p828
(lp829
S'char'
p830
ag19
aNtp831
tp832
tp833
sS'DAQmxSetAnlgWinRefTrigWhen'
p834
((lp835
S'int32'
p836
ag11
a((S'taskHandle'
p837
(lp838
S'TaskHandle'
p839
aNtp840
(S'data'
p841
(lp842
S'int32'
p843
aNtp844
tp845
tp846
sS'DAQmxGetAIRawDataCompressionType'
p847
((lp848
S'int32'
p849
ag11
a((S'taskHandle'
p850
(lp851
S'TaskHandle'
p852
aNtp853
(S'channel'
p854
(lp855
S'char'
p856
a(lp857
I-1
aaNtp858
(S'data'
p859
(lp860
S'int32'
p861
ag19
aNtp862
tp863
tp864
sS'DAQmxMSeriesCalAdjust'
p865
((lp866
S'int32'
p867
ag11
a((S'calHandle'
p868
(lp869
S'uInt32'
p870
aNtp871
(S'referenceVoltage'
p872
(lp873
S'float64'
p874
aNtp875
tp876
tp877
sS'DAQmxGetAIACExcitWireMode'
p878
((lp879
S'int32'
p880
ag11
a((S'taskHandle'
p881
(lp882
S'TaskHandle'
p883
aNtp884
(S'channel'
p885
(lp886
S'char'
p887
a(lp888
I-1
aaNtp889
(S'data'
p890
(lp891
S'int32'
p892
ag19
aNtp893
tp894
tp895
sS'DAQmxCfgBurstHandshakingTimingImportClock'
p896
((lp897
S'int32'
p898
ag11
a((S'taskHandle'
p899
(lp900
S'TaskHandle'
p901
aNtp902
(S'sampleMode'
p903
(lp904
S'int32'
p905
aNtp906
(S'sampsPerChan'
p907
(lp908
S'uInt64'
p909
aNtp910
(S'sampleClkRate'
p911
(lp912
S'float64'
p913
aNtp914
(S'sampleClkSrc'
p915
(lp916
S'char'
p917
a(lp918
I-1
aaNtp919
(S'sampleClkActiveEdge'
p920
(lp921
S'int32'
p922
aNtp923
(S'pauseWhen'
p924
(lp925
S'int32'
p926
aNtp927
(S'readyEventActiveLevel'
p928
(lp929
S'int32'
p930
aNtp931
tp932
tp933
sS'DAQmxResetExported20MHzTimebaseOutputTerm'
p934
((lp935
S'int32'
p936
ag11
a((S'taskHandle'
p937
(lp938
S'TaskHandle'
p939
aNtp940
tp941
tp942
sS'DAQmxGetDigEdgeArmStartTrigSrc'
p943
((lp944
S'int32'
p945
ag11
a((S'taskHandle'
p946
(lp947
S'TaskHandle'
p948
aNtp949
(S'data'
p950
(lp951
S'char'
p952
ag19
aNtp953
(S'bufferSize'
p954
(lp955
S'uInt32'
p956
aNtp957
tp958
tp959
sS'DAQmxCreateAIVoltageChanWithExcit'
p960
((lp961
S'int32'
p962
ag11
a((S'taskHandle'
p963
(lp964
S'TaskHandle'
p965
aNtp966
(S'physicalChannel'
p967
(lp968
S'char'
p969
a(lp970
I-1
aaNtp971
(S'nameToAssignToChannel'
p972
(lp973
S'char'
p974
a(lp975
I-1
aaNtp976
(S'terminalConfig'
p977
(lp978
S'int32'
p979
aNtp980
(S'minVal'
p981
(lp982
S'float64'
p983
aNtp984
(S'maxVal'
p985
(lp986
S'float64'
p987
aNtp988
(S'units'
p989
(lp990
S'int32'
p991
aNtp992
(S'bridgeConfig'
p993
(lp994
S'int32'
p995
aNtp996
(S'voltageExcitSource'
p997
(lp998
S'int32'
p999
aNtp1000
(S'voltageExcitVal'
p1001
(lp1002
S'float64'
p1003
aNtp1004
(S'useExcitForScaling'
p1005
(lp1006
S'bool32'
p1007
aNtp1008
(S'customScaleName'
p1009
(lp1010
S'char'
p1011
a(lp1012
I-1
aaNtp1013
tp1014
tp1015
sS'DAQmxSetCIPeriodDigFltrEnable'
p1016
((lp1017
S'int32'
p1018
ag11
a((S'taskHandle'
p1019
(lp1020
S'TaskHandle'
p1021
aNtp1022
(S'channel'
p1023
(lp1024
S'char'
p1025
a(lp1026
I-1
aaNtp1027
(S'data'
p1028
(lp1029
S'bool32'
p1030
aNtp1031
tp1032
tp1033
sS'DAQmxSetCICtrTimebaseDigFltrTimebaseSrc'
p1034
((lp1035
S'int32'
p1036
ag11
a((S'taskHandle'
p1037
(lp1038
S'TaskHandle'
p1039
aNtp1040
(S'channel'
p1041
(lp1042
S'char'
p1043
a(lp1044
I-1
aaNtp1045
(S'data'
p1046
(lp1047
S'char'
p1048
ag19
aNtp1049
tp1050
tp1051
sS'DAQmxGetAIACExcitFreq'
p1052
((lp1053
S'int32'
p1054
ag11
a((S'taskHandle'
p1055
(lp1056
S'TaskHandle'
p1057
aNtp1058
(S'channel'
p1059
(lp1060
S'char'
p1061
a(lp1062
I-1
aaNtp1063
(S'data'
p1064
(lp1065
S'float64'
p1066
ag19
aNtp1067
tp1068
tp1069
sS'DAQmxCreateTEDSAIMicrophoneChan'
p1070
((lp1071
S'int32'
p1072
ag11
a((S'taskHandle'
p1073
(lp1074
S'TaskHandle'
p1075
aNtp1076
(S'physicalChannel'
p1077
(lp1078
S'char'
p1079
a(lp1080
I-1
aaNtp1081
(S'nameToAssignToChannel'
p1082
(lp1083
S'char'
p1084
a(lp1085
I-1
aaNtp1086
(S'terminalConfig'
p1087
(lp1088
S'int32'
p1089
aNtp1090
(S'units'
p1091
(lp1092
S'int32'
p1093
aNtp1094
(S'maxSndPressLevel'
p1095
(lp1096
S'float64'
p1097
aNtp1098
(S'currentExcitSource'
p1099
(lp1100
S'int32'
p1101
aNtp1102
(S'currentExcitVal'
p1103
(lp1104
S'float64'
p1105
aNtp1106
(S'customScaleName'
p1107
(lp1108
S'char'
p1109
a(lp1110
I-1
aaNtp1111
tp1112
tp1113
sS'DAQmxCfgDigEdgeAdvTrig'
p1114
((lp1115
S'int32'
p1116
ag11
a((S'taskHandle'
p1117
(lp1118
S'TaskHandle'
p1119
aNtp1120
(S'triggerSource'
p1121
(lp1122
S'char'
p1123
a(lp1124
I-1
aaNtp1125
(S'triggerEdge'
p1126
(lp1127
S'int32'
p1128
aNtp1129
tp1130
tp1131
sS'DAQmxSSeriesCalAdjust'
p1132
((lp1133
S'int32'
p1134
ag11
a((S'calHandle'
p1135
(lp1136
S'uInt32'
p1137
aNtp1138
(S'referenceVoltage'
p1139
(lp1140
S'float64'
p1141
aNtp1142
tp1143
tp1144
sS'DAQmxGetDigEdgeAdvTrigEdge'
p1145
((lp1146
S'int32'
p1147
ag11
a((S'taskHandle'
p1148
(lp1149
S'TaskHandle'
p1150
aNtp1151
(S'data'
p1152
(lp1153
S'int32'
p1154
ag19
aNtp1155
tp1156
tp1157
sS'DAQmxGetCISemiPeriodDigFltrEnable'
p1158
((lp1159
S'int32'
p1160
ag11
a((S'taskHandle'
p1161
(lp1162
S'TaskHandle'
p1163
aNtp1164
(S'channel'
p1165
(lp1166
S'char'
p1167
a(lp1168
I-1
aaNtp1169
(S'data'
p1170
(lp1171
S'bool32'
p1172
ag19
aNtp1173
tp1174
tp1175
sS'DAQmxGetAnlgWinPauseTrigCoupling'
p1176
((lp1177
S'int32'
p1178
ag11
a((S'taskHandle'
p1179
(lp1180
S'TaskHandle'
p1181
aNtp1182
(S'data'
p1183
(lp1184
S'int32'
p1185
ag19
aNtp1186
tp1187
tp1188
sS'DAQmxResetCIFreqDiv'
p1189
((lp1190
S'int32'
p1191
ag11
a((S'taskHandle'
p1192
(lp1193
S'TaskHandle'
p1194
aNtp1195
(S'channel'
p1196
(lp1197
S'char'
p1198
a(lp1199
I-1
aaNtp1200
tp1201
tp1202
sS'DAQmxGetCOPulseDone'
p1203
((lp1204
S'int32'
p1205
ag11
a((S'taskHandle'
p1206
(lp1207
S'TaskHandle'
p1208
aNtp1209
(S'channel'
p1210
(lp1211
S'char'
p1212
a(lp1213
I-1
aaNtp1214
(S'data'
p1215
(lp1216
S'bool32'
p1217
ag19
aNtp1218
tp1219
tp1220
sS'DAQmxSetSampClkTimebaseRate'
p1221
((lp1222
S'int32'
p1223
ag11
a((S'taskHandle'
p1224
(lp1225
S'TaskHandle'
p1226
aNtp1227
(S'data'
p1228
(lp1229
S'float64'
p1230
aNtp1231
tp1232
tp1233
sS'DAQmxGetCIPulseWidthDigFltrTimebaseSrc'
p1234
((lp1235
S'int32'
p1236
ag11
a((S'taskHandle'
p1237
(lp1238
S'TaskHandle'
p1239
aNtp1240
(S'channel'
p1241
(lp1242
S'char'
p1243
a(lp1244
I-1
aaNtp1245
(S'data'
p1246
(lp1247
S'char'
p1248
ag19
aNtp1249
(S'bufferSize'
p1250
(lp1251
S'uInt32'
p1252
aNtp1253
tp1254
tp1255
sS'DAQmxCfgBurstHandshakingTimingExportClock'
p1256
((lp1257
S'int32'
p1258
ag11
a((S'taskHandle'
p1259
(lp1260
S'TaskHandle'
p1261
aNtp1262
(S'sampleMode'
p1263
(lp1264
S'int32'
p1265
aNtp1266
(S'sampsPerChan'
p1267
(lp1268
S'uInt64'
p1269
aNtp1270
(S'sampleClkRate'
p1271
(lp1272
S'float64'
p1273
aNtp1274
(S'sampleClkOutpTerm'
p1275
(lp1276
S'char'
p1277
a(lp1278
I-1
aaNtp1279
(S'sampleClkPulsePolarity'
p1280
(lp1281
S'int32'
p1282
aNtp1283
(S'pauseWhen'
p1284
(lp1285
S'int32'
p1286
aNtp1287
(S'readyEventActiveLevel'
p1288
(lp1289
S'int32'
p1290
aNtp1291
tp1292
tp1293
sS'DAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc'
p1294
((lp1295
S'int32'
p1296
ag11
a((S'taskHandle'
p1297
(lp1298
S'TaskHandle'
p1299
aNtp1300
(S'data'
p1301
(lp1302
S'char'
p1303
ag19
aNtp1304
(S'bufferSize'
p1305
(lp1306
S'uInt32'
p1307
aNtp1308
tp1309
tp1310
sS'DAQmxGetAIChanCalExpDate'
p1311
((lp1312
S'int32'
p1313
ag11
a((S'taskHandle'
p1314
(lp1315
S'TaskHandle'
p1316
aNtp1317
(S'channelName'
p1318
(lp1319
S'char'
p1320
a(lp1321
I-1
aaNtp1322
(S'year'
p1323
(lp1324
S'uInt32'
p1325
ag19
aNtp1326
(S'month'
p1327
(lp1328
S'uInt32'
p1329
ag19
aNtp1330
(S'day'
p1331
(lp1332
S'uInt32'
p1333
ag19
aNtp1334
(S'hour'
p1335
(lp1336
S'uInt32'
p1337
ag19
aNtp1338
(S'minute'
p1339
(lp1340
S'uInt32'
p1341
ag19
aNtp1342
tp1343
tp1344
sS'DAQmxResetAICurrentShuntResistance'
p1345
((lp1346
S'int32'
p1347
ag11
a((S'taskHandle'
p1348
(lp1349
S'TaskHandle'
p1350
aNtp1351
(S'channel'
p1352
(lp1353
S'char'
p1354
a(lp1355
I-1
aaNtp1356
tp1357
tp1358
sS'DAQmxSetDIDataXferReqCond'
p1359
((lp1360
S'int32'
p1361
ag11
a((S'taskHandle'
p1362
(lp1363
S'TaskHandle'
p1364
aNtp1365
(S'channel'
p1366
(lp1367
S'char'
p1368
a(lp1369
I-1
aaNtp1370
(S'data'
p1371
(lp1372
S'int32'
p1373
aNtp1374
tp1375
tp1376
sS'DAQmxResetSampClkTimebaseActiveEdge'
p1377
((lp1378
S'int32'
p1379
ag11
a((S'taskHandle'
p1380
(lp1381
S'TaskHandle'
p1382
aNtp1383
tp1384
tp1385
sS'DAQmxGetRefClkRate'
p1386
((lp1387
S'int32'
p1388
ag11
a((S'taskHandle'
p1389
(lp1390
S'TaskHandle'
p1391
aNtp1392
(S'data'
p1393
(lp1394
S'float64'
p1395
ag19
aNtp1396
tp1397
tp1398
sS'DAQmxSetExportedCtrOutEventToggleIdleState'
p1399
((lp1400
S'int32'
p1401
ag11
a((S'taskHandle'
p1402
(lp1403
S'TaskHandle'
p1404
aNtp1405
(S'data'
p1406
(lp1407
S'int32'
p1408
aNtp1409
tp1410
tp1411
sS'DAQmxCreateTEDSAIVoltageChanWithExcit'
p1412
((lp1413
S'int32'
p1414
ag11
a((S'taskHandle'
p1415
(lp1416
S'TaskHandle'
p1417
aNtp1418
(S'physicalChannel'
p1419
(lp1420
S'char'
p1421
a(lp1422
I-1
aaNtp1423
(S'nameToAssignToChannel'
p1424
(lp1425
S'char'
p1426
a(lp1427
I-1
aaNtp1428
(S'terminalConfig'
p1429
(lp1430
S'int32'
p1431
aNtp1432
(S'minVal'
p1433
(lp1434
S'float64'
p1435
aNtp1436
(S'maxVal'
p1437
(lp1438
S'float64'
p1439
aNtp1440
(S'units'
p1441
(lp1442
S'int32'
p1443
aNtp1444
(S'voltageExcitSource'
p1445
(lp1446
S'int32'
p1447
aNtp1448
(S'voltageExcitVal'
p1449
(lp1450
S'float64'
p1451
aNtp1452
(S'customScaleName'
p1453
(lp1454
S'char'
p1455
a(lp1456
I-1
aaNtp1457
tp1458
tp1459
sS'DAQmxGetAILowpassEnable'
p1460
((lp1461
S'int32'
p1462
ag11
a((S'taskHandle'
p1463
(lp1464
S'TaskHandle'
p1465
aNtp1466
(S'channel'
p1467
(lp1468
S'char'
p1469
a(lp1470
I-1
aaNtp1471
(S'data'
p1472
(lp1473
S'bool32'
p1474
ag19
aNtp1475
tp1476
tp1477
sS'DAQmxSetSampClkDigFltrTimebaseSrc'
p1478
((lp1479
S'int32'
p1480
ag11
a((S'taskHandle'
p1481
(lp1482
S'TaskHandle'
p1483
aNtp1484
(S'data'
p1485
(lp1486
S'char'
p1487
ag19
aNtp1488
tp1489
tp1490
sS'DAQmxGetCOOutputType'
p1491
((lp1492
S'int32'
p1493
ag11
a((S'taskHandle'
p1494
(lp1495
S'TaskHandle'
p1496
aNtp1497
(S'channel'
p1498
(lp1499
S'char'
p1500
a(lp1501
I-1
aaNtp1502
(S'data'
p1503
(lp1504
S'int32'
p1505
ag19
aNtp1506
tp1507
tp1508
sS'DAQmxResetStartTrigDelay'
p1509
((lp1510
S'int32'
p1511
ag11
a((S'taskHandle'
p1512
(lp1513
S'TaskHandle'
p1514
aNtp1515
tp1516
tp1517
sS'DAQmxCreateTEDSAIResistanceChan'
p1518
((lp1519
S'int32'
p1520
ag11
a((S'taskHandle'
p1521
(lp1522
S'TaskHandle'
p1523
aNtp1524
(S'physicalChannel'
p1525
(lp1526
S'char'
p1527
a(lp1528
I-1
aaNtp1529
(S'nameToAssignToChannel'
p1530
(lp1531
S'char'
p1532
a(lp1533
I-1
aaNtp1534
(S'minVal'
p1535
(lp1536
S'float64'
p1537
aNtp1538
(S'maxVal'
p1539
(lp1540
S'float64'
p1541
aNtp1542
(S'units'
p1543
(lp1544
S'int32'
p1545
aNtp1546
(S'resistanceConfig'
p1547
(lp1548
S'int32'
p1549
aNtp1550
(S'currentExcitSource'
p1551
(lp1552
S'int32'
p1553
aNtp1554
(S'currentExcitVal'
p1555
(lp1556
S'float64'
p1557
aNtp1558
(S'customScaleName'
p1559
(lp1560
S'char'
p1561
a(lp1562
I-1
aaNtp1563
tp1564
tp1565
sS'DAQmxSetDigEdgeStartTrigEdge'
p1566
((lp1567
S'int32'
p1568
ag11
a((S'taskHandle'
p1569
(lp1570
S'TaskHandle'
p1571
aNtp1572
(S'data'
p1573
(lp1574
S'int32'
p1575
aNtp1576
tp1577
tp1578
sS'DAQmxSetCIFreqDigFltrMinPulseWidth'
p1579
((lp1580
S'int32'
p1581
ag11
a((S'taskHandle'
p1582
(lp1583
S'TaskHandle'
p1584
aNtp1585
(S'channel'
p1586
(lp1587
S'char'
p1588
a(lp1589
I-1
aaNtp1590
(S'data'
p1591
(lp1592
S'float64'
p1593
aNtp1594
tp1595
tp1596
sS'DAQmxSetCICountEdgesCountDirDigFltrEnable'
p1597
((lp1598
S'int32'
p1599
ag11
a((S'taskHandle'
p1600
(lp1601
S'TaskHandle'
p1602
aNtp1603
(S'channel'
p1604
(lp1605
S'char'
p1606
a(lp1607
I-1
aaNtp1608
(S'data'
p1609
(lp1610
S'bool32'
p1611
aNtp1612
tp1613
tp1614
sS'DAQmxSetDigEdgeStartTrigSrc'
p1615
((lp1616
S'int32'
p1617
ag11
a((S'taskHandle'
p1618
(lp1619
S'TaskHandle'
p1620
aNtp1621
(S'data'
p1622
(lp1623
S'char'
p1624
ag19
aNtp1625
tp1626
tp1627
sS'DAQmxResetTrigAttribute'
p1628
((lp1629
S'int32'
p1630
ag11
a((S'taskHandle'
p1631
(lp1632
S'TaskHandle'
p1633
aNtp1634
(S'attribute'
p1635
(lp1636
S'int32'
p1637
aNtp1638
tp1639
tp1640
sS'DAQmxGetExportedHshkEventPulseWidth'
p1641
((lp1642
S'int32'
p1643
ag11
a((S'taskHandle'
p1644
(lp1645
S'TaskHandle'
p1646
aNtp1647
(S'data'
p1648
(lp1649
S'float64'
p1650
ag19
aNtp1651
tp1652
tp1653
sS'DAQmxGetAIMax'
p1654
((lp1655
S'int32'
p1656
ag11
a((S'taskHandle'
p1657
(lp1658
S'TaskHandle'
p1659
aNtp1660
(S'channel'
p1661
(lp1662
S'char'
p1663
a(lp1664
I-1
aaNtp1665
(S'data'
p1666
(lp1667
S'float64'
p1668
ag19
aNtp1669
tp1670
tp1671
sS'DAQmxResetAODACRngLow'
p1672
((lp1673
S'int32'
p1674
ag11
a((S'taskHandle'
p1675
(lp1676
S'TaskHandle'
p1677
aNtp1678
(S'channel'
p1679
(lp1680
S'char'
p1681
a(lp1682
I-1
aaNtp1683
tp1684
tp1685
sS'DAQmxResetAISampAndHoldEnable'
p1686
((lp1687
S'int32'
p1688
ag11
a((S'taskHandle'
p1689
(lp1690
S'TaskHandle'
p1691
aNtp1692
(S'channel'
p1693
(lp1694
S'char'
p1695
a(lp1696
I-1
aaNtp1697
tp1698
tp1699
sS'DAQmxResetAIChanCalVerifAcqVals'
p1700
((lp1701
S'int32'
p1702
ag11
a((S'taskHandle'
p1703
(lp1704
S'TaskHandle'
p1705
aNtp1706
(S'channel'
p1707
(lp1708
S'char'
p1709
a(lp1710
I-1
aaNtp1711
tp1712
tp1713
sS'DAQmxSetAOTermCfg'
p1714
((lp1715
S'int32'
p1716
ag11
a((S'taskHandle'
p1717
(lp1718
S'TaskHandle'
p1719
aNtp1720
(S'channel'
p1721
(lp1722
S'char'
p1723
a(lp1724
I-1
aaNtp1725
(S'data'
p1726
(lp1727
S'int32'
p1728
aNtp1729
tp1730
tp1731
sS'DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc'
p1732
((lp1733
S'int32'
p1734
ag11
a((S'taskHandle'
p1735
(lp1736
S'TaskHandle'
p1737
aNtp1738
(S'channel'
p1739
(lp1740
S'char'
p1741
a(lp1742
I-1
aaNtp1743
(S'data'
p1744
(lp1745
S'char'
p1746
ag19
aNtp1747
tp1748
tp1749
sS'DAQmxResetCISemiPeriodDigFltrEnable'
p1750
((lp1751
S'int32'
p1752
ag11
a((S'taskHandle'
p1753
(lp1754
S'TaskHandle'
p1755
aNtp1756
(S'channel'
p1757
(lp1758
S'char'
p1759
a(lp1760
I-1
aaNtp1761
tp1762
tp1763
sS'DAQmxSetAODACRefSrc'
p1764
((lp1765
S'int32'
p1766
ag11
a((S'taskHandle'
p1767
(lp1768
S'TaskHandle'
p1769
aNtp1770
(S'channel'
p1771
(lp1772
S'char'
p1773
a(lp1774
I-1
aaNtp1775
(S'data'
p1776
(lp1777
S'int32'
p1778
aNtp1779
tp1780
tp1781
sS'DAQmxPerformBridgeOffsetNullingCal'
p1782
((lp1783
S'int32'
p1784
ag11
a((S'taskHandle'
p1785
(lp1786
S'TaskHandle'
p1787
aNtp1788
(S'channel'
p1789
(lp1790
S'char'
p1791
a(lp1792
I-1
aaNtp1793
tp1794
tp1795
sS'DAQmxGetCITwoEdgeSepUnits'
p1796
((lp1797
S'int32'
p1798
ag11
a((S'taskHandle'
p1799
(lp1800
S'TaskHandle'
p1801
aNtp1802
(S'channel'
p1803
(lp1804
S'char'
p1805
a(lp1806
I-1
aaNtp1807
(S'data'
p1808
(lp1809
S'int32'
p1810
ag19
aNtp1811
tp1812
tp1813
sS'DAQmxSetAIChanCalTableScaledVals'
p1814
((lp1815
S'int32'
p1816
ag11
a((S'taskHandle'
p1817
(lp1818
S'TaskHandle'
p1819
aNtp1820
(S'channel'
p1821
(lp1822
S'char'
p1823
a(lp1824
I-1
aaNtp1825
(S'data'
p1826
(lp1827
S'float64'
p1828
ag19
aNtp1829
(S'arraySizeInSamples'
p1830
(lp1831
S'uInt32'
p1832
aNtp1833
tp1834
tp1835
sS'DAQmxGetDOOutputDriveType'
p1836
((lp1837
S'int32'
p1838
ag11
a((S'taskHandle'
p1839
(lp1840
S'TaskHandle'
p1841
aNtp1842
(S'channel'
p1843
(lp1844
S'char'
p1845
a(lp1846
I-1
aaNtp1847
(S'data'
p1848
(lp1849
S'int32'
p1850
ag19
aNtp1851
tp1852
tp1853
sS'DAQmxResetAnlgLvlPauseTrigCoupling'
p1854
((lp1855
S'int32'
p1856
ag11
a((S'taskHandle'
p1857
(lp1858
S'TaskHandle'
p1859
aNtp1860
tp1861
tp1862
sS'DAQmxGetCIPeriodDigFltrEnable'
p1863
((lp1864
S'int32'
p1865
ag11
a((S'taskHandle'
p1866
(lp1867
S'TaskHandle'
p1868
aNtp1869
(S'channel'
p1870
(lp1871
S'char'
p1872
a(lp1873
I-1
aaNtp1874
(S'data'
p1875
(lp1876
S'bool32'
p1877
ag19
aNtp1878
tp1879
tp1880
sS'DAQmxResetDigEdgeAdvTrigSrc'
p1881
((lp1882
S'int32'
p1883
ag11
a((S'taskHandle'
p1884
(lp1885
S'TaskHandle'
p1886
aNtp1887
tp1888
tp1889
sS'DAQmxGetAIRawSampSize'
p1890
((lp1891
S'int32'
p1892
ag11
a((S'taskHandle'
p1893
(lp1894
S'TaskHandle'
p1895
aNtp1896
(S'channel'
p1897
(lp1898
S'char'
p1899
a(lp1900
I-1
aaNtp1901
(S'data'
p1902
(lp1903
S'uInt32'
p1904
ag19
aNtp1905
tp1906
tp1907
sS'DAQmxGetSampClkMaxRate'
p1908
((lp1909
S'int32'
p1910
ag11
a((S'taskHandle'
p1911
(lp1912
S'TaskHandle'
p1913
aNtp1914
(S'data'
p1915
(lp1916
S'float64'
p1917
ag19
aNtp1918
tp1919
tp1920
sS'DAQmxResetAnlgWinRefTrigSrc'
p1921
((lp1922
S'int32'
p1923
ag11
a((S'taskHandle'
p1924
(lp1925
S'TaskHandle'
p1926
aNtp1927
tp1928
tp1929
sS'DAQmxSetCIEncoderZInputDigFltrMinPulseWidth'
p1930
((lp1931
S'int32'
p1932
ag11
a((S'taskHandle'
p1933
(lp1934
S'TaskHandle'
p1935
aNtp1936
(S'channel'
p1937
(lp1938
S'char'
p1939
a(lp1940
I-1
aaNtp1941
(S'data'
p1942
(lp1943
S'float64'
p1944
aNtp1945
tp1946
tp1947
sS'DAQmxGetAnlgEdgeStartTrigCoupling'
p1948
((lp1949
S'int32'
p1950
ag11
a((S'taskHandle'
p1951
(lp1952
S'TaskHandle'
p1953
aNtp1954
(S'data'
p1955
(lp1956
S'int32'
p1957
ag19
aNtp1958
tp1959
tp1960
sS'DAQmxGetCITwoEdgeSepSecondEdge'
p1961
((lp1962
S'int32'
p1963
ag11
a((S'taskHandle'
p1964
(lp1965
S'TaskHandle'
p1966
aNtp1967
(S'channel'
p1968
(lp1969
S'char'
p1970
a(lp1971
I-1
aaNtp1972
(S'data'
p1973
(lp1974
S'int32'
p1975
ag19
aNtp1976
tp1977
tp1978
sS'DAQmxGetSampTimingType'
p1979
((lp1980
S'int32'
p1981
ag11
a((S'taskHandle'
p1982
(lp1983
S'TaskHandle'
p1984
aNtp1985
(S'data'
p1986
(lp1987
S'int32'
p1988
ag19
aNtp1989
tp1990
tp1991
sS'DAQmxSetCIEncoderBInputDigFltrMinPulseWidth'
p1992
((lp1993
S'int32'
p1994
ag11
a((S'taskHandle'
p1995
(lp1996
S'TaskHandle'
p1997
aNtp1998
(S'channel'
p1999
(lp2000
S'char'
p2001
a(lp2002
I-1
aaNtp2003
(S'data'
p2004
(lp2005
S'float64'
p2006
aNtp2007
tp2008
tp2009
sS'DAQmxGetDevCOPhysicalChans'
p2010
((lp2011
S'int32'
p2012
ag11
a((S'device'
p2013
(lp2014
S'char'
p2015
a(lp2016
I-1
aaNtp2017
(S'data'
p2018
(lp2019
S'char'
p2020
ag19
aNtp2021
(S'bufferSize'
p2022
(lp2023
S'uInt32'
p2024
aNtp2025
tp2026
tp2027
sS'DAQmxResetDigLvlPauseTrigDigFltrEnable'
p2028
((lp2029
S'int32'
p2030
ag11
a((S'taskHandle'
p2031
(lp2032
S'TaskHandle'
p2033
aNtp2034
tp2035
tp2036
sS'DAQmxSwitchWaitForSettling'
p2037
((lp2038
S'int32'
p2039
ag11
a((S'deviceName'
p2040
(lp2041
S'char'
p2042
a(lp2043
I-1
aaNtp2044
tp2045
tp2046
sS'DAQmxSetCIFreqDigFltrTimebaseSrc'
p2047
((lp2048
S'int32'
p2049
ag11
a((S'taskHandle'
p2050
(lp2051
S'TaskHandle'
p2052
aNtp2053
(S'channel'
p2054
(lp2055
S'char'
p2056
a(lp2057
I-1
aaNtp2058
(S'data'
p2059
(lp2060
S'char'
p2061
ag19
aNtp2062
tp2063
tp2064
sS'DAQmxGetAIChanCalHasValidCalInfo'
p2065
((lp2066
S'int32'
p2067
ag11
a((S'taskHandle'
p2068
(lp2069
S'TaskHandle'
p2070
aNtp2071
(S'channel'
p2072
(lp2073
S'char'
p2074
a(lp2075
I-1
aaNtp2076
(S'data'
p2077
(lp2078
S'bool32'
p2079
ag19
aNtp2080
tp2081
tp2082
sS'DAQmxResetCIEncoderAInputTerm'
p2083
((lp2084
S'int32'
p2085
ag11
a((S'taskHandle'
p2086
(lp2087
S'TaskHandle'
p2088
aNtp2089
(S'channel'
p2090
(lp2091
S'char'
p2092
a(lp2093
I-1
aaNtp2094
tp2095
tp2096
sS'DAQmxDeviceSupportsCal'
p2097
((lp2098
S'int32'
p2099
ag11
a((S'deviceName'
p2100
(lp2101
S'char'
p2102
a(lp2103
I-1
aaNtp2104
(S'calSupported'
p2105
(lp2106
S'bool32'
p2107
ag19
aNtp2108
tp2109
tp2110
sS'DAQmxGetCalUserDefinedInfoMaxSize'
p2111
((lp2112
S'int32'
p2113
ag11
a((S'deviceName'
p2114
(lp2115
S'char'
p2116
a(lp2117
I-1
aaNtp2118
(S'data'
p2119
(lp2120
S'uInt32'
p2121
ag19
aNtp2122
tp2123
tp2124
sS'DAQmxSetAIExcitActualVal'
p2125
((lp2126
S'int32'
p2127
ag11
a((S'taskHandle'
p2128
(lp2129
S'TaskHandle'
p2130
aNtp2131
(S'channel'
p2132
(lp2133
S'char'
p2134
a(lp2135
I-1
aaNtp2136
(S'data'
p2137
(lp2138
S'float64'
p2139
aNtp2140
tp2141
tp2142
sS'DAQmxSetWriteRegenMode'
p2143
((lp2144
S'int32'
p2145
ag11
a((S'taskHandle'
p2146
(lp2147
S'TaskHandle'
p2148
aNtp2149
(S'data'
p2150
(lp2151
S'int32'
p2152
aNtp2153
tp2154
tp2155
sS'DAQmxResetCIPeriodDigFltrTimebaseSrc'
p2156
((lp2157
S'int32'
p2158
ag11
a((S'taskHandle'
p2159
(lp2160
S'TaskHandle'
p2161
aNtp2162
(S'channel'
p2163
(lp2164
S'char'
p2165
a(lp2166
I-1
aaNtp2167
tp2168
tp2169
sS'DAQmxGetAnlgWinRefTrigBtm'
p2170
((lp2171
S'int32'
p2172
ag11
a((S'taskHandle'
p2173
(lp2174
S'TaskHandle'
p2175
aNtp2176
(S'data'
p2177
(lp2178
S'float64'
p2179
ag19
aNtp2180
tp2181
tp2182
sS'DAQmxResetAnlgLvlPauseTrigSrc'
p2183
((lp2184
S'int32'
p2185
ag11
a((S'taskHandle'
p2186
(lp2187
S'TaskHandle'
p2188
aNtp2189
tp2190
tp2191
sS'DAQmxGetAITEDSUnits'
p2192
((lp2193
S'int32'
p2194
ag11
a((S'taskHandle'
p2195
(lp2196
S'TaskHandle'
p2197
aNtp2198
(S'channel'
p2199
(lp2200
S'char'
p2201
a(lp2202
I-1
aaNtp2203
(S'data'
p2204
(lp2205
S'char'
p2206
ag19
aNtp2207
(S'bufferSize'
p2208
(lp2209
S'uInt32'
p2210
aNtp2211
tp2212
tp2213
sS'DAQmxGetExportedSyncPulseEventOutputTerm'
p2214
((lp2215
S'int32'
p2216
ag11
a((S'taskHandle'
p2217
(lp2218
S'TaskHandle'
p2219
aNtp2220
(S'data'
p2221
(lp2222
S'char'
p2223
ag19
aNtp2224
(S'bufferSize'
p2225
(lp2226
S'uInt32'
p2227
aNtp2228
tp2229
tp2230
sS'DAQmxResetCOPulseFreqInitialDelay'
p2231
((lp2232
S'int32'
p2233
ag11
a((S'taskHandle'
p2234
(lp2235
S'TaskHandle'
p2236
aNtp2237
(S'channel'
p2238
(lp2239
S'char'
p2240
a(lp2241
I-1
aaNtp2242
tp2243
tp2244
sS'DAQmxSetDODataXferMech'
p2245
((lp2246
S'int32'
p2247
ag11
a((S'taskHandle'
p2248
(lp2249
S'TaskHandle'
p2250
aNtp2251
(S'channel'
p2252
(lp2253
S'char'
p2254
a(lp2255
I-1
aaNtp2256
(S'data'
p2257
(lp2258
S'int32'
p2259
aNtp2260
tp2261
tp2262
sS'DAQmxGetExtendedErrorInfo'
p2263
((lp2264
S'int32'
p2265
ag11
a((S'errorString'
p2266
(lp2267
S'char'
p2268
a(lp2269
I-1
aaNtp2270
(S'bufferSize'
p2271
(lp2272
S'uInt32'
p2273
aNtp2274
tp2275
tp2276
sS'DAQmxSetReadOverWrite'
p2277
((lp2278
S'int32'
p2279
ag11
a((S'taskHandle'
p2280
(lp2281
S'TaskHandle'
p2282
aNtp2283
(S'data'
p2284
(lp2285
S'int32'
p2286
aNtp2287
tp2288
tp2289
sS'DAQmxCreateCILinEncoderChan'
p2290
((lp2291
S'int32'
p2292
ag11
a((S'taskHandle'
p2293
(lp2294
S'TaskHandle'
p2295
aNtp2296
(S'counter'
p2297
(lp2298
S'char'
p2299
a(lp2300
I-1
aaNtp2301
(S'nameToAssignToChannel'
p2302
(lp2303
S'char'
p2304
a(lp2305
I-1
aaNtp2306
(S'decodingType'
p2307
(lp2308
S'int32'
p2309
aNtp2310
(S'ZidxEnable'
p2311
(lp2312
S'bool32'
p2313
aNtp2314
(S'ZidxVal'
p2315
(lp2316
S'float64'
p2317
aNtp2318
(S'ZidxPhase'
p2319
(lp2320
S'int32'
p2321
aNtp2322
(S'units'
p2323
(lp2324
S'int32'
p2325
aNtp2326
(S'distPerPulse'
p2327
(lp2328
S'float64'
p2329
aNtp2330
(S'initialPos'
p2331
(lp2332
S'float64'
p2333
aNtp2334
(S'customScaleName'
p2335
(lp2336
S'char'
p2337
a(lp2338
I-1
aaNtp2339
tp2340
tp2341
sS'DAQmxResetReadRelativeTo'
p2342
((lp2343
S'int32'
p2344
ag11
a((S'taskHandle'
p2345
(lp2346
S'TaskHandle'
p2347
aNtp2348
tp2349
tp2350
sS'DAQmxSetHshkStartCond'
p2351
((lp2352
S'int32'
p2353
ag11
a((S'taskHandle'
p2354
(lp2355
S'TaskHandle'
p2356
aNtp2357
(S'data'
p2358
(lp2359
S'int32'
p2360
aNtp2361
tp2362
tp2363
sS'DAQmxGetDIDigFltrMinPulseWidth'
p2364
((lp2365
S'int32'
p2366
ag11
a((S'taskHandle'
p2367
(lp2368
S'TaskHandle'
p2369
aNtp2370
(S'channel'
p2371
(lp2372
S'char'
p2373
a(lp2374
I-1
aaNtp2375
(S'data'
p2376
(lp2377
S'float64'
p2378
ag19
aNtp2379
tp2380
tp2381
sS'DAQmxResetChanDescr'
p2382
((lp2383
S'int32'
p2384
ag11
a((S'taskHandle'
p2385
(lp2386
S'TaskHandle'
p2387
aNtp2388
(S'channel'
p2389
(lp2390
S'char'
p2391
a(lp2392
I-1
aaNtp2393
tp2394
tp2395
sS'DAQmxGetAILVDTSensitivity'
p2396
((lp2397
S'int32'
p2398
ag11
a((S'taskHandle'
p2399
(lp2400
S'TaskHandle'
p2401
aNtp2402
(S'channel'
p2403
(lp2404
S'char'
p2405
a(lp2406
I-1
aaNtp2407
(S'data'
p2408
(lp2409
S'float64'
p2410
ag19
aNtp2411
tp2412
tp2413
sS'DAQmxCfgHandshakingTiming'
p2414
((lp2415
S'int32'
p2416
ag11
a((S'taskHandle'
p2417
(lp2418
S'TaskHandle'
p2419
aNtp2420
(S'sampleMode'
p2421
(lp2422
S'int32'
p2423
aNtp2424
(S'sampsPerChan'
p2425
(lp2426
S'uInt64'
p2427
aNtp2428
tp2429
tp2430
sS'DAQmxGetSwitchChanMaxDCCarryPwr'
p2431
((lp2432
S'int32'
p2433
ag11
a((S'switchChannelName'
p2434
(lp2435
S'char'
p2436
a(lp2437
I-1
aaNtp2438
(S'data'
p2439
(lp2440
S'float64'
p2441
ag19
aNtp2442
tp2443
tp2444
sS'DAQmxGetScaleType'
p2445
((lp2446
S'int32'
p2447
ag11
a((S'scaleName'
p2448
(lp2449
S'char'
p2450
a(lp2451
I-1
aaNtp2452
(S'data'
p2453
(lp2454
S'int32'
p2455
ag19
aNtp2456
tp2457
tp2458
sS'DAQmxGetCICountEdgesTerm'
p2459
((lp2460
S'int32'
p2461
ag11
a((S'taskHandle'
p2462
(lp2463
S'TaskHandle'
p2464
aNtp2465
(S'channel'
p2466
(lp2467
S'char'
p2468
a(lp2469
I-1
aaNtp2470
(S'data'
p2471
(lp2472
S'char'
p2473
ag19
aNtp2474
(S'bufferSize'
p2475
(lp2476
S'uInt32'
p2477
aNtp2478
tp2479
tp2480
sS'DAQmxAddGlobalChansToTask'
p2481
((lp2482
S'int32'
p2483
ag11
a((S'taskHandle'
p2484
(lp2485
S'TaskHandle'
p2486
aNtp2487
(S'channelNames'
p2488
(lp2489
S'char'
p2490
a(lp2491
I-1
aaNtp2492
tp2493
tp2494
sS'DAQmxGetAnlgEdgeStartTrigLvl'
p2495
((lp2496
S'int32'
p2497
ag11
a((S'taskHandle'
p2498
(lp2499
S'TaskHandle'
p2500
aNtp2501
(S'data'
p2502
(lp2503
S'float64'
p2504
ag19
aNtp2505
tp2506
tp2507
sS'DAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc'
p2508
((lp2509
S'int32'
p2510
ag11
a((S'taskHandle'
p2511
(lp2512
S'TaskHandle'
p2513
aNtp2514
(S'data'
p2515
(lp2516
S'char'
p2517
ag19
aNtp2518
tp2519
tp2520
sS'DAQmxSetCIEncoderAInputDigFltrEnable'
p2521
((lp2522
S'int32'
p2523
ag11
a((S'taskHandle'
p2524
(lp2525
S'TaskHandle'
p2526
aNtp2527
(S'channel'
p2528
(lp2529
S'char'
p2530
a(lp2531
I-1
aaNtp2532
(S'data'
p2533
(lp2534
S'bool32'
p2535
aNtp2536
tp2537
tp2538
sS'DAQmxGetSwitchChanAttribute'
p2539
((lp2540
S'int32'
p2541
aS'__cdecl'
p2542
a((S'switchChannelName'
p2543
(lp2544
S'char'
p2545
a(lp2546
I-1
aaNtp2547
(S'attribute'
p2548
(lp2549
S'int32'
p2550
aNtp2551
(S'value'
p2552
(lp2553
S'void'
p2554
ag19
aNtp2555
tp2556
tp2557
sS'DAQmxSetAIImpedance'
p2558
((lp2559
S'int32'
p2560
ag11
a((S'taskHandle'
p2561
(lp2562
S'TaskHandle'
p2563
aNtp2564
(S'channel'
p2565
(lp2566
S'char'
p2567
a(lp2568
I-1
aaNtp2569
(S'data'
p2570
(lp2571
S'float64'
p2572
aNtp2573
tp2574
tp2575
sS'DAQmxGetAOResolution'
p2576
((lp2577
S'int32'
p2578
ag11
a((S'taskHandle'
p2579
(lp2580
S'TaskHandle'
p2581
aNtp2582
(S'channel'
p2583
(lp2584
S'char'
p2585
a(lp2586
I-1
aaNtp2587
(S'data'
p2588
(lp2589
S'float64'
p2590
ag19
aNtp2591
tp2592
tp2593
sS'DAQmxGetCIFreqDigSyncEnable'
p2594
((lp2595
S'int32'
p2596
ag11
a((S'taskHandle'
p2597
(lp2598
S'TaskHandle'
p2599
aNtp2600
(S'channel'
p2601
(lp2602
S'char'
p2603
a(lp2604
I-1
aaNtp2605
(S'data'
p2606
(lp2607
S'bool32'
p2608
ag19
aNtp2609
tp2610
tp2611
sS'DAQmxWriteAnalogF64'
p2612
((lp2613
S'int32'
p2614
ag11
a((S'taskHandle'
p2615
(lp2616
S'TaskHandle'
p2617
aNtp2618
(S'numSampsPerChan'
p2619
(lp2620
S'int32'
p2621
aNtp2622
(S'autoStart'
p2623
(lp2624
S'bool32'
p2625
aNtp2626
(S'timeout'
p2627
(lp2628
S'float64'
p2629
aNtp2630
(S'dataLayout'
p2631
(lp2632
S'bool32'
p2633
aNtp2634
(S'writeArray'
p2635
(lp2636
S'float64'
p2637
a(lp2638
I-1
aaNtp2639
(S'sampsPerChanWritten'
p2640
(lp2641
S'int32'
p2642
ag19
aNtp2643
(S'reserved'
p2644
(lp2645
S'bool32'
p2646
ag19
aNtp2647
tp2648
tp2649
sS'DAQmxSetAIConvRate'
p2650
((lp2651
S'int32'
p2652
ag11
a((S'taskHandle'
p2653
(lp2654
S'TaskHandle'
p2655
aNtp2656
(S'data'
p2657
(lp2658
S'float64'
p2659
aNtp2660
tp2661
tp2662
sS'DAQmxGetExportedWatchdogExpiredEventOutputTerm'
p2663
((lp2664
S'int32'
p2665
ag11
a((S'taskHandle'
p2666
(lp2667
S'TaskHandle'
p2668
aNtp2669
(S'data'
p2670
(lp2671
S'char'
p2672
ag19
aNtp2673
(S'bufferSize'
p2674
(lp2675
S'uInt32'
p2676
aNtp2677
tp2678
tp2679
sS'DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate'
p2680
((lp2681
S'int32'
p2682
ag11
a((S'taskHandle'
p2683
(lp2684
S'TaskHandle'
p2685
aNtp2686
(S'channel'
p2687
(lp2688
S'char'
p2689
a(lp2690
I-1
aaNtp2691
tp2692
tp2693
sS'DAQmxResetExportedRefTrigOutputTerm'
p2694
((lp2695
S'int32'
p2696
ag11
a((S'taskHandle'
p2697
(lp2698
S'TaskHandle'
p2699
aNtp2700
tp2701
tp2702
sS'DAQmxSetDigEdgeAdvTrigDigFltrEnable'
p2703
((lp2704
S'int32'
p2705
ag11
a((S'taskHandle'
p2706
(lp2707
S'TaskHandle'
p2708
aNtp2709
(S'data'
p2710
(lp2711
S'bool32'
p2712
aNtp2713
tp2714
tp2715
sS'DAQmxResetRealTimeAttribute'
p2716
((lp2717
S'int32'
p2718
ag11
a((S'taskHandle'
p2719
(lp2720
S'TaskHandle'
p2721
aNtp2722
(S'attribute'
p2723
(lp2724
S'int32'
p2725
aNtp2726
tp2727
tp2728
sS'DAQmxResetCIPeriodDigFltrTimebaseRate'
p2729
((lp2730
S'int32'
p2731
ag11
a((S'taskHandle'
p2732
(lp2733
S'TaskHandle'
p2734
aNtp2735
(S'channel'
p2736
(lp2737
S'char'
p2738
a(lp2739
I-1
aaNtp2740
tp2741
tp2742
sS'DAQmxSetCISemiPeriodDigFltrTimebaseSrc'
p2743
((lp2744
S'int32'
p2745
ag11
a((S'taskHandle'
p2746
(lp2747
S'TaskHandle'
p2748
aNtp2749
(S'channel'
p2750
(lp2751
S'char'
p2752
a(lp2753
I-1
aaNtp2754
(S'data'
p2755
(lp2756
S'char'
p2757
ag19
aNtp2758
tp2759
tp2760
sS'DAQmxResetDelayFromSampClkDelayUnits'
p2761
((lp2762
S'int32'
p2763
ag11
a((S'taskHandle'
p2764
(lp2765
S'TaskHandle'
p2766
aNtp2767
tp2768
tp2769
sS'DAQmxResetCIEncoderBInputDigFltrTimebaseRate'
p2770
((lp2771
S'int32'
p2772
ag11
a((S'taskHandle'
p2773
(lp2774
S'TaskHandle'
p2775
aNtp2776
(S'channel'
p2777
(lp2778
S'char'
p2779
a(lp2780
I-1
aaNtp2781
tp2782
tp2783
sS'DAQmxSetAOOutputImpedance'
p2784
((lp2785
S'int32'
p2786
ag11
a((S'taskHandle'
p2787
(lp2788
S'TaskHandle'
p2789
aNtp2790
(S'channel'
p2791
(lp2792
S'char'
p2793
a(lp2794
I-1
aaNtp2795
(S'data'
p2796
(lp2797
S'float64'
p2798
aNtp2799
tp2800
tp2801
sS'DAQmxGetBufferAttribute'
p2802
((lp2803
S'int32'
p2804
ag2542
a((S'taskHandle'
p2805
(lp2806
S'TaskHandle'
p2807
aNtp2808
(S'attribute'
p2809
(lp2810
S'int32'
p2811
aNtp2812
(S'value'
p2813
(lp2814
S'void'
p2815
ag19
aNtp2816
tp2817
tp2818
sS'DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc'
p2819
((lp2820
S'int32'
p2821
ag11
a((S'taskHandle'
p2822
(lp2823
S'TaskHandle'
p2824
aNtp2825
(S'channel'
p2826
(lp2827
S'char'
p2828
a(lp2829
I-1
aaNtp2830
(S'data'
p2831
(lp2832
S'char'
p2833
ag19
aNtp2834
tp2835
tp2836
sS'DAQmxResetAnlgWinStartTrigSrc'
p2837
((lp2838
S'int32'
p2839
ag11
a((S'taskHandle'
p2840
(lp2841
S'TaskHandle'
p2842
aNtp2843
tp2844
tp2845
sS'DAQmxResetAIResistanceCfg'
p2846
((lp2847
S'int32'
p2848
ag11
a((S'taskHandle'
p2849
(lp2850
S'TaskHandle'
p2851
aNtp2852
(S'channel'
p2853
(lp2854
S'char'
p2855
a(lp2856
I-1
aaNtp2857
tp2858
tp2859
sS'DAQmxESeriesCalAdjust'
p2860
((lp2861
S'int32'
p2862
ag11
a((S'calHandle'
p2863
(lp2864
S'uInt32'
p2865
aNtp2866
(S'referenceVoltage'
p2867
(lp2868
S'float64'
p2869
aNtp2870
tp2871
tp2872
sS'DAQmxResetAIChanCalDesc'
p2873
((lp2874
S'int32'
p2875
ag11
a((S'taskHandle'
p2876
(lp2877
S'TaskHandle'
p2878
aNtp2879
(S'channel'
p2880
(lp2881
S'char'
p2882
a(lp2883
I-1
aaNtp2884
tp2885
tp2886
sS'DAQmxResetDigEdgeArmStartTrigDigSyncEnable'
p2887
((lp2888
S'int32'
p2889
ag11
a((S'taskHandle'
p2890
(lp2891
S'TaskHandle'
p2892
aNtp2893
tp2894
tp2895
sS'DAQmxResetCIEncoderDecodingType'
p2896
((lp2897
S'int32'
p2898
ag11
a((S'taskHandle'
p2899
(lp2900
S'TaskHandle'
p2901
aNtp2902
(S'channel'
p2903
(lp2904
S'char'
p2905
a(lp2906
I-1
aaNtp2907
tp2908
tp2909
sS'DAQmxSetSampClkActiveEdge'
p2910
((lp2911
S'int32'
p2912
ag11
a((S'taskHandle'
p2913
(lp2914
S'TaskHandle'
p2915
aNtp2916
(S'data'
p2917
(lp2918
S'int32'
p2919
aNtp2920
tp2921
tp2922
sS'DAQmxResetCICtrTimebaseDigFltrMinPulseWidth'
p2923
((lp2924
S'int32'
p2925
ag11
a((S'taskHandle'
p2926
(lp2927
S'TaskHandle'
p2928
aNtp2929
(S'channel'
p2930
(lp2931
S'char'
p2932
a(lp2933
I-1
aaNtp2934
tp2935
tp2936
sS'DAQmxGetRealTimeConvLateErrorsToWarnings'
p2937
((lp2938
S'int32'
p2939
ag11
a((S'taskHandle'
p2940
(lp2941
S'TaskHandle'
p2942
aNtp2943
(S'data'
p2944
(lp2945
S'bool32'
p2946
ag19
aNtp2947
tp2948
tp2949
sS'DAQmxGetAOResolutionUnits'
p2950
((lp2951
S'int32'
p2952
ag11
a((S'taskHandle'
p2953
(lp2954
S'TaskHandle'
p2955
aNtp2956
(S'channel'
p2957
(lp2958
S'char'
p2959
a(lp2960
I-1
aaNtp2961
(S'data'
p2962
(lp2963
S'int32'
p2964
ag19
aNtp2965
tp2966
tp2967
sS'DAQmxSetCICtrTimebaseDigFltrTimebaseRate'
p2968
((lp2969
S'int32'
p2970
ag11
a((S'taskHandle'
p2971
(lp2972
S'TaskHandle'
p2973
aNtp2974
(S'channel'
p2975
(lp2976
S'char'
p2977
a(lp2978
I-1
aaNtp2979
(S'data'
p2980
(lp2981
S'float64'
p2982
aNtp2983
tp2984
tp2985
sS'DAQmxGetCIEncoderZInputTerm'
p2986
((lp2987
S'int32'
p2988
ag11
a((S'taskHandle'
p2989
(lp2990
S'TaskHandle'
p2991
aNtp2992
(S'channel'
p2993
(lp2994
S'char'
p2995
a(lp2996
I-1
aaNtp2997
(S'data'
p2998
(lp2999
S'char'
p3000
ag19
aNtp3001
(S'bufferSize'
p3002
(lp3003
S'uInt32'
p3004
aNtp3005
tp3006
tp3007
sS'DAQmxSetCIFreqDiv'
p3008
((lp3009
S'int32'
p3010
ag11
a((S'taskHandle'
p3011
(lp3012
S'TaskHandle'
p3013
aNtp3014
(S'channel'
p3015
(lp3016
S'char'
p3017
a(lp3018
I-1
aaNtp3019
(S'data'
p3020
(lp3021
S'uInt32'
p3022
aNtp3023
tp3024
tp3025
sS'DAQmxResetCIPeriodDigFltrEnable'
p3026
((lp3027
S'int32'
p3028
ag11
a((S'taskHandle'
p3029
(lp3030
S'TaskHandle'
p3031
aNtp3032
(S'channel'
p3033
(lp3034
S'char'
p3035
a(lp3036
I-1
aaNtp3037
tp3038
tp3039
sS'DAQmxResetHshkStartCond'
p3040
((lp3041
S'int32'
p3042
ag11
a((S'taskHandle'
p3043
(lp3044
S'TaskHandle'
p3045
aNtp3046
tp3047
tp3048
sS'DAQmxGetCIFreqUnits'
p3049
((lp3050
S'int32'
p3051
ag11
a((S'taskHandle'
p3052
(lp3053
S'TaskHandle'
p3054
aNtp3055
(S'channel'
p3056
(lp3057
S'char'
p3058
a(lp3059
I-1
aaNtp3060
(S'data'
p3061
(lp3062
S'int32'
p3063
ag19
aNtp3064
tp3065
tp3066
sS'DAQmxGetDigPatternStartTrigSrc'
p3067
((lp3068
S'int32'
p3069
ag11
a((S'taskHandle'
p3070
(lp3071
S'TaskHandle'
p3072
aNtp3073
(S'data'
p3074
(lp3075
S'char'
p3076
ag19
aNtp3077
(S'bufferSize'
p3078
(lp3079
S'uInt32'
p3080
aNtp3081
tp3082
tp3083
sS'DAQmxGetSampClkTimebaseActiveEdge'
p3084
((lp3085
S'int32'
p3086
ag11
a((S'taskHandle'
p3087
(lp3088
S'TaskHandle'
p3089
aNtp3090
(S'data'
p3091
(lp3092
S'int32'
p3093
ag19
aNtp3094
tp3095
tp3096
sS'DAQmxSetAnlgEdgeStartTrigSlope'
p3097
((lp3098
S'int32'
p3099
ag11
a((S'taskHandle'
p3100
(lp3101
S'TaskHandle'
p3102
aNtp3103
(S'data'
p3104
(lp3105
S'int32'
p3106
aNtp3107
tp3108
tp3109
sS'DAQmxGetDevProductType'
p3110
((lp3111
S'int32'
p3112
ag11
a((S'device'
p3113
(lp3114
S'char'
p3115
a(lp3116
I-1
aaNtp3117
(S'data'
p3118
(lp3119
S'char'
p3120
ag19
aNtp3121
(S'bufferSize'
p3122
(lp3123
S'uInt32'
p3124
aNtp3125
tp3126
tp3127
sS'DAQmxSetAILeadWireResistance'
p3128
((lp3129
S'int32'
p3130
ag11
a((S'taskHandle'
p3131
(lp3132
S'TaskHandle'
p3133
aNtp3134
(S'channel'
p3135
(lp3136
S'char'
p3137
a(lp3138
I-1
aaNtp3139
(S'data'
p3140
(lp3141
S'float64'
p3142
aNtp3143
tp3144
tp3145
sS'DAQmxGetCIEncoderAInputDigFltrEnable'
p3146
((lp3147
S'int32'
p3148
ag11
a((S'taskHandle'
p3149
(lp3150
S'TaskHandle'
p3151
aNtp3152
(S'channel'
p3153
(lp3154
S'char'
p3155
a(lp3156
I-1
aaNtp3157
(S'data'
p3158
(lp3159
S'bool32'
p3160
ag19
aNtp3161
tp3162
tp3163
sS'DAQmxGetExtCalLastTemp'
p3164
((lp3165
S'int32'
p3166
ag11
a((S'deviceName'
p3167
(lp3168
S'char'
p3169
a(lp3170
I-1
aaNtp3171
(S'data'
p3172
(lp3173
S'float64'
p3174
ag19
aNtp3175
tp3176
tp3177
sS'DAQmxGetCIMeasType'
p3178
((lp3179
S'int32'
p3180
ag11
a((S'taskHandle'
p3181
(lp3182
S'TaskHandle'
p3183
aNtp3184
(S'channel'
p3185
(lp3186
S'char'
p3187
a(lp3188
I-1
aaNtp3189
(S'data'
p3190
(lp3191
S'int32'
p3192
ag19
aNtp3193
tp3194
tp3195
sS'DAQmxResetAnlgWinPauseTrigCoupling'
p3196
((lp3197
S'int32'
p3198
ag11
a((S'taskHandle'
p3199
(lp3200
S'TaskHandle'
p3201
aNtp3202
tp3203
tp3204
sS'DAQmxGetWriteCurrWritePos'
p3205
((lp3206
S'int32'
p3207
ag11
a((S'taskHandle'
p3208
(lp3209
S'TaskHandle'
p3210
aNtp3211
(S'data'
p3212
(lp3213
S'uInt64'
p3214
ag19
aNtp3215
tp3216
tp3217
sS'DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate'
p3218
((lp3219
S'int32'
p3220
ag11
a((S'taskHandle'
p3221
(lp3222
S'TaskHandle'
p3223
aNtp3224
(S'channel'
p3225
(lp3226
S'char'
p3227
a(lp3228
I-1
aaNtp3229
(S'data'
p3230
(lp3231
S'float64'
p3232
ag19
aNtp3233
tp3234
tp3235
sS'DAQmxResetRealTimeConvLateErrorsToWarnings'
p3236
((lp3237
S'int32'
p3238
ag11
a((S'taskHandle'
p3239
(lp3240
S'TaskHandle'
p3241
aNtp3242
tp3243
tp3244
sS'DAQmxResetCITwoEdgeSepUnits'
p3245
((lp3246
S'int32'
p3247
ag11
a((S'taskHandle'
p3248
(lp3249
S'TaskHandle'
p3250
aNtp3251
(S'channel'
p3252
(lp3253
S'char'
p3254
a(lp3255
I-1
aaNtp3256
tp3257
tp3258
sS'DAQmxCreateLinScale'
p3259
((lp3260
S'int32'
p3261
ag11
a((S'name'
p3262
(lp3263
S'char'
p3264
a(lp3265
I-1
aaNtp3266
(S'slope'
p3267
(lp3268
S'float64'
p3269
aNtp3270
(S'yIntercept'
p3271
(lp3272
S'float64'
p3273
aNtp3274
(S'preScaledUnits'
p3275
(lp3276
S'int32'
p3277
aNtp3278
(S'scaledUnits'
p3279
(lp3280
S'char'
p3281
a(lp3282
I-1
aaNtp3283
tp3284
tp3285
sS'DAQmxResetAnlgEdgeStartTrigSrc'
p3286
((lp3287
S'int32'
p3288
ag11
a((S'taskHandle'
p3289
(lp3290
S'TaskHandle'
p3291
aNtp3292
tp3293
tp3294
sS'DAQmxResetReadSleepTime'
p3295
((lp3296
S'int32'
p3297
ag11
a((S'taskHandle'
p3298
(lp3299
S'TaskHandle'
p3300
aNtp3301
tp3302
tp3303
sS'DAQmxResetAnlgWinPauseTrigWhen'
p3304
((lp3305
S'int32'
p3306
ag11
a((S'taskHandle'
p3307
(lp3308
S'TaskHandle'
p3309
aNtp3310
tp3311
tp3312
sS'DAQmxSetExportedDividedSampClkTimebaseOutputTerm'
p3313
((lp3314
S'int32'
p3315
ag11
a((S'taskHandle'
p3316
(lp3317
S'TaskHandle'
p3318
aNtp3319
(S'data'
p3320
(lp3321
S'char'
p3322
ag19
aNtp3323
tp3324
tp3325
sS'DAQmxGetAODataXferMech'
p3326
((lp3327
S'int32'
p3328
ag11
a((S'taskHandle'
p3329
(lp3330
S'TaskHandle'
p3331
aNtp3332
(S'channel'
p3333
(lp3334
S'char'
p3335
a(lp3336
I-1
aaNtp3337
(S'data'
p3338
(lp3339
S'int32'
p3340
ag19
aNtp3341
tp3342
tp3343
sS'DAQmxGetCIFreqDiv'
p3344
((lp3345
S'int32'
p3346
ag11
a((S'taskHandle'
p3347
(lp3348
S'TaskHandle'
p3349
aNtp3350
(S'channel'
p3351
(lp3352
S'char'
p3353
a(lp3354
I-1
aaNtp3355
(S'data'
p3356
(lp3357
S'uInt32'
p3358
ag19
aNtp3359
tp3360
tp3361
sS'DAQmxSetScalePolyReverseCoeff'
p3362
((lp3363
S'int32'
p3364
ag11
a((S'scaleName'
p3365
(lp3366
S'char'
p3367
a(lp3368
I-1
aaNtp3369
(S'data'
p3370
(lp3371
S'float64'
p3372
ag19
aNtp3373
(S'arraySizeInSamples'
p3374
(lp3375
S'uInt32'
p3376
aNtp3377
tp3378
tp3379
sS'DAQmxGetAnlgEdgeRefTrigHyst'
p3380
((lp3381
S'int32'
p3382
ag11
a((S'taskHandle'
p3383
(lp3384
S'TaskHandle'
p3385
aNtp3386
(S'data'
p3387
(lp3388
S'float64'
p3389
ag19
aNtp3390
tp3391
tp3392
sS'DAQmxResetDigEdgeWatchdogExpirTrigEdge'
p3393
((lp3394
S'int32'
p3395
ag11
a((S'taskHandle'
p3396
(lp3397
S'TaskHandle'
p3398
aNtp3399
tp3400
tp3401
sS'DAQmxCfgChangeDetectionTiming'
p3402
((lp3403
S'int32'
p3404
ag11
a((S'taskHandle'
p3405
(lp3406
S'TaskHandle'
p3407
aNtp3408
(S'risingEdgeChan'
p3409
(lp3410
S'char'
p3411
a(lp3412
I-1
aaNtp3413
(S'fallingEdgeChan'
p3414
(lp3415
S'char'
p3416
a(lp3417
I-1
aaNtp3418
(S'sampleMode'
p3419
(lp3420
S'int32'
p3421
aNtp3422
(S'sampsPerChan'
p3423
(lp3424
S'uInt64'
p3425
aNtp3426
tp3427
tp3428
sS'DAQmxSetDigEdgeWatchdogExpirTrigSrc'
p3429
((lp3430
S'int32'
p3431
ag11
a((S'taskHandle'
p3432
(lp3433
S'TaskHandle'
p3434
aNtp3435
(S'data'
p3436
(lp3437
S'char'
p3438
ag19
aNtp3439
tp3440
tp3441
sS'DAQmxResetDODataXferMech'
p3442
((lp3443
S'int32'
p3444
ag11
a((S'taskHandle'
p3445
(lp3446
S'TaskHandle'
p3447
aNtp3448
(S'channel'
p3449
(lp3450
S'char'
p3451
a(lp3452
I-1
aaNtp3453
tp3454
tp3455
sS'DAQmxGetStartTrigRetriggerable'
p3456
((lp3457
S'int32'
p3458
ag11
a((S'taskHandle'
p3459
(lp3460
S'TaskHandle'
p3461
aNtp3462
(S'data'
p3463
(lp3464
S'bool32'
p3465
ag19
aNtp3466
tp3467
tp3468
sS'DAQmxResetCOPulseTicksInitialDelay'
p3469
((lp3470
S'int32'
p3471
ag11
a((S'taskHandle'
p3472
(lp3473
S'TaskHandle'
p3474
aNtp3475
(S'channel'
p3476
(lp3477
S'char'
p3478
a(lp3479
I-1
aaNtp3480
tp3481
tp3482
sS'DAQmxSetCILinEncoderInitialPos'
p3483
((lp3484
S'int32'
p3485
ag11
a((S'taskHandle'
p3486
(lp3487
S'TaskHandle'
p3488
aNtp3489
(S'channel'
p3490
(lp3491
S'char'
p3492
a(lp3493
I-1
aaNtp3494
(S'data'
p3495
(lp3496
S'float64'
p3497
aNtp3498
tp3499
tp3500
sS'DAQmxSwitchConnectMulti'
p3501
((lp3502
S'int32'
p3503
ag11
a((S'connectionList'
p3504
(lp3505
S'char'
p3506
a(lp3507
I-1
aaNtp3508
(S'waitForSettling'
p3509
(lp3510
S'bool32'
p3511
aNtp3512
tp3513
tp3514
sS'DAQmxGetSwitchDevNumRows'
p3515
((lp3516
S'int32'
p3517
ag11
a((S'deviceName'
p3518
(lp3519
S'char'
p3520
a(lp3521
I-1
aaNtp3522
(S'data'
p3523
(lp3524
S'uInt32'
p3525
ag19
aNtp3526
tp3527
tp3528
sS'DAQmxCreateDIChan'
p3529
((lp3530
S'int32'
p3531
ag11
a((S'taskHandle'
p3532
(lp3533
S'TaskHandle'
p3534
aNtp3535
(S'lines'
p3536
(lp3537
S'char'
p3538
a(lp3539
I-1
aaNtp3540
(S'nameToAssignToLines'
p3541
(lp3542
S'char'
p3543
a(lp3544
I-1
aaNtp3545
(S'lineGrouping'
p3546
(lp3547
S'int32'
p3548
aNtp3549
tp3550
tp3551
sS'DAQmxResetExportedAdvCmpltEventDelay'
p3552
((lp3553
S'int32'
p3554
ag11
a((S'taskHandle'
p3555
(lp3556
S'TaskHandle'
p3557
aNtp3558
tp3559
tp3560
sS'DAQmxGetAIMeasType'
p3561
((lp3562
S'int32'
p3563
ag11
a((S'taskHandle'
p3564
(lp3565
S'TaskHandle'
p3566
aNtp3567
(S'channel'
p3568
(lp3569
S'char'
p3570
a(lp3571
I-1
aaNtp3572
(S'data'
p3573
(lp3574
S'int32'
p3575
ag19
aNtp3576
tp3577
tp3578
sS'DAQmxResetCIEncoderBInputTerm'
p3579
((lp3580
S'int32'
p3581
ag11
a((S'taskHandle'
p3582
(lp3583
S'TaskHandle'
p3584
aNtp3585
(S'channel'
p3586
(lp3587
S'char'
p3588
a(lp3589
I-1
aaNtp3590
tp3591
tp3592
sS'DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc'
p3593
((lp3594
S'int32'
p3595
ag11
a((S'taskHandle'
p3596
(lp3597
S'TaskHandle'
p3598
aNtp3599
(S'data'
p3600
(lp3601
S'char'
p3602
ag19
aNtp3603
tp3604
tp3605
sS'DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate'
p3606
((lp3607
S'int32'
p3608
ag11
a((S'taskHandle'
p3609
(lp3610
S'TaskHandle'
p3611
aNtp3612
(S'channel'
p3613
(lp3614
S'char'
p3615
a(lp3616
I-1
aaNtp3617
(S'data'
p3618
(lp3619
S'float64'
p3620
ag19
aNtp3621
tp3622
tp3623
sS'DAQmxSetCIEncoderAInputDigSyncEnable'
p3624
((lp3625
S'int32'
p3626
ag11
a((S'taskHandle'
p3627
(lp3628
S'TaskHandle'
p3629
aNtp3630
(S'channel'
p3631
(lp3632
S'char'
p3633
a(lp3634
I-1
aaNtp3635
(S'data'
p3636
(lp3637
S'bool32'
p3638
aNtp3639
tp3640
tp3641
sS'DAQmxGetAIThrmstrR1'
p3642
((lp3643
S'int32'
p3644
ag11
a((S'taskHandle'
p3645
(lp3646
S'TaskHandle'
p3647
aNtp3648
(S'channel'
p3649
(lp3650
S'char'
p3651
a(lp3652
I-1
aaNtp3653
(S'data'
p3654
(lp3655
S'float64'
p3656
ag19
aNtp3657
tp3658
tp3659
sS'DAQmxResetAnlgEdgeRefTrigSlope'
p3660
((lp3661
S'int32'
p3662
ag11
a((S'taskHandle'
p3663
(lp3664
S'TaskHandle'
p3665
aNtp3666
tp3667
tp3668
sS'DAQmxSetAnlgEdgeStartTrigHyst'
p3669
((lp3670
S'int32'
p3671
ag11
a((S'taskHandle'
p3672
(lp3673
S'TaskHandle'
p3674
aNtp3675
(S'data'
p3676
(lp3677
S'float64'
p3678
aNtp3679
tp3680
tp3681
sS'DAQmxResetAIBridgeShuntCalEnable'
p3682
((lp3683
S'int32'
p3684
ag11
a((S'taskHandle'
p3685
(lp3686
S'TaskHandle'
p3687
aNtp3688
(S'channel'
p3689
(lp3690
S'char'
p3691
a(lp3692
I-1
aaNtp3693
tp3694
tp3695
sS'DAQmxSetCISemiPeriodDigFltrMinPulseWidth'
p3696
((lp3697
S'int32'
p3698
ag11
a((S'taskHandle'
p3699
(lp3700
S'TaskHandle'
p3701
aNtp3702
(S'channel'
p3703
(lp3704
S'char'
p3705
a(lp3706
I-1
aaNtp3707
(S'data'
p3708
(lp3709
S'float64'
p3710
aNtp3711
tp3712
tp3713
sS'DAQmxGetCOPulseTimeInitialDelay'
p3714
((lp3715
S'int32'
p3716
ag11
a((S'taskHandle'
p3717
(lp3718
S'TaskHandle'
p3719
aNtp3720
(S'channel'
p3721
(lp3722
S'char'
p3723
a(lp3724
I-1
aaNtp3725
(S'data'
p3726
(lp3727
S'float64'
p3728
ag19
aNtp3729
tp3730
tp3731
sS'DAQmxResetChangeDetectDIFallingEdgePhysicalChans'
p3732
((lp3733
S'int32'
p3734
ag11
a((S'taskHandle'
p3735
(lp3736
S'TaskHandle'
p3737
aNtp3738
tp3739
tp3740
sS'DAQmxWriteCtrTicksScalar'
p3741
((lp3742
S'int32'
p3743
ag11
a((S'taskHandle'
p3744
(lp3745
S'TaskHandle'
p3746
aNtp3747
(S'autoStart'
p3748
(lp3749
S'bool32'
p3750
aNtp3751
(S'timeout'
p3752
(lp3753
S'float64'
p3754
aNtp3755
(S'highTicks'
p3756
(lp3757
S'uInt32'
p3758
aNtp3759
(S'lowTicks'
p3760
(lp3761
S'uInt32'
p3762
aNtp3763
(S'reserved'
p3764
(lp3765
S'bool32'
p3766
ag19
aNtp3767
tp3768
tp3769
sS'DAQmxResetRealTimeWaitForNextSampClkWaitMode'
p3770
((lp3771
S'int32'
p3772
ag11
a((S'taskHandle'
p3773
(lp3774
S'TaskHandle'
p3775
aNtp3776
tp3777
tp3778
sS'DAQmxGetAIAccelUnits'
p3779
((lp3780
S'int32'
p3781
ag11
a((S'taskHandle'
p3782
(lp3783
S'TaskHandle'
p3784
aNtp3785
(S'channel'
p3786
(lp3787
S'char'
p3788
a(lp3789
I-1
aaNtp3790
(S'data'
p3791
(lp3792
S'int32'
p3793
ag19
aNtp3794
tp3795
tp3796
sS'DAQmxSetDigLvlPauseTrigSrc'
p3797
((lp3798
S'int32'
p3799
ag11
a((S'taskHandle'
p3800
(lp3801
S'TaskHandle'
p3802
aNtp3803
(S'data'
p3804
(lp3805
S'char'
p3806
ag19
aNtp3807
tp3808
tp3809
sS'DAQmxGetAICurrentShuntResistance'
p3810
((lp3811
S'int32'
p3812
ag11
a((S'taskHandle'
p3813
(lp3814
S'TaskHandle'
p3815
aNtp3816
(S'channel'
p3817
(lp3818
S'char'
p3819
a(lp3820
I-1
aaNtp3821
(S'data'
p3822
(lp3823
S'float64'
p3824
ag19
aNtp3825
tp3826
tp3827
sS'DAQmxSetAIBridgeBalanceCoarsePot'
p3828
((lp3829
S'int32'
p3830
ag11
a((S'taskHandle'
p3831
(lp3832
S'TaskHandle'
p3833
aNtp3834
(S'channel'
p3835
(lp3836
S'char'
p3837
a(lp3838
I-1
aaNtp3839
(S'data'
p3840
(lp3841
S'int32'
p3842
aNtp3843
tp3844
tp3845
sS'DAQmxResetAIConvTimebaseSrc'
p3846
((lp3847
S'int32'
p3848
ag11
a((S'taskHandle'
p3849
(lp3850
S'TaskHandle'
p3851
aNtp3852
tp3853
tp3854
sS'DAQmxResetCICountEdgesCountDirDigFltrEnable'
p3855
((lp3856
S'int32'
p3857
ag11
a((S'taskHandle'
p3858
(lp3859
S'TaskHandle'
p3860
aNtp3861
(S'channel'
p3862
(lp3863
S'char'
p3864
a(lp3865
I-1
aaNtp3866
tp3867
tp3868
sS'DAQmxResetAIVoltageUnits'
p3869
((lp3870
S'int32'
p3871
ag11
a((S'taskHandle'
p3872
(lp3873
S'TaskHandle'
p3874
aNtp3875
(S'channel'
p3876
(lp3877
S'char'
p3878
a(lp3879
I-1
aaNtp3880
tp3881
tp3882
sS'DAQmxResetAIBridgeBalanceCoarsePot'
p3883
((lp3884
S'int32'
p3885
ag11
a((S'taskHandle'
p3886
(lp3887
S'TaskHandle'
p3888
aNtp3889
(S'channel'
p3890
(lp3891
S'char'
p3892
a(lp3893
I-1
aaNtp3894
tp3895
tp3896
sS'DAQmxSetExportedHshkEventOutputTerm'
p3897
((lp3898
S'int32'
p3899
ag11
a((S'taskHandle'
p3900
(lp3901
S'TaskHandle'
p3902
aNtp3903
(S'data'
p3904
(lp3905
S'char'
p3906
ag19
aNtp3907
tp3908
tp3909
sS'DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth'
p3910
((lp3911
S'int32'
p3912
ag11
a((S'taskHandle'
p3913
(lp3914
S'TaskHandle'
p3915
aNtp3916
(S'channel'
p3917
(lp3918
S'char'
p3919
a(lp3920
I-1
aaNtp3921
(S'data'
p3922
(lp3923
S'float64'
p3924
aNtp3925
tp3926
tp3927
sS'DAQmxSetAOMemMapEnable'
p3928
((lp3929
S'int32'
p3930
ag11
a((S'taskHandle'
p3931
(lp3932
S'TaskHandle'
p3933
aNtp3934
(S'channel'
p3935
(lp3936
S'char'
p3937
a(lp3938
I-1
aaNtp3939
(S'data'
p3940
(lp3941
S'bool32'
p3942
aNtp3943
tp3944
tp3945
sS'DAQmxGetAnlgEdgeStartTrigSrc'
p3946
((lp3947
S'int32'
p3948
ag11
a((S'taskHandle'
p3949
(lp3950
S'TaskHandle'
p3951
aNtp3952
(S'data'
p3953
(lp3954
S'char'
p3955
ag19
aNtp3956
(S'bufferSize'
p3957
(lp3958
S'uInt32'
p3959
aNtp3960
tp3961
tp3962
sS'DAQmxGetWatchdogExpirTrigType'
p3963
((lp3964
S'int32'
p3965
ag11
a((S'taskHandle'
p3966
(lp3967
S'TaskHandle'
p3968
aNtp3969
(S'data'
p3970
(lp3971
S'int32'
p3972
ag19
aNtp3973
tp3974
tp3975
sS'DAQmxSetAnlgWinPauseTrigCoupling'
p3976
((lp3977
S'int32'
p3978
ag11
a((S'taskHandle'
p3979
(lp3980
S'TaskHandle'
p3981
aNtp3982
(S'data'
p3983
(lp3984
S'int32'
p3985
aNtp3986
tp3987
tp3988
sS'DAQmxGetCITwoEdgeSepFirstEdge'
p3989
((lp3990
S'int32'
p3991
ag11
a((S'taskHandle'
p3992
(lp3993
S'TaskHandle'
p3994
aNtp3995
(S'channel'
p3996
(lp3997
S'char'
p3998
a(lp3999
I-1
aaNtp4000
(S'data'
p4001
(lp4002
S'int32'
p4003
ag19
aNtp4004
tp4005
tp4006
sS'DAQmxResetAOLoadImpedance'
p4007
((lp4008
S'int32'
p4009
ag11
a((S'taskHandle'
p4010
(lp4011
S'TaskHandle'
p4012
aNtp4013
(S'channel'
p4014
(lp4015
S'char'
p4016
a(lp4017
I-1
aaNtp4018
tp4019
tp4020
sS'DAQmxGetExportedAIConvClkPulsePolarity'
p4021
((lp4022
S'int32'
p4023
ag11
a((S'taskHandle'
p4024
(lp4025
S'TaskHandle'
p4026
aNtp4027
(S'data'
p4028
(lp4029
S'int32'
p4030
ag19
aNtp4031
tp4032
tp4033
sS'DAQmxCreateCIGPSTimestampChan'
p4034
((lp4035
S'int32'
p4036
ag11
a((S'taskHandle'
p4037
(lp4038
S'TaskHandle'
p4039
aNtp4040
(S'counter'
p4041
(lp4042
S'char'
p4043
a(lp4044
I-1
aaNtp4045
(S'nameToAssignToChannel'
p4046
(lp4047
S'char'
p4048
a(lp4049
I-1
aaNtp4050
(S'units'
p4051
(lp4052
S'int32'
p4053
aNtp4054
(S'syncMethod'
p4055
(lp4056
S'int32'
p4057
aNtp4058
(S'customScaleName'
p4059
(lp4060
S'char'
p4061
a(lp4062
I-1
aaNtp4063
tp4064
tp4065
sS'DAQmxSetAIExcitUseMultiplexed'
p4066
((lp4067
S'int32'
p4068
ag11
a((S'taskHandle'
p4069
(lp4070
S'TaskHandle'
p4071
aNtp4072
(S'channel'
p4073
(lp4074
S'char'
p4075
a(lp4076
I-1
aaNtp4077
(S'data'
p4078
(lp4079
S'bool32'
p4080
aNtp4081
tp4082
tp4083
sS'DAQmxGetAIForceReadFromChan'
p4084
((lp4085
S'int32'
p4086
ag11
a((S'taskHandle'
p4087
(lp4088
S'TaskHandle'
p4089
aNtp4090
(S'channel'
p4091
(lp4092
S'char'
p4093
a(lp4094
I-1
aaNtp4095
(S'data'
p4096
(lp4097
S'bool32'
p4098
ag19
aNtp4099
tp4100
tp4101
sS'DAQmxGetCICtrTimebaseDigFltrTimebaseRate'
p4102
((lp4103
S'int32'
p4104
ag11
a((S'taskHandle'
p4105
(lp4106
S'TaskHandle'
p4107
aNtp4108
(S'channel'
p4109
(lp4110
S'char'
p4111
a(lp4112
I-1
aaNtp4113
(S'data'
p4114
(lp4115
S'float64'
p4116
ag19
aNtp4117
tp4118
tp4119
sS'DAQmxSetAIChanCalVerifRefVals'
p4120
((lp4121
S'int32'
p4122
ag11
a((S'taskHandle'
p4123
(lp4124
S'TaskHandle'
p4125
aNtp4126
(S'channel'
p4127
(lp4128
S'char'
p4129
a(lp4130
I-1
aaNtp4131
(S'data'
p4132
(lp4133
S'float64'
p4134
ag19
aNtp4135
(S'arraySizeInSamples'
p4136
(lp4137
S'uInt32'
p4138
aNtp4139
tp4140
tp4141
sS'DAQmxResetHshkTrigType'
p4142
((lp4143
S'int32'
p4144
ag11
a((S'taskHandle'
p4145
(lp4146
S'TaskHandle'
p4147
aNtp4148
tp4149
tp4150
sS'DAQmxResetCIFreqTerm'
p4151
((lp4152
S'int32'
p4153
ag11
a((S'taskHandle'
p4154
(lp4155
S'TaskHandle'
p4156
aNtp4157
(S'channel'
p4158
(lp4159
S'char'
p4160
a(lp4161
I-1
aaNtp4162
tp4163
tp4164
sS'DAQmxSetWriteOffset'
p4165
((lp4166
S'int32'
p4167
ag11
a((S'taskHandle'
p4168
(lp4169
S'TaskHandle'
p4170
aNtp4171
(S'data'
p4172
(lp4173
S'int32'
p4174
aNtp4175
tp4176
tp4177
sS'DAQmxCreateCIAngEncoderChan'
p4178
((lp4179
S'int32'
p4180
ag11
a((S'taskHandle'
p4181
(lp4182
S'TaskHandle'
p4183
aNtp4184
(S'counter'
p4185
(lp4186
S'char'
p4187
a(lp4188
I-1
aaNtp4189
(S'nameToAssignToChannel'
p4190
(lp4191
S'char'
p4192
a(lp4193
I-1
aaNtp4194
(S'decodingType'
p4195
(lp4196
S'int32'
p4197
aNtp4198
(S'ZidxEnable'
p4199
(lp4200
S'bool32'
p4201
aNtp4202
(S'ZidxVal'
p4203
(lp4204
S'float64'
p4205
aNtp4206
(S'ZidxPhase'
p4207
(lp4208
S'int32'
p4209
aNtp4210
(S'units'
p4211
(lp4212
S'int32'
p4213
aNtp4214
(S'pulsesPerRev'
p4215
(lp4216
S'uInt32'
p4217
aNtp4218
(S'initialAngle'
p4219
(lp4220
S'float64'
p4221
aNtp4222
(S'customScaleName'
p4223
(lp4224
S'char'
p4225
a(lp4226
I-1
aaNtp4227
tp4228
tp4229
sS'DAQmxResetExportedCtrOutEventToggleIdleState'
p4230
((lp4231
S'int32'
p4232
ag11
a((S'taskHandle'
p4233
(lp4234
S'TaskHandle'
p4235
aNtp4236
tp4237
tp4238
sS'DAQmxSetWatchdogTimeout'
p4239
((lp4240
S'int32'
p4241
ag11
a((S'taskHandle'
p4242
(lp4243
S'TaskHandle'
p4244
aNtp4245
(S'data'
p4246
(lp4247
S'float64'
p4248
aNtp4249
tp4250
tp4251
sS'DAQmxResetCOPulseDutyCyc'
p4252
((lp4253
S'int32'
p4254
ag11
a((S'taskHandle'
p4255
(lp4256
S'TaskHandle'
p4257
aNtp4258
(S'channel'
p4259
(lp4260
S'char'
p4261
a(lp4262
I-1
aaNtp4263
tp4264
tp4265
sS'DAQmxSetAITempUnits'
p4266
((lp4267
S'int32'
p4268
ag11
a((S'taskHandle'
p4269
(lp4270
S'TaskHandle'
p4271
aNtp4272
(S'channel'
p4273
(lp4274
S'char'
p4275
a(lp4276
I-1
aaNtp4277
(S'data'
p4278
(lp4279
S'int32'
p4280
aNtp4281
tp4282
tp4283
sS'DAQmxResetAIMicrophoneSensitivity'
p4284
((lp4285
S'int32'
p4286
ag11
a((S'taskHandle'
p4287
(lp4288
S'TaskHandle'
p4289
aNtp4290
(S'channel'
p4291
(lp4292
S'char'
p4293
a(lp4294
I-1
aaNtp4295
tp4296
tp4297
sS'DAQmxSwitchGetMultiRelayPos'
p4298
((lp4299
S'int32'
p4300
ag11
a((S'relayList'
p4301
(lp4302
S'char'
p4303
a(lp4304
I-1
aaNtp4305
(S'relayPos'
p4306
(lp4307
S'uInt32'
p4308
a(lp4309
I-1
aaNtp4310
(S'relayPosArraySize'
p4311
(lp4312
S'uInt32'
p4313
aNtp4314
(S'numRelayPossRead'
p4315
(lp4316
S'uInt32'
p4317
ag19
aNtp4318
tp4319
tp4320
sS'DAQmxResetRealTimeNumOfWarmupIters'
p4321
((lp4322
S'int32'
p4323
ag11
a((S'taskHandle'
p4324
(lp4325
S'TaskHandle'
p4326
aNtp4327
tp4328
tp4329
sS'DAQmxSetWatchdogDOExpirState'
p4330
((lp4331
S'int32'
p4332
ag11
a((S'taskHandle'
p4333
(lp4334
S'TaskHandle'
p4335
aNtp4336
(S'channel'
p4337
(lp4338
S'char'
p4339
a(lp4340
I-1
aaNtp4341
(S'data'
p4342
(lp4343
S'int32'
p4344
aNtp4345
tp4346
tp4347
sS'DAQmxGetHshkStartCond'
p4348
((lp4349
S'int32'
p4350
ag11
a((S'taskHandle'
p4351
(lp4352
S'TaskHandle'
p4353
aNtp4354
(S'data'
p4355
(lp4356
S'int32'
p4357
ag19
aNtp4358
tp4359
tp4360
sS'DAQmxSetAIDataXferMech'
p4361
((lp4362
S'int32'
p4363
ag11
a((S'taskHandle'
p4364
(lp4365
S'TaskHandle'
p4366
aNtp4367
(S'channel'
p4368
(lp4369
S'char'
p4370
a(lp4371
I-1
aaNtp4372
(S'data'
p4373
(lp4374
S'int32'
p4375
aNtp4376
tp4377
tp4378
sS'DAQmxExportSignal'
p4379
((lp4380
S'int32'
p4381
ag11
a((S'taskHandle'
p4382
(lp4383
S'TaskHandle'
p4384
aNtp4385
(S'signalID'
p4386
(lp4387
S'int32'
p4388
aNtp4389
(S'outputTerminal'
p4390
(lp4391
S'char'
p4392
a(lp4393
I-1
aaNtp4394
tp4395
tp4396
sS'DAQmxSetExportedAdvTrigPulseWidthUnits'
p4397
((lp4398
S'int32'
p4399
ag11
a((S'taskHandle'
p4400
(lp4401
S'TaskHandle'
p4402
aNtp4403
(S'data'
p4404
(lp4405
S'int32'
p4406
aNtp4407
tp4408
tp4409
sS'DAQmxSetExportedCtrOutEventPulsePolarity'
p4410
((lp4411
S'int32'
p4412
ag11
a((S'taskHandle'
p4413
(lp4414
S'TaskHandle'
p4415
aNtp4416
(S'data'
p4417
(lp4418
S'int32'
p4419
aNtp4420
tp4421
tp4422
sS'DAQmxSetExportedRdyForXferEventOutputTerm'
p4423
((lp4424
S'int32'
p4425
ag11
a((S'taskHandle'
p4426
(lp4427
S'TaskHandle'
p4428
aNtp4429
(S'data'
p4430
(lp4431
S'char'
p4432
ag19
aNtp4433
tp4434
tp4435
sS'DAQmxSetStartTrigType'
p4436
((lp4437
S'int32'
p4438
ag11
a((S'taskHandle'
p4439
(lp4440
S'TaskHandle'
p4441
aNtp4442
(S'data'
p4443
(lp4444
S'int32'
p4445
aNtp4446
tp4447
tp4448
sS'DAQmxSetAILowpassEnable'
p4449
((lp4450
S'int32'
p4451
ag11
a((S'taskHandle'
p4452
(lp4453
S'TaskHandle'
p4454
aNtp4455
(S'channel'
p4456
(lp4457
S'char'
p4458
a(lp4459
I-1
aaNtp4460
(S'data'
p4461
(lp4462
S'bool32'
p4463
aNtp4464
tp4465
tp4466
sS'DAQmxGetAIMemMapEnable'
p4467
((lp4468
S'int32'
p4469
ag11
a((S'taskHandle'
p4470
(lp4471
S'TaskHandle'
p4472
aNtp4473
(S'channel'
p4474
(lp4475
S'char'
p4476
a(lp4477
I-1
aaNtp4478
(S'data'
p4479
(lp4480
S'bool32'
p4481
ag19
aNtp4482
tp4483
tp4484
sS'DAQmxResetAIRTDB'
p4485
((lp4486
S'int32'
p4487
ag11
a((S'taskHandle'
p4488
(lp4489
S'TaskHandle'
p4490
aNtp4491
(S'channel'
p4492
(lp4493
S'char'
p4494
a(lp4495
I-1
aaNtp4496
tp4497
tp4498
sS'DAQmxResetAIRTDC'
p4499
((lp4500
S'int32'
p4501
ag11
a((S'taskHandle'
p4502
(lp4503
S'TaskHandle'
p4504
aNtp4505
(S'channel'
p4506
(lp4507
S'char'
p4508
a(lp4509
I-1
aaNtp4510
tp4511
tp4512
sS'DAQmxResetAIRTDA'
p4513
((lp4514
S'int32'
p4515
ag11
a((S'taskHandle'
p4516
(lp4517
S'TaskHandle'
p4518
aNtp4519
(S'channel'
p4520
(lp4521
S'char'
p4522
a(lp4523
I-1
aaNtp4524
tp4525
tp4526
sS'DAQmxReadRaw'
p4527
((lp4528
S'int32'
p4529
ag11
a((S'taskHandle'
p4530
(lp4531
S'TaskHandle'
p4532
aNtp4533
(S'numSampsPerChan'
p4534
(lp4535
S'int32'
p4536
aNtp4537
(S'timeout'
p4538
(lp4539
S'float64'
p4540
aNtp4541
(S'readArray'
p4542
(lp4543
S'void'
p4544
ag19
aNtp4545
(S'arraySizeInBytes'
p4546
(lp4547
S'uInt32'
p4548
aNtp4549
(S'sampsRead'
p4550
(lp4551
S'int32'
p4552
ag19
aNtp4553
(S'numBytesPerSamp'
p4554
(lp4555
S'int32'
p4556
ag19
aNtp4557
(S'reserved'
p4558
(lp4559
S'bool32'
p4560
ag19
aNtp4561
tp4562
tp4563
sS'DAQmxResetReadAutoStart'
p4564
((lp4565
S'int32'
p4566
ag11
a((S'taskHandle'
p4567
(lp4568
S'TaskHandle'
p4569
aNtp4570
tp4571
tp4572
sS'DAQmxResetAIMin'
p4573
((lp4574
S'int32'
p4575
ag11
a((S'taskHandle'
p4576
(lp4577
S'TaskHandle'
p4578
aNtp4579
(S'channel'
p4580
(lp4581
S'char'
p4582
a(lp4583
I-1
aaNtp4584
tp4585
tp4586
sS'DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate'
p4587
((lp4588
S'int32'
p4589
ag11
a((S'taskHandle'
p4590
(lp4591
S'TaskHandle'
p4592
aNtp4593
(S'channel'
p4594
(lp4595
S'char'
p4596
a(lp4597
I-1
aaNtp4598
(S'data'
p4599
(lp4600
S'float64'
p4601
aNtp4602
tp4603
tp4604
sS'DAQmxResetCIEncoderAInputDigFltrTimebaseRate'
p4605
((lp4606
S'int32'
p4607
ag11
a((S'taskHandle'
p4608
(lp4609
S'TaskHandle'
p4610
aNtp4611
(S'channel'
p4612
(lp4613
S'char'
p4614
a(lp4615
I-1
aaNtp4616
tp4617
tp4618
sS'DAQmxGetExportedAdvTrigPulseWidthUnits'
p4619
((lp4620
S'int32'
p4621
ag11
a((S'taskHandle'
p4622
(lp4623
S'TaskHandle'
p4624
aNtp4625
(S'data'
p4626
(lp4627
S'int32'
p4628
ag19
aNtp4629
tp4630
tp4631
sS'DAQmxResetCICountEdgesDir'
p4632
((lp4633
S'int32'
p4634
ag11
a((S'taskHandle'
p4635
(lp4636
S'TaskHandle'
p4637
aNtp4638
(S'channel'
p4639
(lp4640
S'char'
p4641
a(lp4642
I-1
aaNtp4643
tp4644
tp4645
sS'DAQmxResetAOIdleOutputBehavior'
p4646
((lp4647
S'int32'
p4648
ag11
a((S'taskHandle'
p4649
(lp4650
S'TaskHandle'
p4651
aNtp4652
(S'channel'
p4653
(lp4654
S'char'
p4655
a(lp4656
I-1
aaNtp4657
tp4658
tp4659
sS'DAQmxCreateAITempBuiltInSensorChan'
p4660
((lp4661
S'int32'
p4662
ag11
a((S'taskHandle'
p4663
(lp4664
S'TaskHandle'
p4665
aNtp4666
(S'physicalChannel'
p4667
(lp4668
S'char'
p4669
a(lp4670
I-1
aaNtp4671
(S'nameToAssignToChannel'
p4672
(lp4673
S'char'
p4674
a(lp4675
I-1
aaNtp4676
(S'units'
p4677
(lp4678
S'int32'
p4679
aNtp4680
tp4681
tp4682
sS'DAQmxResetRefClkRate'
p4683
((lp4684
S'int32'
p4685
ag11
a((S'taskHandle'
p4686
(lp4687
S'TaskHandle'
p4688
aNtp4689
tp4690
tp4691
sS'DAQmxSelfCal'
p4692
((lp4693
S'int32'
p4694
ag11
a((S'deviceName'
p4695
(lp4696
S'char'
p4697
a(lp4698
I-1
aaNtp4699
tp4700
tp4701
sS'DAQmxStopTask'
p4702
((lp4703
S'int32'
p4704
ag11
a((S'taskHandle'
p4705
(lp4706
S'TaskHandle'
p4707
aNtp4708
tp4709
tp4710
sS'DAQmxGetPhysicalChanTEDSMfgID'
p4711
((lp4712
S'int32'
p4713
ag11
a((S'physicalChannel'
p4714
(lp4715
S'char'
p4716
a(lp4717
I-1
aaNtp4718
(S'data'
p4719
(lp4720
S'uInt32'
p4721
ag19
aNtp4722
tp4723
tp4724
sS'DAQmxCreateAIFreqVoltageChan'
p4725
((lp4726
S'int32'
p4727
ag11
a((S'taskHandle'
p4728
(lp4729
S'TaskHandle'
p4730
aNtp4731
(S'physicalChannel'
p4732
(lp4733
S'char'
p4734
a(lp4735
I-1
aaNtp4736
(S'nameToAssignToChannel'
p4737
(lp4738
S'char'
p4739
a(lp4740
I-1
aaNtp4741
(S'minVal'
p4742
(lp4743
S'float64'
p4744
aNtp4745
(S'maxVal'
p4746
(lp4747
S'float64'
p4748
aNtp4749
(S'units'
p4750
(lp4751
S'int32'
p4752
aNtp4753
(S'thresholdLevel'
p4754
(lp4755
S'float64'
p4756
aNtp4757
(S'hysteresis'
p4758
(lp4759
S'float64'
p4760
aNtp4761
(S'customScaleName'
p4762
(lp4763
S'char'
p4764
a(lp4765
I-1
aaNtp4766
tp4767
tp4768
sS'DAQmxSetAIRVDTSensitivity'
p4769
((lp4770
S'int32'
p4771
ag11
a((S'taskHandle'
p4772
(lp4773
S'TaskHandle'
p4774
aNtp4775
(S'channel'
p4776
(lp4777
S'char'
p4778
a(lp4779
I-1
aaNtp4780
(S'data'
p4781
(lp4782
S'float64'
p4783
aNtp4784
tp4785
tp4786
sS'DAQmxGetExportedAdvCmpltEventPulsePolarity'
p4787
((lp4788
S'int32'
p4789
ag11
a((S'taskHandle'
p4790
(lp4791
S'TaskHandle'
p4792
aNtp4793
(S'data'
p4794
(lp4795
S'int32'
p4796
ag19
aNtp4797
tp4798
tp4799
sS'DAQmxGetCOPulseTicksInitialDelay'
p4800
((lp4801
S'int32'
p4802
ag11
a((S'taskHandle'
p4803
(lp4804
S'TaskHandle'
p4805
aNtp4806
(S'channel'
p4807
(lp4808
S'char'
p4809
a(lp4810
I-1
aaNtp4811
(S'data'
p4812
(lp4813
S'uInt32'
p4814
ag19
aNtp4815
tp4816
tp4817
sS'DAQmxGetReadWaitMode'
p4818
((lp4819
S'int32'
p4820
ag11
a((S'taskHandle'
p4821
(lp4822
S'TaskHandle'
p4823
aNtp4824
(S'data'
p4825
(lp4826
S'int32'
p4827
ag19
aNtp4828
tp4829
tp4830
sS'DAQmxGetDevDILines'
p4831
((lp4832
S'int32'
p4833
ag11
a((S'device'
p4834
(lp4835
S'char'
p4836
a(lp4837
I-1
aaNtp4838
(S'data'
p4839
(lp4840
S'char'
p4841
ag19
aNtp4842
(S'bufferSize'
p4843
(lp4844
S'uInt32'
p4845
aNtp4846
tp4847
tp4848
sS'DAQmxResetCOCtrTimebaseSrc'
p4849
((lp4850
S'int32'
p4851
ag11
a((S'taskHandle'
p4852
(lp4853
S'TaskHandle'
p4854
aNtp4855
(S'channel'
p4856
(lp4857
S'char'
p4858
a(lp4859
I-1
aaNtp4860
tp4861
tp4862
sS'DAQmxSetDOOutputDriveType'
p4863
((lp4864
S'int32'
p4865
ag11
a((S'taskHandle'
p4866
(lp4867
S'TaskHandle'
p4868
aNtp4869
(S'channel'
p4870
(lp4871
S'char'
p4872
a(lp4873
I-1
aaNtp4874
(S'data'
p4875
(lp4876
S'int32'
p4877
aNtp4878
tp4879
tp4880
sS'DAQmxResetExportedAIHoldCmpltEventOutputTerm'
p4881
((lp4882
S'int32'
p4883
ag11
a((S'taskHandle'
p4884
(lp4885
S'TaskHandle'
p4886
aNtp4887
tp4888
tp4889
sS'DAQmxGetAIBridgeBalanceFinePot'
p4890
((lp4891
S'int32'
p4892
ag11
a((S'taskHandle'
p4893
(lp4894
S'TaskHandle'
p4895
aNtp4896
(S'channel'
p4897
(lp4898
S'char'
p4899
a(lp4900
I-1
aaNtp4901
(S'data'
p4902
(lp4903
S'int32'
p4904
ag19
aNtp4905
tp4906
tp4907
sS'DAQmxSetAnlgWinRefTrigCoupling'
p4908
((lp4909
S'int32'
p4910
ag11
a((S'taskHandle'
p4911
(lp4912
S'TaskHandle'
p4913
aNtp4914
(S'data'
p4915
(lp4916
S'int32'
p4917
aNtp4918
tp4919
tp4920
sS'DAQmxSetInterlockedHshkTrigSrc'
p4921
((lp4922
S'int32'
p4923
ag11
a((S'taskHandle'
p4924
(lp4925
S'TaskHandle'
p4926
aNtp4927
(S'data'
p4928
(lp4929
S'char'
p4930
ag19
aNtp4931
tp4932
tp4933
sS'DAQmxGetScaleMapPreScaledMin'
p4934
((lp4935
S'int32'
p4936
ag11
a((S'scaleName'
p4937
(lp4938
S'char'
p4939
a(lp4940
I-1
aaNtp4941
(S'data'
p4942
(lp4943
S'float64'
p4944
ag19
aNtp4945
tp4946
tp4947
sS'DAQmxSetCIEncoderZInputDigFltrEnable'
p4948
((lp4949
S'int32'
p4950
ag11
a((S'taskHandle'
p4951
(lp4952
S'TaskHandle'
p4953
aNtp4954
(S'channel'
p4955
(lp4956
S'char'
p4957
a(lp4958
I-1
aaNtp4959
(S'data'
p4960
(lp4961
S'bool32'
p4962
aNtp4963
tp4964
tp4965
sS'DAQmxWriteBinaryU32'
p4966
((lp4967
S'int32'
p4968
ag11
a((S'taskHandle'
p4969
(lp4970
S'TaskHandle'
p4971
aNtp4972
(S'numSampsPerChan'
p4973
(lp4974
S'int32'
p4975
aNtp4976
(S'autoStart'
p4977
(lp4978
S'bool32'
p4979
aNtp4980
(S'timeout'
p4981
(lp4982
S'float64'
p4983
aNtp4984
(S'dataLayout'
p4985
(lp4986
S'bool32'
p4987
aNtp4988
(S'writeArray'
p4989
(lp4990
S'uInt32'
p4991
a(lp4992
I-1
aaNtp4993
(S'sampsPerChanWritten'
p4994
(lp4995
S'int32'
p4996
ag19
aNtp4997
(S'reserved'
p4998
(lp4999
S'bool32'
p5000
ag19
aNtp5001
tp5002
tp5003
sS'DAQmxGetCIPulseWidthUnits'
p5004
((lp5005
S'int32'
p5006
ag11
a((S'taskHandle'
p5007
(lp5008
S'TaskHandle'
p5009
aNtp5010
(S'channel'
p5011
(lp5012
S'char'
p5013
a(lp5014
I-1
aaNtp5015
(S'data'
p5016
(lp5017
S'int32'
p5018
ag19
aNtp5019
tp5020
tp5021
sS'DAQmxGetAIStrainGagePoissonRatio'
p5022
((lp5023
S'int32'
p5024
ag11
a((S'taskHandle'
p5025
(lp5026
S'TaskHandle'
p5027
aNtp5028
(S'channel'
p5029
(lp5030
S'char'
p5031
a(lp5032
I-1
aaNtp5033
(S'data'
p5034
(lp5035
S'float64'
p5036
ag19
aNtp5037
tp5038
tp5039
sS'DAQmxSetAIForceReadFromChan'
p5040
((lp5041
S'int32'
p5042
ag11
a((S'taskHandle'
p5043
(lp5044
S'TaskHandle'
p5045
aNtp5046
(S'channel'
p5047
(lp5048
S'char'
p5049
a(lp5050
I-1
aaNtp5051
(S'data'
p5052
(lp5053
S'bool32'
p5054
aNtp5055
tp5056
tp5057
sS'DAQmxSetAILowpassSwitchCapExtClkDiv'
p5058
((lp5059
S'int32'
p5060
ag11
a((S'taskHandle'
p5061
(lp5062
S'TaskHandle'
p5063
aNtp5064
(S'channel'
p5065
(lp5066
S'char'
p5067
a(lp5068
I-1
aaNtp5069
(S'data'
p5070
(lp5071
S'uInt32'
p5072
aNtp5073
tp5074
tp5075
sS'DAQmxResetSampClkDigSyncEnable'
p5076
((lp5077
S'int32'
p5078
ag11
a((S'taskHandle'
p5079
(lp5080
S'TaskHandle'
p5081
aNtp5082
tp5083
tp5084
sS'DAQmxResetAnlgEdgeStartTrigHyst'
p5085
((lp5086
S'int32'
p5087
ag11
a((S'taskHandle'
p5088
(lp5089
S'TaskHandle'
p5090
aNtp5091
tp5092
tp5093
sS'DAQmxGetDigEdgeAdvTrigSrc'
p5094
((lp5095
S'int32'
p5096
ag11
a((S'taskHandle'
p5097
(lp5098
S'TaskHandle'
p5099
aNtp5100
(S'data'
p5101
(lp5102
S'char'
p5103
ag19
aNtp5104
(S'bufferSize'
p5105
(lp5106
S'uInt32'
p5107
aNtp5108
tp5109
tp5110
sS'DAQmxSetExportedHshkEventInterlockedAssertOnStart'
p5111
((lp5112
S'int32'
p5113
ag11
a((S'taskHandle'
p5114
(lp5115
S'TaskHandle'
p5116
aNtp5117
(S'data'
p5118
(lp5119
S'bool32'
p5120
aNtp5121
tp5122
tp5123
sS'DAQmxSetCITwoEdgeSepUnits'
p5124
((lp5125
S'int32'
p5126
ag11
a((S'taskHandle'
p5127
(lp5128
S'TaskHandle'
p5129
aNtp5130
(S'channel'
p5131
(lp5132
S'char'
p5133
a(lp5134
I-1
aaNtp5135
(S'data'
p5136
(lp5137
S'int32'
p5138
aNtp5139
tp5140
tp5141
sS'DAQmxSetReadAutoStart'
p5142
((lp5143
S'int32'
p5144
ag11
a((S'taskHandle'
p5145
(lp5146
S'TaskHandle'
p5147
aNtp5148
(S'data'
p5149
(lp5150
S'bool32'
p5151
aNtp5152
tp5153
tp5154
sS'DAQmxSetCISemiPeriodStartingEdge'
p5155
((lp5156
S'int32'
p5157
ag11
a((S'taskHandle'
p5158
(lp5159
S'TaskHandle'
p5160
aNtp5161
(S'channel'
p5162
(lp5163
S'char'
p5164
a(lp5165
I-1
aaNtp5166
(S'data'
p5167
(lp5168
S'int32'
p5169
aNtp5170
tp5171
tp5172
sS'DAQmxResetAIForceReadFromChan'
p5173
((lp5174
S'int32'
p5175
ag11
a((S'taskHandle'
p5176
(lp5177
S'TaskHandle'
p5178
aNtp5179
(S'channel'
p5180
(lp5181
S'char'
p5182
a(lp5183
I-1
aaNtp5184
tp5185
tp5186
sS'DAQmxGetArmStartTrigType'
p5187
((lp5188
S'int32'
p5189
ag11
a((S'taskHandle'
p5190
(lp5191
S'TaskHandle'
p5192
aNtp5193
(S'data'
p5194
(lp5195
S'int32'
p5196
ag19
aNtp5197
tp5198
tp5199
sS'DAQmxGetAIConvMaxRate'
p5200
((lp5201
S'int32'
p5202
ag11
a((S'taskHandle'
p5203
(lp5204
S'TaskHandle'
p5205
aNtp5206
(S'data'
p5207
(lp5208
S'float64'
p5209
ag19
aNtp5210
tp5211
tp5212
sS'DAQmxSetDigEdgeStartTrigDigSyncEnable'
p5213
((lp5214
S'int32'
p5215
ag11
a((S'taskHandle'
p5216
(lp5217
S'TaskHandle'
p5218
aNtp5219
(S'data'
p5220
(lp5221
S'bool32'
p5222
aNtp5223
tp5224
tp5225
sS'DAQmxGetTaskNumChans'
p5226
((lp5227
S'int32'
p5228
ag11
a((S'taskHandle'
p5229
(lp5230
S'TaskHandle'
p5231
aNtp5232
(S'data'
p5233
(lp5234
S'uInt32'
p5235
ag19
aNtp5236
tp5237
tp5238
sS'DAQmxResetAOTermCfg'
p5239
((lp5240
S'int32'
p5241
ag11
a((S'taskHandle'
p5242
(lp5243
S'TaskHandle'
p5244
aNtp5245
(S'channel'
p5246
(lp5247
S'char'
p5248
a(lp5249
I-1
aaNtp5250
tp5251
tp5252
sS'DAQmxSetCIPulseWidthDigSyncEnable'
p5253
((lp5254
S'int32'
p5255
ag11
a((S'taskHandle'
p5256
(lp5257
S'TaskHandle'
p5258
aNtp5259
(S'channel'
p5260
(lp5261
S'char'
p5262
a(lp5263
I-1
aaNtp5264
(S'data'
p5265
(lp5266
S'bool32'
p5267
aNtp5268
tp5269
tp5270
sS'DAQmxGetAIACExcitSyncEnable'
p5271
((lp5272
S'int32'
p5273
ag11
a((S'taskHandle'
p5274
(lp5275
S'TaskHandle'
p5276
aNtp5277
(S'channel'
p5278
(lp5279
S'char'
p5280
a(lp5281
I-1
aaNtp5282
(S'data'
p5283
(lp5284
S'bool32'
p5285
ag19
aNtp5286
tp5287
tp5288
sS'DAQmxSetAIExcitDCorAC'
p5289
((lp5290
S'int32'
p5291
ag11
a((S'taskHandle'
p5292
(lp5293
S'TaskHandle'
p5294
aNtp5295
(S'channel'
p5296
(lp5297
S'char'
p5298
a(lp5299
I-1
aaNtp5300
(S'data'
p5301
(lp5302
S'int32'
p5303
aNtp5304
tp5305
tp5306
sS'DAQmxSetScaleMapScaledMin'
p5307
((lp5308
S'int32'
p5309
ag11
a((S'scaleName'
p5310
(lp5311
S'char'
p5312
a(lp5313
I-1
aaNtp5314
(S'data'
p5315
(lp5316
S'float64'
p5317
aNtp5318
tp5319
tp5320
sS'DAQmxResetAnlgWinStartTrigTop'
p5321
((lp5322
S'int32'
p5323
ag11
a((S'taskHandle'
p5324
(lp5325
S'TaskHandle'
p5326
aNtp5327
tp5328
tp5329
sS'DAQmxResetAnlgEdgeRefTrigHyst'
p5330
((lp5331
S'int32'
p5332
ag11
a((S'taskHandle'
p5333
(lp5334
S'TaskHandle'
p5335
aNtp5336
tp5337
tp5338
sS'DAQmxCfgInputBuffer'
p5339
((lp5340
S'int32'
p5341
ag11
a((S'taskHandle'
p5342
(lp5343
S'TaskHandle'
p5344
aNtp5345
(S'numSampsPerChan'
p5346
(lp5347
S'uInt32'
p5348
aNtp5349
tp5350
tp5351
sS'DAQmxGetExtCalRecommendedInterval'
p5352
((lp5353
S'int32'
p5354
ag11
a((S'deviceName'
p5355
(lp5356
S'char'
p5357
a(lp5358
I-1
aaNtp5359
(S'data'
p5360
(lp5361
S'uInt32'
p5362
ag19
aNtp5363
tp5364
tp5365
sS'DAQmxResetCIMin'
p5366
((lp5367
S'int32'
p5368
ag11
a((S'taskHandle'
p5369
(lp5370
S'TaskHandle'
p5371
aNtp5372
(S'channel'
p5373
(lp5374
S'char'
p5375
a(lp5376
I-1
aaNtp5377
tp5378
tp5379
sS'DAQmxResetDIDigFltrEnable'
p5380
((lp5381
S'int32'
p5382
ag11
a((S'taskHandle'
p5383
(lp5384
S'TaskHandle'
p5385
aNtp5386
(S'channel'
p5387
(lp5388
S'char'
p5389
a(lp5390
I-1
aaNtp5391
tp5392
tp5393
sS'DAQmxResetCOCtrTimebaseActiveEdge'
p5394
((lp5395
S'int32'
p5396
ag11
a((S'taskHandle'
p5397
(lp5398
S'TaskHandle'
p5399
aNtp5400
(S'channel'
p5401
(lp5402
S'char'
p5403
a(lp5404
I-1
aaNtp5405
tp5406
tp5407
sS'DAQmxGetAIConvTimebaseDiv'
p5408
((lp5409
S'int32'
p5410
ag11
a((S'taskHandle'
p5411
(lp5412
S'TaskHandle'
p5413
aNtp5414
(S'data'
p5415
(lp5416
S'uInt32'
p5417
ag19
aNtp5418
tp5419
tp5420
sS'DAQmxGetExportedHshkEventInterlockedDeassertDelay'
p5421
((lp5422
S'int32'
p5423
ag11
a((S'taskHandle'
p5424
(lp5425
S'TaskHandle'
p5426
aNtp5427
(S'data'
p5428
(lp5429
S'float64'
p5430
ag19
aNtp5431
tp5432
tp5433
sS'DAQmxResetCIPulseWidthDigFltrMinPulseWidth'
p5434
((lp5435
S'int32'
p5436
ag11
a((S'taskHandle'
p5437
(lp5438
S'TaskHandle'
p5439
aNtp5440
(S'channel'
p5441
(lp5442
S'char'
p5443
a(lp5444
I-1
aaNtp5445
tp5446
tp5447
sS'DAQmxResetCIFreqDigFltrTimebaseRate'
p5448
((lp5449
S'int32'
p5450
ag11
a((S'taskHandle'
p5451
(lp5452
S'TaskHandle'
p5453
aNtp5454
(S'channel'
p5455
(lp5456
S'char'
p5457
a(lp5458
I-1
aaNtp5459
tp5460
tp5461
sS'DAQmxGetAOCurrentUnits'
p5462
((lp5463
S'int32'
p5464
ag11
a((S'taskHandle'
p5465
(lp5466
S'TaskHandle'
p5467
aNtp5468
(S'channel'
p5469
(lp5470
S'char'
p5471
a(lp5472
I-1
aaNtp5473
(S'data'
p5474
(lp5475
S'int32'
p5476
ag19
aNtp5477
tp5478
tp5479
sS'DAQmxSetAIBridgeNomResistance'
p5480
((lp5481
S'int32'
p5482
ag11
a((S'taskHandle'
p5483
(lp5484
S'TaskHandle'
p5485
aNtp5486
(S'channel'
p5487
(lp5488
S'char'
p5489
a(lp5490
I-1
aaNtp5491
(S'data'
p5492
(lp5493
S'float64'
p5494
aNtp5495
tp5496
tp5497
sS'DAQmxResetCISemiPeriodTerm'
p5498
((lp5499
S'int32'
p5500
ag11
a((S'taskHandle'
p5501
(lp5502
S'TaskHandle'
p5503
aNtp5504
(S'channel'
p5505
(lp5506
S'char'
p5507
a(lp5508
I-1
aaNtp5509
tp5510
tp5511
sS'DAQmxSetAIGain'
p5512
((lp5513
S'int32'
p5514
ag11
a((S'taskHandle'
p5515
(lp5516
S'TaskHandle'
p5517
aNtp5518
(S'channel'
p5519
(lp5520
S'char'
p5521
a(lp5522
I-1
aaNtp5523
(S'data'
p5524
(lp5525
S'float64'
p5526
aNtp5527
tp5528
tp5529
sS'DAQmxGetWriteSpaceAvail'
p5530
((lp5531
S'int32'
p5532
ag11
a((S'taskHandle'
p5533
(lp5534
S'TaskHandle'
p5535
aNtp5536
(S'data'
p5537
(lp5538
S'uInt32'
p5539
ag19
aNtp5540
tp5541
tp5542
sS'DAQmxGetCOPulseFreqUnits'
p5543
((lp5544
S'int32'
p5545
ag11
a((S'taskHandle'
p5546
(lp5547
S'TaskHandle'
p5548
aNtp5549
(S'channel'
p5550
(lp5551
S'char'
p5552
a(lp5553
I-1
aaNtp5554
(S'data'
p5555
(lp5556
S'int32'
p5557
ag19
aNtp5558
tp5559
tp5560
sS'DAQmxGetChanIsGlobal'
p5561
((lp5562
S'int32'
p5563
ag11
a((S'taskHandle'
p5564
(lp5565
S'TaskHandle'
p5566
aNtp5567
(S'channel'
p5568
(lp5569
S'char'
p5570
a(lp5571
I-1
aaNtp5572
(S'data'
p5573
(lp5574
S'bool32'
p5575
ag19
aNtp5576
tp5577
tp5578
sS'DAQmxResetDigPatternRefTrigSrc'
p5579
((lp5580
S'int32'
p5581
ag11
a((S'taskHandle'
p5582
(lp5583
S'TaskHandle'
p5584
aNtp5585
tp5586
tp5587
sS'DAQmxGetAIChanCalCalDate'
p5588
((lp5589
S'int32'
p5590
ag11
a((S'taskHandle'
p5591
(lp5592
S'TaskHandle'
p5593
aNtp5594
(S'channelName'
p5595
(lp5596
S'char'
p5597
a(lp5598
I-1
aaNtp5599
(S'year'
p5600
(lp5601
S'uInt32'
p5602
ag19
aNtp5603
(S'month'
p5604
(lp5605
S'uInt32'
p5606
ag19
aNtp5607
(S'day'
p5608
(lp5609
S'uInt32'
p5610
ag19
aNtp5611
(S'hour'
p5612
(lp5613
S'uInt32'
p5614
ag19
aNtp5615
(S'minute'
p5616
(lp5617
S'uInt32'
p5618
ag19
aNtp5619
tp5620
tp5621
sS'DAQmxGetAICustomScaleName'
p5622
((lp5623
S'int32'
p5624
ag11
a((S'taskHandle'
p5625
(lp5626
S'TaskHandle'
p5627
aNtp5628
(S'channel'
p5629
(lp5630
S'char'
p5631
a(lp5632
I-1
aaNtp5633
(S'data'
p5634
(lp5635
S'char'
p5636
ag19
aNtp5637
(S'bufferSize'
p5638
(lp5639
S'uInt32'
p5640
aNtp5641
tp5642
tp5643
sS'DAQmxResetAIRVDTSensitivityUnits'
p5644
((lp5645
S'int32'
p5646
ag11
a((S'taskHandle'
p5647
(lp5648
S'TaskHandle'
p5649
aNtp5650
(S'channel'
p5651
(lp5652
S'char'
p5653
a(lp5654
I-1
aaNtp5655
tp5656
tp5657
sS'DAQmxResetCIPulseWidthDigSyncEnable'
p5658
((lp5659
S'int32'
p5660
ag11
a((S'taskHandle'
p5661
(lp5662
S'TaskHandle'
p5663
aNtp5664
(S'channel'
p5665
(lp5666
S'char'
p5667
a(lp5668
I-1
aaNtp5669
tp5670
tp5671
sS'DAQmxSetSyncPulseSrc'
p5672
((lp5673
S'int32'
p5674
ag11
a((S'taskHandle'
p5675
(lp5676
S'TaskHandle'
p5677
aNtp5678
(S'data'
p5679
(lp5680
S'char'
p5681
ag19
aNtp5682
tp5683
tp5684
sS'DAQmxResetDigEdgeArmStartTrigSrc'
p5685
((lp5686
S'int32'
p5687
ag11
a((S'taskHandle'
p5688
(lp5689
S'TaskHandle'
p5690
aNtp5691
tp5692
tp5693
sS'DAQmxGetAnlgLvlPauseTrigCoupling'
p5694
((lp5695
S'int32'
p5696
ag11
a((S'taskHandle'
p5697
(lp5698
S'TaskHandle'
p5699
aNtp5700
(S'data'
p5701
(lp5702
S'int32'
p5703
ag19
aNtp5704
tp5705
tp5706
sS'DAQmxGetCINumPossiblyInvalidSamps'
p5707
((lp5708
S'int32'
p5709
ag11
a((S'taskHandle'
p5710
(lp5711
S'TaskHandle'
p5712
aNtp5713
(S'channel'
p5714
(lp5715
S'char'
p5716
a(lp5717
I-1
aaNtp5718
(S'data'
p5719
(lp5720
S'uInt32'
p5721
ag19
aNtp5722
tp5723
tp5724
sS'DAQmxResetStartTrigRetriggerable'
p5725
((lp5726
S'int32'
p5727
ag11
a((S'taskHandle'
p5728
(lp5729
S'TaskHandle'
p5730
aNtp5731
tp5732
tp5733
sS'DAQmxResetCIDupCountPrevent'
p5734
((lp5735
S'int32'
p5736
ag11
a((S'taskHandle'
p5737
(lp5738
S'TaskHandle'
p5739
aNtp5740
(S'channel'
p5741
(lp5742
S'char'
p5743
a(lp5744
I-1
aaNtp5745
tp5746
tp5747
sS'DAQmxResetExportedRdyForXferEventOutputTerm'
p5748
((lp5749
S'int32'
p5750
ag11
a((S'taskHandle'
p5751
(lp5752
S'TaskHandle'
p5753
aNtp5754
tp5755
tp5756
sS'DAQmxGetAIConvTimebaseSrc'
p5757
((lp5758
S'int32'
p5759
ag11
a((S'taskHandle'
p5760
(lp5761
S'TaskHandle'
p5762
aNtp5763
(S'data'
p5764
(lp5765
S'int32'
p5766
ag19
aNtp5767
tp5768
tp5769
sS'DAQmxGetDigEdgeWatchdogExpirTrigEdge'
p5770
((lp5771
S'int32'
p5772
ag11
a((S'taskHandle'
p5773
(lp5774
S'TaskHandle'
p5775
aNtp5776
(S'data'
p5777
(lp5778
S'int32'
p5779
ag19
aNtp5780
tp5781
tp5782
sS'DAQmxSetAnlgEdgeRefTrigCoupling'
p5783
((lp5784
S'int32'
p5785
ag11
a((S'taskHandle'
p5786
(lp5787
S'TaskHandle'
p5788
aNtp5789
(S'data'
p5790
(lp5791
S'int32'
p5792
aNtp5793
tp5794
tp5795
sS'DAQmxResetRealTimeWriteRecoveryMode'
p5796
((lp5797
S'int32'
p5798
ag11
a((S'taskHandle'
p5799
(lp5800
S'TaskHandle'
p5801
aNtp5802
tp5803
tp5804
sS'DAQmxSetAIEnhancedAliasRejectionEnable'
p5805
((lp5806
S'int32'
p5807
ag11
a((S'taskHandle'
p5808
(lp5809
S'TaskHandle'
p5810
aNtp5811
(S'channel'
p5812
(lp5813
S'char'
p5814
a(lp5815
I-1
aaNtp5816
(S'data'
p5817
(lp5818
S'bool32'
p5819
aNtp5820
tp5821
tp5822
sS'DAQmxGetDigPatternRefTrigWhen'
p5823
((lp5824
S'int32'
p5825
ag11
a((S'taskHandle'
p5826
(lp5827
S'TaskHandle'
p5828
aNtp5829
(S'data'
p5830
(lp5831
S'int32'
p5832
ag19
aNtp5833
tp5834
tp5835
sS'DAQmxGetCIPeriodDigFltrTimebaseSrc'
p5836
((lp5837
S'int32'
p5838
ag11
a((S'taskHandle'
p5839
(lp5840
S'TaskHandle'
p5841
aNtp5842
(S'channel'
p5843
(lp5844
S'char'
p5845
a(lp5846
I-1
aaNtp5847
(S'data'
p5848
(lp5849
S'char'
p5850
ag19
aNtp5851
(S'bufferSize'
p5852
(lp5853
S'uInt32'
p5854
aNtp5855
tp5856
tp5857
sS'DAQmxGetSwitchDevRelayList'
p5858
((lp5859
S'int32'
p5860
ag11
a((S'deviceName'
p5861
(lp5862
S'char'
p5863
a(lp5864
I-1
aaNtp5865
(S'data'
p5866
(lp5867
S'char'
p5868
ag19
aNtp5869
(S'bufferSize'
p5870
(lp5871
S'uInt32'
p5872
aNtp5873
tp5874
tp5875
sS'DAQmxResetAIBridgeBalanceFinePot'
p5876
((lp5877
S'int32'
p5878
ag11
a((S'taskHandle'
p5879
(lp5880
S'TaskHandle'
p5881
aNtp5882
(S'channel'
p5883
(lp5884
S'char'
p5885
a(lp5886
I-1
aaNtp5887
tp5888
tp5889
sS'DAQmxGetCICountEdgesDir'
p5890
((lp5891
S'int32'
p5892
ag11
a((S'taskHandle'
p5893
(lp5894
S'TaskHandle'
p5895
aNtp5896
(S'channel'
p5897
(lp5898
S'char'
p5899
a(lp5900
I-1
aaNtp5901
(S'data'
p5902
(lp5903
S'int32'
p5904
ag19
aNtp5905
tp5906
tp5907
sS'DAQmxGetScaleTableScaledVals'
p5908
((lp5909
S'int32'
p5910
ag11
a((S'scaleName'
p5911
(lp5912
S'char'
p5913
a(lp5914
I-1
aaNtp5915
(S'data'
p5916
(lp5917
S'float64'
p5918
ag19
aNtp5919
(S'arraySizeInSamples'
p5920
(lp5921
S'uInt32'
p5922
aNtp5923
tp5924
tp5925
sS'DAQmxGetStartTrigDelay'
p5926
((lp5927
S'int32'
p5928
ag11
a((S'taskHandle'
p5929
(lp5930
S'TaskHandle'
p5931
aNtp5932
(S'data'
p5933
(lp5934
S'float64'
p5935
ag19
aNtp5936
tp5937
tp5938
sS'DAQmxGetCITCReached'
p5939
((lp5940
S'int32'
p5941
ag11
a((S'taskHandle'
p5942
(lp5943
S'TaskHandle'
p5944
aNtp5945
(S'channel'
p5946
(lp5947
S'char'
p5948
a(lp5949
I-1
aaNtp5950
(S'data'
p5951
(lp5952
S'bool32'
p5953
ag19
aNtp5954
tp5955
tp5956
sS'DAQmxSetAISampAndHoldEnable'
p5957
((lp5958
S'int32'
p5959
ag11
a((S'taskHandle'
p5960
(lp5961
S'TaskHandle'
p5962
aNtp5963
(S'channel'
p5964
(lp5965
S'char'
p5966
a(lp5967
I-1
aaNtp5968
(S'data'
p5969
(lp5970
S'bool32'
p5971
aNtp5972
tp5973
tp5974
sS'DAQmxResetAIExcitUseForScaling'
p5975
((lp5976
S'int32'
p5977
ag11
a((S'taskHandle'
p5978
(lp5979
S'TaskHandle'
p5980
aNtp5981
(S'channel'
p5982
(lp5983
S'char'
p5984
a(lp5985
I-1
aaNtp5986
tp5987
tp5988
sS'DAQmxSaveGlobalChan'
p5989
((lp5990
S'int32'
p5991
ag11
a((S'taskHandle'
p5992
(lp5993
S'TaskHandle'
p5994
aNtp5995
(S'channelName'
p5996
(lp5997
S'char'
p5998
a(lp5999
I-1
aaNtp6000
(S'saveAs'
p6001
(lp6002
S'char'
p6003
a(lp6004
I-1
aaNtp6005
(S'author'
p6006
(lp6007
S'char'
p6008
a(lp6009
I-1
aaNtp6010
(S'options'
p6011
(lp6012
S'uInt32'
p6013
aNtp6014
tp6015
tp6016
sS'DAQmxSCBaseboardCalAdjust'
p6017
((lp6018
S'int32'
p6019
ag11
a((S'calHandle'
p6020
(lp6021
S'uInt32'
p6022
aNtp6023
(S'referenceVoltage'
p6024
(lp6025
S'float64'
p6026
aNtp6027
tp6028
tp6029
sS'DAQmxSetCISemiPeriodDigFltrTimebaseRate'
p6030
((lp6031
S'int32'
p6032
ag11
a((S'taskHandle'
p6033
(lp6034
S'TaskHandle'
p6035
aNtp6036
(S'channel'
p6037
(lp6038
S'char'
p6039
a(lp6040
I-1
aaNtp6041
(S'data'
p6042
(lp6043
S'float64'
p6044
aNtp6045
tp6046
tp6047
sS'DAQmxGetPersistedScaleAllowInteractiveDeletion'
p6048
((lp6049
S'int32'
p6050
ag11
a((S'scaleName'
p6051
(lp6052
S'char'
p6053
a(lp6054
I-1
aaNtp6055
(S'data'
p6056
(lp6057
S'bool32'
p6058
ag19
aNtp6059
tp6060
tp6061
sS'DAQmxSetDigEdgeArmStartTrigDigFltrMinPulseWidth'
p6062
((lp6063
S'int32'
p6064
ag11
a((S'taskHandle'
p6065
(lp6066
S'TaskHandle'
p6067
aNtp6068
(S'data'
p6069
(lp6070
S'float64'
p6071
aNtp6072
tp6073
tp6074
sS'DAQmxGetExportedChangeDetectEventOutputTerm'
p6075
((lp6076
S'int32'
p6077
ag11
a((S'taskHandle'
p6078
(lp6079
S'TaskHandle'
p6080
aNtp6081
(S'data'
p6082
(lp6083
S'char'
p6084
ag19
aNtp6085
(S'bufferSize'
p6086
(lp6087
S'uInt32'
p6088
aNtp6089
tp6090
tp6091
sS'DAQmxSetAODACRefExtSrc'
p6092
((lp6093
S'int32'
p6094
ag11
a((S'taskHandle'
p6095
(lp6096
S'TaskHandle'
p6097
aNtp6098
(S'channel'
p6099
(lp6100
S'char'
p6101
a(lp6102
I-1
aaNtp6103
(S'data'
p6104
(lp6105
S'char'
p6106
ag19
aNtp6107
tp6108
tp6109
sS'DAQmxSetAIThrmcplCJCVal'
p6110
((lp6111
S'int32'
p6112
ag11
a((S'taskHandle'
p6113
(lp6114
S'TaskHandle'
p6115
aNtp6116
(S'channel'
p6117
(lp6118
S'char'
p6119
a(lp6120
I-1
aaNtp6121
(S'data'
p6122
(lp6123
S'float64'
p6124
aNtp6125
tp6126
tp6127
sS'DAQmxResetAIRVDTUnits'
p6128
((lp6129
S'int32'
p6130
ag11
a((S'taskHandle'
p6131
(lp6132
S'TaskHandle'
p6133
aNtp6134
(S'channel'
p6135
(lp6136
S'char'
p6137
a(lp6138
I-1
aaNtp6139
tp6140
tp6141
sS'DAQmxResetDigEdgeArmStartTrigDigFltrEnable'
p6142
((lp6143
S'int32'
p6144
ag11
a((S'taskHandle'
p6145
(lp6146
S'TaskHandle'
p6147
aNtp6148
tp6149
tp6150
sS'DAQmxSetCIEncoderAInputTerm'
p6151
((lp6152
S'int32'
p6153
ag11
a((S'taskHandle'
p6154
(lp6155
S'TaskHandle'
p6156
aNtp6157
(S'channel'
p6158
(lp6159
S'char'
p6160
a(lp6161
I-1
aaNtp6162
(S'data'
p6163
(lp6164
S'char'
p6165
ag19
aNtp6166
tp6167
tp6168
sS'DAQmxSetAIRawDataCompressionType'
p6169
((lp6170
S'int32'
p6171
ag11
a((S'taskHandle'
p6172
(lp6173
S'TaskHandle'
p6174
aNtp6175
(S'channel'
p6176
(lp6177
S'char'
p6178
a(lp6179
I-1
aaNtp6180
(S'data'
p6181
(lp6182
S'int32'
p6183
aNtp6184
tp6185
tp6186
sS'DAQmxResetArmStartTrigType'
p6187
((lp6188
S'int32'
p6189
ag11
a((S'taskHandle'
p6190
(lp6191
S'TaskHandle'
p6192
aNtp6193
tp6194
tp6195
sS'DAQmxResetTimingAttribute'
p6196
((lp6197
S'int32'
p6198
ag11
a((S'taskHandle'
p6199
(lp6200
S'TaskHandle'
p6201
aNtp6202
(S'attribute'
p6203
(lp6204
S'int32'
p6205
aNtp6206
tp6207
tp6208
sS'DAQmxCreateCIFreqChan'
p6209
((lp6210
S'int32'
p6211
ag11
a((S'taskHandle'
p6212
(lp6213
S'TaskHandle'
p6214
aNtp6215
(S'counter'
p6216
(lp6217
S'char'
p6218
a(lp6219
I-1
aaNtp6220
(S'nameToAssignToChannel'
p6221
(lp6222
S'char'
p6223
a(lp6224
I-1
aaNtp6225
(S'minVal'
p6226
(lp6227
S'float64'
p6228
aNtp6229
(S'maxVal'
p6230
(lp6231
S'float64'
p6232
aNtp6233
(S'units'
p6234
(lp6235
S'int32'
p6236
aNtp6237
(S'edge'
p6238
(lp6239
S'int32'
p6240
aNtp6241
(S'measMethod'
p6242
(lp6243
S'int32'
p6244
aNtp6245
(S'measTime'
p6246
(lp6247
S'float64'
p6248
aNtp6249
(S'divisor'
p6250
(lp6251
S'uInt32'
p6252
aNtp6253
(S'customScaleName'
p6254
(lp6255
S'char'
p6256
a(lp6257
I-1
aaNtp6258
tp6259
tp6260
sS'DAQmxGetCIEncoderAInputDigFltrMinPulseWidth'
p6261
((lp6262
S'int32'
p6263
ag11
a((S'taskHandle'
p6264
(lp6265
S'TaskHandle'
p6266
aNtp6267
(S'channel'
p6268
(lp6269
S'char'
p6270
a(lp6271
I-1
aaNtp6272
(S'data'
p6273
(lp6274
S'float64'
p6275
ag19
aNtp6276
tp6277
tp6278
sS'DAQmxGetSwitchChanMaxDCVoltage'
p6279
((lp6280
S'int32'
p6281
ag11
a((S'switchChannelName'
p6282
(lp6283
S'char'
p6284
a(lp6285
I-1
aaNtp6286
(S'data'
p6287
(lp6288
S'float64'
p6289
ag19
aNtp6290
tp6291
tp6292
sS'DAQmxGetAnlgEdgeRefTrigLvl'
p6293
((lp6294
S'int32'
p6295
ag11
a((S'taskHandle'
p6296
(lp6297
S'TaskHandle'
p6298
aNtp6299
(S'data'
p6300
(lp6301
S'float64'
p6302
ag19
aNtp6303
tp6304
tp6305
sS'DAQmxGetExportedChangeDetectEventPulsePolarity'
p6306
((lp6307
S'int32'
p6308
ag11
a((S'taskHandle'
p6309
(lp6310
S'TaskHandle'
p6311
aNtp6312
(S'data'
p6313
(lp6314
S'int32'
p6315
ag19
aNtp6316
tp6317
tp6318
sS'DAQmxGetAIResolution'
p6319
((lp6320
S'int32'
p6321
ag11
a((S'taskHandle'
p6322
(lp6323
S'TaskHandle'
p6324
aNtp6325
(S'channel'
p6326
(lp6327
S'char'
p6328
a(lp6329
I-1
aaNtp6330
(S'data'
p6331
(lp6332
S'float64'
p6333
ag19
aNtp6334
tp6335
tp6336
sS'DAQmxResetAODataXferReqCond'
p6337
((lp6338
S'int32'
p6339
ag11
a((S'taskHandle'
p6340
(lp6341
S'TaskHandle'
p6342
aNtp6343
(S'channel'
p6344
(lp6345
S'char'
p6346
a(lp6347
I-1
aaNtp6348
tp6349
tp6350
sS'DAQmxGetAOLoadImpedance'
p6351
((lp6352
S'int32'
p6353
ag11
a((S'taskHandle'
p6354
(lp6355
S'TaskHandle'
p6356
aNtp6357
(S'channel'
p6358
(lp6359
S'char'
p6360
a(lp6361
I-1
aaNtp6362
(S'data'
p6363
(lp6364
S'float64'
p6365
ag19
aNtp6366
tp6367
tp6368
sS'DAQmxResetAODACRefAllowConnToGnd'
p6369
((lp6370
S'int32'
p6371
ag11
a((S'taskHandle'
p6372
(lp6373
S'TaskHandle'
p6374
aNtp6375
(S'channel'
p6376
(lp6377
S'char'
p6378
a(lp6379
I-1
aaNtp6380
tp6381
tp6382
sS'DAQmxResetSwitchScanBreakMode'
p6383
((lp6384
S'int32'
p6385
ag11
a((S'taskHandle'
p6386
(lp6387
S'TaskHandle'
p6388
aNtp6389
tp6390
tp6391
sS'DAQmxResetExported10MHzRefClkOutputTerm'
p6392
((lp6393
S'int32'
p6394
ag11
a((S'taskHandle'
p6395
(lp6396
S'TaskHandle'
p6397
aNtp6398
tp6399
tp6400
sS'DAQmxSetSwitchChanUsage'
p6401
((lp6402
S'int32'
p6403
ag11
a((S'switchChannelName'
p6404
(lp6405
S'char'
p6406
a(lp6407
I-1
aaNtp6408
(S'data'
p6409
(lp6410
S'int32'
p6411
aNtp6412
tp6413
tp6414
sS'DAQmxSetCIPeriodTerm'
p6415
((lp6416
S'int32'
p6417
ag11
a((S'taskHandle'
p6418
(lp6419
S'TaskHandle'
p6420
aNtp6421
(S'channel'
p6422
(lp6423
S'char'
p6424
a(lp6425
I-1
aaNtp6426
(S'data'
p6427
(lp6428
S'char'
p6429
ag19
aNtp6430
tp6431
tp6432
sS'DAQmxGetCIPeriodDigFltrTimebaseRate'
p6433
((lp6434
S'int32'
p6435
ag11
a((S'taskHandle'
p6436
(lp6437
S'TaskHandle'
p6438
aNtp6439
(S'channel'
p6440
(lp6441
S'char'
p6442
a(lp6443
I-1
aaNtp6444
(S'data'
p6445
(lp6446
S'float64'
p6447
ag19
aNtp6448
tp6449
tp6450
sS'DAQmxSetExportedAIHoldCmpltEventOutputTerm'
p6451
((lp6452
S'int32'
p6453
ag11
a((S'taskHandle'
p6454
(lp6455
S'TaskHandle'
p6456
aNtp6457
(S'data'
p6458
(lp6459
S'char'
p6460
ag19
aNtp6461
tp6462
tp6463
sS'DAQmxGetAIExcitVal'
p6464
((lp6465
S'int32'
p6466
ag11
a((S'taskHandle'
p6467
(lp6468
S'TaskHandle'
p6469
aNtp6470
(S'channel'
p6471
(lp6472
S'char'
p6473
a(lp6474
I-1
aaNtp6475
(S'data'
p6476
(lp6477
S'float64'
p6478
ag19
aNtp6479
tp6480
tp6481
sS'DAQmxSetDigEdgeArmStartTrigEdge'
p6482
((lp6483
S'int32'
p6484
ag11
a((S'taskHandle'
p6485
(lp6486
S'TaskHandle'
p6487
aNtp6488
(S'data'
p6489
(lp6490
S'int32'
p6491
aNtp6492
tp6493
tp6494
sS'DAQmxSetSampClkTimebaseActiveEdge'
p6495
((lp6496
S'int32'
p6497
ag11
a((S'taskHandle'
p6498
(lp6499
S'TaskHandle'
p6500
aNtp6501
(S'data'
p6502
(lp6503
S'int32'
p6504
aNtp6505
tp6506
tp6507
sS'DAQmxCreateAIDeviceTempChan'
p6508
((lp6509
S'int32'
p6510
ag11
a((S'taskHandle'
p6511
(lp6512
S'TaskHandle'
p6513
aNtp6514
(S'physicalChannel'
p6515
(lp6516
S'char'
p6517
a(lp6518
I-1
aaNtp6519
(S'nameToAssignToChannel'
p6520
(lp6521
S'char'
p6522
a(lp6523
I-1
aaNtp6524
(S'units'
p6525
(lp6526
S'int32'
p6527
aNtp6528
tp6529
tp6530
sS'DAQmxCreateCOPulseChanFreq'
p6531
((lp6532
S'int32'
p6533
ag11
a((S'taskHandle'
p6534
(lp6535
S'TaskHandle'
p6536
aNtp6537
(S'counter'
p6538
(lp6539
S'char'
p6540
a(lp6541
I-1
aaNtp6542
(S'nameToAssignToChannel'
p6543
(lp6544
S'char'
p6545
a(lp6546
I-1
aaNtp6547
(S'units'
p6548
(lp6549
S'int32'
p6550
aNtp6551
(S'idleState'
p6552
(lp6553
S'int32'
p6554
aNtp6555
(S'initialDelay'
p6556
(lp6557
S'float64'
p6558
aNtp6559
(S'freq'
p6560
(lp6561
S'float64'
p6562
aNtp6563
(S'dutyCycle'
p6564
(lp6565
S'float64'
p6566
aNtp6567
tp6568
tp6569
sS'DAQmxGetAITempUnits'
p6570
((lp6571
S'int32'
p6572
ag11
a((S'taskHandle'
p6573
(lp6574
S'TaskHandle'
p6575
aNtp6576
(S'channel'
p6577
(lp6578
S'char'
p6579
a(lp6580
I-1
aaNtp6581
(S'data'
p6582
(lp6583
S'int32'
p6584
ag19
aNtp6585
tp6586
tp6587
sS'DAQmxGetAOUseOnlyOnBrdMem'
p6588
((lp6589
S'int32'
p6590
ag11
a((S'taskHandle'
p6591
(lp6592
S'TaskHandle'
p6593
aNtp6594
(S'channel'
p6595
(lp6596
S'char'
p6597
a(lp6598
I-1
aaNtp6599
(S'data'
p6600
(lp6601
S'bool32'
p6602
ag19
aNtp6603
tp6604
tp6605
sS'DAQmxGetAOOutputType'
p6606
((lp6607
S'int32'
p6608
ag11
a((S'taskHandle'
p6609
(lp6610
S'TaskHandle'
p6611
aNtp6612
(S'channel'
p6613
(lp6614
S'char'
p6615
a(lp6616
I-1
aaNtp6617
(S'data'
p6618
(lp6619
S'int32'
p6620
ag19
aNtp6621
tp6622
tp6623
sS'DAQmxResetCITwoEdgeSepSecondDigFltrEnable'
p6624
((lp6625
S'int32'
p6626
ag11
a((S'taskHandle'
p6627
(lp6628
S'TaskHandle'
p6629
aNtp6630
(S'channel'
p6631
(lp6632
S'char'
p6633
a(lp6634
I-1
aaNtp6635
tp6636
tp6637
sS'DAQmxGetRealTimeWaitForNextSampClkWaitMode'
p6638
((lp6639
S'int32'
p6640
ag11
a((S'taskHandle'
p6641
(lp6642
S'TaskHandle'
p6643
aNtp6644
(S'data'
p6645
(lp6646
S'int32'
p6647
ag19
aNtp6648
tp6649
tp6650
sS'DAQmxSetRealTimeConvLateErrorsToWarnings'
p6651
((lp6652
S'int32'
p6653
ag11
a((S'taskHandle'
p6654
(lp6655
S'TaskHandle'
p6656
aNtp6657
(S'data'
p6658
(lp6659
S'bool32'
p6660
aNtp6661
tp6662
tp6663
sS'DAQmxResetCOPulseTimeInitialDelay'
p6664
((lp6665
S'int32'
p6666
ag11
a((S'taskHandle'
p6667
(lp6668
S'TaskHandle'
p6669
aNtp6670
(S'channel'
p6671
(lp6672
S'char'
p6673
a(lp6674
I-1
aaNtp6675
tp6676
tp6677
sS'DAQmxSetCIEncoderZInputTerm'
p6678
((lp6679
S'int32'
p6680
ag11
a((S'taskHandle'
p6681
(lp6682
S'TaskHandle'
p6683
aNtp6684
(S'channel'
p6685
(lp6686
S'char'
p6687
a(lp6688
I-1
aaNtp6689
(S'data'
p6690
(lp6691
S'char'
p6692
ag19
aNtp6693
tp6694
tp6695
sS'DAQmxGetScaleScaledUnits'
p6696
((lp6697
S'int32'
p6698
ag11
a((S'scaleName'
p6699
(lp6700
S'char'
p6701
a(lp6702
I-1
aaNtp6703
(S'data'
p6704
(lp6705
S'char'
p6706
ag19
aNtp6707
(S'bufferSize'
p6708
(lp6709
S'uInt32'
p6710
aNtp6711
tp6712
tp6713
sS'DAQmxSetAITermCfg'
p6714
((lp6715
S'int32'
p6716
ag11
a((S'taskHandle'
p6717
(lp6718
S'TaskHandle'
p6719
aNtp6720
(S'channel'
p6721
(lp6722
S'char'
p6723
a(lp6724
I-1
aaNtp6725
(S'data'
p6726
(lp6727
S'int32'
p6728
aNtp6729
tp6730
tp6731
sS'DAQmxResetExportedStartTrigOutputTerm'
p6732
((lp6733
S'int32'
p6734
ag11
a((S'taskHandle'
p6735
(lp6736
S'TaskHandle'
p6737
aNtp6738
tp6739
tp6740
sS'DAQmxGetCIEncoderBInputDigFltrTimebaseRate'
p6741
((lp6742
S'int32'
p6743
ag11
a((S'taskHandle'
p6744
(lp6745
S'TaskHandle'
p6746
aNtp6747
(S'channel'
p6748
(lp6749
S'char'
p6750
a(lp6751
I-1
aaNtp6752
(S'data'
p6753
(lp6754
S'float64'
p6755
ag19
aNtp6756
tp6757
tp6758
sS'DAQmxReadCounterScalarU32'
p6759
((lp6760
S'int32'
p6761
ag11
a((S'taskHandle'
p6762
(lp6763
S'TaskHandle'
p6764
aNtp6765
(S'timeout'
p6766
(lp6767
S'float64'
p6768
aNtp6769
(S'value'
p6770
(lp6771
S'uInt32'
p6772
ag19
aNtp6773
(S'reserved'
p6774
(lp6775
S'bool32'
p6776
ag19
aNtp6777
tp6778
tp6779
sS'DAQmxResetAIAccelSensitivity'
p6780
((lp6781
S'int32'
p6782
ag11
a((S'taskHandle'
p6783
(lp6784
S'TaskHandle'
p6785
aNtp6786
(S'channel'
p6787
(lp6788
S'char'
p6789
a(lp6790
I-1
aaNtp6791
tp6792
tp6793
sS'DAQmxResetCOCtrTimebaseDigFltrEnable'
p6794
((lp6795
S'int32'
p6796
ag11
a((S'taskHandle'
p6797
(lp6798
S'TaskHandle'
p6799
aNtp6800
(S'channel'
p6801
(lp6802
S'char'
p6803
a(lp6804
I-1
aaNtp6805
tp6806
tp6807
sS'DAQmxSetCICtrTimebaseSrc'
p6808
((lp6809
S'int32'
p6810
ag11
a((S'taskHandle'
p6811
(lp6812
S'TaskHandle'
p6813
aNtp6814
(S'channel'
p6815
(lp6816
S'char'
p6817
a(lp6818
I-1
aaNtp6819
(S'data'
p6820
(lp6821
S'char'
p6822
ag19
aNtp6823
tp6824
tp6825
sS'DAQmxResetCICountEdgesDirTerm'
p6826
((lp6827
S'int32'
p6828
ag11
a((S'taskHandle'
p6829
(lp6830
S'TaskHandle'
p6831
aNtp6832
(S'channel'
p6833
(lp6834
S'char'
p6835
a(lp6836
I-1
aaNtp6837
tp6838
tp6839
sS'DAQmxResetAIBridgeInitialVoltage'
p6840
((lp6841
S'int32'
p6842
ag11
a((S'taskHandle'
p6843
(lp6844
S'TaskHandle'
p6845
aNtp6846
(S'channel'
p6847
(lp6848
S'char'
p6849
a(lp6850
I-1
aaNtp6851
tp6852
tp6853
sS'DAQmxGetExportedHshkEventOutputTerm'
p6854
((lp6855
S'int32'
p6856
ag11
a((S'taskHandle'
p6857
(lp6858
S'TaskHandle'
p6859
aNtp6860
(S'data'
p6861
(lp6862
S'char'
p6863
ag19
aNtp6864
(S'bufferSize'
p6865
(lp6866
S'uInt32'
p6867
aNtp6868
tp6869
tp6870
sS'DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc'
p6871
((lp6872
S'int32'
p6873
ag11
a((S'taskHandle'
p6874
(lp6875
S'TaskHandle'
p6876
aNtp6877
(S'channel'
p6878
(lp6879
S'char'
p6880
a(lp6881
I-1
aaNtp6882
(S'data'
p6883
(lp6884
S'char'
p6885
ag19
aNtp6886
(S'bufferSize'
p6887
(lp6888
S'uInt32'
p6889
aNtp6890
tp6891
tp6892
sS'DAQmxSetCIPulseWidthTerm'
p6893
((lp6894
S'int32'
p6895
ag11
a((S'taskHandle'
p6896
(lp6897
S'TaskHandle'
p6898
aNtp6899
(S'channel'
p6900
(lp6901
S'char'
p6902
a(lp6903
I-1
aaNtp6904
(S'data'
p6905
(lp6906
S'char'
p6907
ag19
aNtp6908
tp6909
tp6910
sS'DAQmxSetExportedHshkEventInterlockedDeassertDelay'
p6911
((lp6912
S'int32'
p6913
ag11
a((S'taskHandle'
p6914
(lp6915
S'TaskHandle'
p6916
aNtp6917
(S'data'
p6918
(lp6919
S'float64'
p6920
aNtp6921
tp6922
tp6923
sS'DAQmxResetAIConvSrc'
p6924
((lp6925
S'int32'
p6926
ag11
a((S'taskHandle'
p6927
(lp6928
S'TaskHandle'
p6929
aNtp6930
tp6931
tp6932
sS'DAQmxSetCIDataXferMech'
p6933
((lp6934
S'int32'
p6935
ag11
a((S'taskHandle'
p6936
(lp6937
S'TaskHandle'
p6938
aNtp6939
(S'channel'
p6940
(lp6941
S'char'
p6942
a(lp6943
I-1
aaNtp6944
(S'data'
p6945
(lp6946
S'int32'
p6947
aNtp6948
tp6949
tp6950
sS'DAQmxCreateAIAccelChan'
p6951
((lp6952
S'int32'
p6953
ag11
a((S'taskHandle'
p6954
(lp6955
S'TaskHandle'
p6956
aNtp6957
(S'physicalChannel'
p6958
(lp6959
S'char'
p6960
a(lp6961
I-1
aaNtp6962
(S'nameToAssignToChannel'
p6963
(lp6964
S'char'
p6965
a(lp6966
I-1
aaNtp6967
(S'terminalConfig'
p6968
(lp6969
S'int32'
p6970
aNtp6971
(S'minVal'
p6972
(lp6973
S'float64'
p6974
aNtp6975
(S'maxVal'
p6976
(lp6977
S'float64'
p6978
aNtp6979
(S'units'
p6980
(lp6981
S'int32'
p6982
aNtp6983
(S'sensitivity'
p6984
(lp6985
S'float64'
p6986
aNtp6987
(S'sensitivityUnits'
p6988
(lp6989
S'int32'
p6990
aNtp6991
(S'currentExcitSource'
p6992
(lp6993
S'int32'
p6994
aNtp6995
(S'currentExcitVal'
p6996
(lp6997
S'float64'
p6998
aNtp6999
(S'customScaleName'
p7000
(lp7001
S'char'
p7002
a(lp7003
I-1
aaNtp7004
tp7005
tp7006
sS'DAQmxSetDIDigFltrEnable'
p7007
((lp7008
S'int32'
p7009
ag11
a((S'taskHandle'
p7010
(lp7011
S'TaskHandle'
p7012
aNtp7013
(S'channel'
p7014
(lp7015
S'char'
p7016
a(lp7017
I-1
aaNtp7018
(S'data'
p7019
(lp7020
S'bool32'
p7021
aNtp7022
tp7023
tp7024
sS'DAQmxGetAILowpassCutoffFreq'
p7025
((lp7026
S'int32'
p7027
ag11
a((S'taskHandle'
p7028
(lp7029
S'TaskHandle'
p7030
aNtp7031
(S'channel'
p7032
(lp7033
S'char'
p7034
a(lp7035
I-1
aaNtp7036
(S'data'
p7037
(lp7038
S'float64'
p7039
ag19
aNtp7040
tp7041
tp7042
sS'DAQmxResetHshkDelayAfterXfer'
p7043
((lp7044
S'int32'
p7045
ag11
a((S'taskHandle'
p7046
(lp7047
S'TaskHandle'
p7048
aNtp7049
tp7050
tp7051
sS'DAQmxWriteAnalogScalarF64'
p7052
((lp7053
S'int32'
p7054
ag11
a((S'taskHandle'
p7055
(lp7056
S'TaskHandle'
p7057
aNtp7058
(S'autoStart'
p7059
(lp7060
S'bool32'
p7061
aNtp7062
(S'timeout'
p7063
(lp7064
S'float64'
p7065
aNtp7066
(S'value'
p7067
(lp7068
S'float64'
p7069
aNtp7070
(S'reserved'
p7071
(lp7072
S'bool32'
p7073
ag19
aNtp7074
tp7075
tp7076
sS'DAQmxResetCOCtrTimebaseDigFltrTimebaseRate'
p7077
((lp7078
S'int32'
p7079
ag11
a((S'taskHandle'
p7080
(lp7081
S'TaskHandle'
p7082
aNtp7083
(S'channel'
p7084
(lp7085
S'char'
p7086
a(lp7087
I-1
aaNtp7088
tp7089
tp7090
sS'DAQmxGetWriteTotalSampPerChanGenerated'
p7091
((lp7092
S'int32'
p7093
ag11
a((S'taskHandle'
p7094
(lp7095
S'TaskHandle'
p7096
aNtp7097
(S'data'
p7098
(lp7099
S'uInt64'
p7100
ag19
aNtp7101
tp7102
tp7103
sS'DAQmxSetCIFreqTerm'
p7104
((lp7105
S'int32'
p7106
ag11
a((S'taskHandle'
p7107
(lp7108
S'TaskHandle'
p7109
aNtp7110
(S'channel'
p7111
(lp7112
S'char'
p7113
a(lp7114
I-1
aaNtp7115
(S'data'
p7116
(lp7117
S'char'
p7118
ag19
aNtp7119
tp7120
tp7121
sS'DAQmxSetCIPulseWidthUnits'
p7122
((lp7123
S'int32'
p7124
ag11
a((S'taskHandle'
p7125
(lp7126
S'TaskHandle'
p7127
aNtp7128
(S'channel'
p7129
(lp7130
S'char'
p7131
a(lp7132
I-1
aaNtp7133
(S'data'
p7134
(lp7135
S'int32'
p7136
aNtp7137
tp7138
tp7139
sS'DAQmxSetCIPeriodDigSyncEnable'
p7140
((lp7141
S'int32'
p7142
ag11
a((S'taskHandle'
p7143
(lp7144
S'TaskHandle'
p7145
aNtp7146
(S'channel'
p7147
(lp7148
S'char'
p7149
a(lp7150
I-1
aaNtp7151
(S'data'
p7152
(lp7153
S'bool32'
p7154
aNtp7155
tp7156
tp7157
sS'DAQmxResetCICountEdgesDigFltrTimebaseSrc'
p7158
((lp7159
S'int32'
p7160
ag11
a((S'taskHandle'
p7161
(lp7162
S'TaskHandle'
p7163
aNtp7164
(S'channel'
p7165
(lp7166
S'char'
p7167
a(lp7168
I-1
aaNtp7169
tp7170
tp7171
sS'DAQmxResetCIPulseWidthDigFltrEnable'
p7172
((lp7173
S'int32'
p7174
ag11
a((S'taskHandle'
p7175
(lp7176
S'TaskHandle'
p7177
aNtp7178
(S'channel'
p7179
(lp7180
S'char'
p7181
a(lp7182
I-1
aaNtp7183
tp7184
tp7185
sS'DAQmxResetSampClkTimebaseDiv'
p7186
((lp7187
S'int32'
p7188
ag11
a((S'taskHandle'
p7189
(lp7190
S'TaskHandle'
p7191
aNtp7192
tp7193
tp7194
sS'DAQmxResetAIExcitSrc'
p7195
((lp7196
S'int32'
p7197
ag11
a((S'taskHandle'
p7198
(lp7199
S'TaskHandle'
p7200
aNtp7201
(S'channel'
p7202
(lp7203
S'char'
p7204
a(lp7205
I-1
aaNtp7206
tp7207
tp7208
sS'DAQmxResetAnlgWinRefTrigWhen'
p7209
((lp7210
S'int32'
p7211
ag11
a((S'taskHandle'
p7212
(lp7213
S'TaskHandle'
p7214
aNtp7215
tp7216
tp7217
sS'DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc'
p7218
((lp7219
S'int32'
p7220
ag11
a((S'taskHandle'
p7221
(lp7222
S'TaskHandle'
p7223
aNtp7224
(S'channel'
p7225
(lp7226
S'char'
p7227
a(lp7228
I-1
aaNtp7229
tp7230
tp7231
sS'DAQmxSetAIChanCalVerifAcqVals'
p7232
((lp7233
S'int32'
p7234
ag11
a((S'taskHandle'
p7235
(lp7236
S'TaskHandle'
p7237
aNtp7238
(S'channel'
p7239
(lp7240
S'char'
p7241
a(lp7242
I-1
aaNtp7243
(S'data'
p7244
(lp7245
S'float64'
p7246
ag19
aNtp7247
(S'arraySizeInSamples'
p7248
(lp7249
S'uInt32'
p7250
aNtp7251
tp7252
tp7253
sS'DAQmxGetDIDataXferReqCond'
p7254
((lp7255
S'int32'
p7256
ag11
a((S'taskHandle'
p7257
(lp7258
S'TaskHandle'
p7259
aNtp7260
(S'channel'
p7261
(lp7262
S'char'
p7263
a(lp7264
I-1
aaNtp7265
(S'data'
p7266
(lp7267
S'int32'
p7268
ag19
aNtp7269
tp7270
tp7271
sS'DAQmxSwitchSetTopologyAndReset'
p7272
((lp7273
S'int32'
p7274
ag11
a((S'deviceName'
p7275
(lp7276
S'char'
p7277
a(lp7278
I-1
aaNtp7279
(S'newTopology'
p7280
(lp7281
S'char'
p7282
a(lp7283
I-1
aaNtp7284
tp7285
tp7286
sS'DAQmxGetAOCustomScaleName'
p7287
((lp7288
S'int32'
p7289
ag11
a((S'taskHandle'
p7290
(lp7291
S'TaskHandle'
p7292
aNtp7293
(S'channel'
p7294
(lp7295
S'char'
p7296
a(lp7297
I-1
aaNtp7298
(S'data'
p7299
(lp7300
S'char'
p7301
ag19
aNtp7302
(S'bufferSize'
p7303
(lp7304
S'uInt32'
p7305
aNtp7306
tp7307
tp7308
sS'DAQmxGetSwitchDevSettlingTime'
p7309
((lp7310
S'int32'
p7311
ag11
a((S'deviceName'
p7312
(lp7313
S'char'
p7314
a(lp7315
I-1
aaNtp7316
(S'data'
p7317
(lp7318
S'float64'
p7319
ag19
aNtp7320
tp7321
tp7322
sS'DAQmxGetAIBridgeCfg'
p7323
((lp7324
S'int32'
p7325
ag11
a((S'taskHandle'
p7326
(lp7327
S'TaskHandle'
p7328
aNtp7329
(S'channel'
p7330
(lp7331
S'char'
p7332
a(lp7333
I-1
aaNtp7334
(S'data'
p7335
(lp7336
S'int32'
p7337
ag19
aNtp7338
tp7339
tp7340
sS'DAQmxGetCIPrescaler'
p7341
((lp7342
S'int32'
p7343
ag11
a((S'taskHandle'
p7344
(lp7345
S'TaskHandle'
p7346
aNtp7347
(S'channel'
p7348
(lp7349
S'char'
p7350
a(lp7351
I-1
aaNtp7352
(S'data'
p7353
(lp7354
S'uInt32'
p7355
ag19
aNtp7356
tp7357
tp7358
sS'DAQmxCreateDOChan'
p7359
((lp7360
S'int32'
p7361
ag11
a((S'taskHandle'
p7362
(lp7363
S'TaskHandle'
p7364
aNtp7365
(S'lines'
p7366
(lp7367
S'char'
p7368
a(lp7369
I-1
aaNtp7370
(S'nameToAssignToLines'
p7371
(lp7372
S'char'
p7373
a(lp7374
I-1
aaNtp7375
(S'lineGrouping'
p7376
(lp7377
S'int32'
p7378
aNtp7379
tp7380
tp7381
sS'DAQmxGetSwitchChanMaxDCSwitchCurrent'
p7382
((lp7383
S'int32'
p7384
ag11
a((S'switchChannelName'
p7385
(lp7386
S'char'
p7387
a(lp7388
I-1
aaNtp7389
(S'data'
p7390
(lp7391
S'float64'
p7392
ag19
aNtp7393
tp7394
tp7395
sS'DAQmxResetAILowpassSwitchCapOutClkDiv'
p7396
((lp7397
S'int32'
p7398
ag11
a((S'taskHandle'
p7399
(lp7400
S'TaskHandle'
p7401
aNtp7402
(S'channel'
p7403
(lp7404
S'char'
p7405
a(lp7406
I-1
aaNtp7407
tp7408
tp7409
sS'DAQmxSetCOPulseTicksInitialDelay'
p7410
((lp7411
S'int32'
p7412
ag11
a((S'taskHandle'
p7413
(lp7414
S'TaskHandle'
p7415
aNtp7416
(S'channel'
p7417
(lp7418
S'char'
p7419
a(lp7420
I-1
aaNtp7421
(S'data'
p7422
(lp7423
S'uInt32'
p7424
aNtp7425
tp7426
tp7427
sS'DAQmxGetDigEdgeArmStartTrigDigFltrEnable'
p7428
((lp7429
S'int32'
p7430
ag11
a((S'taskHandle'
p7431
(lp7432
S'TaskHandle'
p7433
aNtp7434
(S'data'
p7435
(lp7436
S'bool32'
p7437
ag19
aNtp7438
tp7439
tp7440
sS'DAQmxResetCOPulseLowTime'
p7441
((lp7442
S'int32'
p7443
ag11
a((S'taskHandle'
p7444
(lp7445
S'TaskHandle'
p7446
aNtp7447
(S'channel'
p7448
(lp7449
S'char'
p7450
a(lp7451
I-1
aaNtp7452
tp7453
tp7454
sS'DAQmxResetCOPulseHighTime'
p7455
((lp7456
S'int32'
p7457
ag11
a((S'taskHandle'
p7458
(lp7459
S'TaskHandle'
p7460
aNtp7461
(S'channel'
p7462
(lp7463
S'char'
p7464
a(lp7465
I-1
aaNtp7466
tp7467
tp7468
sS'DAQmxGetOnDemandSimultaneousAOEnable'
p7469
((lp7470
S'int32'
p7471
ag11
a((S'taskHandle'
p7472
(lp7473
S'TaskHandle'
p7474
aNtp7475
(S'data'
p7476
(lp7477
S'bool32'
p7478
ag19
aNtp7479
tp7480
tp7481
sS'DAQmxSetScalePreScaledUnits'
p7482
((lp7483
S'int32'
p7484
ag11
a((S'scaleName'
p7485
(lp7486
S'char'
p7487
a(lp7488
I-1
aaNtp7489
(S'data'
p7490
(lp7491
S'int32'
p7492
aNtp7493
tp7494
tp7495
sS'DAQmxSetAnlgWinPauseTrigTop'
p7496
((lp7497
S'int32'
p7498
ag11
a((S'taskHandle'
p7499
(lp7500
S'TaskHandle'
p7501
aNtp7502
(S'data'
p7503
(lp7504
S'float64'
p7505
aNtp7506
tp7507
tp7508
sS'DAQmxGetAOMax'
p7509
((lp7510
S'int32'
p7511
ag11
a((S'taskHandle'
p7512
(lp7513
S'TaskHandle'
p7514
aNtp7515
(S'channel'
p7516
(lp7517
S'char'
p7518
a(lp7519
I-1
aaNtp7520
(S'data'
p7521
(lp7522
S'float64'
p7523
ag19
aNtp7524
tp7525
tp7526
sS'DAQmxDisableAdvTrig'
p7527
((lp7528
S'int32'
p7529
ag11
a((S'taskHandle'
p7530
(lp7531
S'TaskHandle'
p7532
aNtp7533
tp7534
tp7535
sS'DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc'
p7536
((lp7537
S'int32'
p7538
ag11
a((S'taskHandle'
p7539
(lp7540
S'TaskHandle'
p7541
aNtp7542
(S'data'
p7543
(lp7544
S'char'
p7545
ag19
aNtp7546
tp7547
tp7548
sS'DAQmxSetCICountEdgesActiveEdge'
p7549
((lp7550
S'int32'
p7551
ag11
a((S'taskHandle'
p7552
(lp7553
S'TaskHandle'
p7554
aNtp7555
(S'channel'
p7556
(lp7557
S'char'
p7558
a(lp7559
I-1
aaNtp7560
(S'data'
p7561
(lp7562
S'int32'
p7563
aNtp7564
tp7565
tp7566
sS'DAQmxGetAIRawSampJustification'
p7567
((lp7568
S'int32'
p7569
ag11
a((S'taskHandle'
p7570
(lp7571
S'TaskHandle'
p7572
aNtp7573
(S'channel'
p7574
(lp7575
S'char'
p7576
a(lp7577
I-1
aaNtp7578
(S'data'
p7579
(lp7580
S'int32'
p7581
ag19
aNtp7582
tp7583
tp7584
sS'DAQmxGetAODACOffsetSrc'
p7585
((lp7586
S'int32'
p7587
ag11
a((S'taskHandle'
p7588
(lp7589
S'TaskHandle'
p7590
aNtp7591
(S'channel'
p7592
(lp7593
S'char'
p7594
a(lp7595
I-1
aaNtp7596
(S'data'
p7597
(lp7598
S'int32'
p7599
ag19
aNtp7600
tp7601
tp7602
sS'DAQmxSetAICoupling'
p7603
((lp7604
S'int32'
p7605
ag11
a((S'taskHandle'
p7606
(lp7607
S'TaskHandle'
p7608
aNtp7609
(S'channel'
p7610
(lp7611
S'char'
p7612
a(lp7613
I-1
aaNtp7614
(S'data'
p7615
(lp7616
S'int32'
p7617
aNtp7618
tp7619
tp7620
sS'DAQmxResetCIPulseWidthTerm'
p7621
((lp7622
S'int32'
p7623
ag11
a((S'taskHandle'
p7624
(lp7625
S'TaskHandle'
p7626
aNtp7627
(S'channel'
p7628
(lp7629
S'char'
p7630
a(lp7631
I-1
aaNtp7632
tp7633
tp7634
sS'DAQmxResetExportedAdvCmpltEventPulsePolarity'
p7635
((lp7636
S'int32'
p7637
ag11
a((S'taskHandle'
p7638
(lp7639
S'TaskHandle'
p7640
aNtp7641
tp7642
tp7643
sS'DAQmxResetAODACRefSrc'
p7644
((lp7645
S'int32'
p7646
ag11
a((S'taskHandle'
p7647
(lp7648
S'TaskHandle'
p7649
aNtp7650
(S'channel'
p7651
(lp7652
S'char'
p7653
a(lp7654
I-1
aaNtp7655
tp7656
tp7657
sS'DAQmxResetExportedSampClkPulsePolarity'
p7658
((lp7659
S'int32'
p7660
ag11
a((S'taskHandle'
p7661
(lp7662
S'TaskHandle'
p7663
aNtp7664
tp7665
tp7666
sS'DAQmxResetExportedSampClkTimebaseOutputTerm'
p7667
((lp7668
S'int32'
p7669
ag11
a((S'taskHandle'
p7670
(lp7671
S'TaskHandle'
p7672
aNtp7673
tp7674
tp7675
sS'DAQmxResetAIChanCalVerifRefVals'
p7676
((lp7677
S'int32'
p7678
ag11
a((S'taskHandle'
p7679
(lp7680
S'TaskHandle'
p7681
aNtp7682
(S'channel'
p7683
(lp7684
S'char'
p7685
a(lp7686
I-1
aaNtp7687
tp7688
tp7689
sS'DAQmxSetReadChannelsToRead'
p7690
((lp7691
S'int32'
p7692
ag11
a((S'taskHandle'
p7693
(lp7694
S'TaskHandle'
p7695
aNtp7696
(S'data'
p7697
(lp7698
S'char'
p7699
ag19
aNtp7700
tp7701
tp7702
sS'DAQmxResetDigLvlPauseTrigDigFltrTimebaseRate'
p7703
((lp7704
S'int32'
p7705
ag11
a((S'taskHandle'
p7706
(lp7707
S'TaskHandle'
p7708
aNtp7709
tp7710
tp7711
sS'DAQmxSetAIExcitSrc'
p7712
((lp7713
S'int32'
p7714
ag11
a((S'taskHandle'
p7715
(lp7716
S'TaskHandle'
p7717
aNtp7718
(S'channel'
p7719
(lp7720
S'char'
p7721
a(lp7722
I-1
aaNtp7723
(S'data'
p7724
(lp7725
S'int32'
p7726
aNtp7727
tp7728
tp7729
sS'DAQmxWaitForNextSampleClock'
p7730
((lp7731
S'int32'
p7732
ag11
a((S'taskHandle'
p7733
(lp7734
S'TaskHandle'
p7735
aNtp7736
(S'timeout'
p7737
(lp7738
S'float64'
p7739
aNtp7740
(S'isLate'
p7741
(lp7742
S'bool32'
p7743
ag19
aNtp7744
tp7745
tp7746
sS'DAQmxGetSwitchChanImpedance'
p7747
((lp7748
S'int32'
p7749
ag11
a((S'switchChannelName'
p7750
(lp7751
S'char'
p7752
a(lp7753
I-1
aaNtp7754
(S'data'
p7755
(lp7756
S'float64'
p7757
ag19
aNtp7758
tp7759
tp7760
sS'DAQmxGetCIPeriodMeasMeth'
p7761
((lp7762
S'int32'
p7763
ag11
a((S'taskHandle'
p7764
(lp7765
S'TaskHandle'
p7766
aNtp7767
(S'channel'
p7768
(lp7769
S'char'
p7770
a(lp7771
I-1
aaNtp7772
(S'data'
p7773
(lp7774
S'int32'
p7775
ag19
aNtp7776
tp7777
tp7778
sS'DAQmxResetCICtrTimebaseActiveEdge'
p7779
((lp7780
S'int32'
p7781
ag11
a((S'taskHandle'
p7782
(lp7783
S'TaskHandle'
p7784
aNtp7785
(S'channel'
p7786
(lp7787
S'char'
p7788
a(lp7789
I-1
aaNtp7790
tp7791
tp7792
sS'DAQmxSetAnlgWinRefTrigBtm'
p7793
((lp7794
S'int32'
p7795
ag11
a((S'taskHandle'
p7796
(lp7797
S'TaskHandle'
p7798
aNtp7799
(S'data'
p7800
(lp7801
S'float64'
p7802
aNtp7803
tp7804
tp7805
sS'DAQmxSetDigEdgeAdvTrigEdge'
p7806
((lp7807
S'int32'
p7808
ag11
a((S'taskHandle'
p7809
(lp7810
S'TaskHandle'
p7811
aNtp7812
(S'data'
p7813
(lp7814
S'int32'
p7815
aNtp7816
tp7817
tp7818
sS'DAQmxCfgImplicitTiming'
p7819
((lp7820
S'int32'
p7821
ag11
a((S'taskHandle'
p7822
(lp7823
S'TaskHandle'
p7824
aNtp7825
(S'sampleMode'
p7826
(lp7827
S'int32'
p7828
aNtp7829
(S'sampsPerChan'
p7830
(lp7831
S'uInt64'
p7832
aNtp7833
tp7834
tp7835
sS'DAQmxGetExportedHshkEventInterlockedAssertOnStart'
p7836
((lp7837
S'int32'
p7838
ag11
a((S'taskHandle'
p7839
(lp7840
S'TaskHandle'
p7841
aNtp7842
(S'data'
p7843
(lp7844
S'bool32'
p7845
ag19
aNtp7846
tp7847
tp7848
sS'DAQmxSetCOCtrTimebaseDigFltrTimebaseRate'
p7849
((lp7850
S'int32'
p7851
ag11
a((S'taskHandle'
p7852
(lp7853
S'TaskHandle'
p7854
aNtp7855
(S'channel'
p7856
(lp7857
S'char'
p7858
a(lp7859
I-1
aaNtp7860
(S'data'
p7861
(lp7862
S'float64'
p7863
aNtp7864
tp7865
tp7866
sS'DAQmxSetCIPeriodMeasTime'
p7867
((lp7868
S'int32'
p7869
ag11
a((S'taskHandle'
p7870
(lp7871
S'TaskHandle'
p7872
aNtp7873
(S'channel'
p7874
(lp7875
S'char'
p7876
a(lp7877
I-1
aaNtp7878
(S'data'
p7879
(lp7880
S'float64'
p7881
aNtp7882
tp7883
tp7884
sS'DAQmxSetAIRngLow'
p7885
((lp7886
S'int32'
p7887
ag11
a((S'taskHandle'
p7888
(lp7889
S'TaskHandle'
p7890
aNtp7891
(S'channel'
p7892
(lp7893
S'char'
p7894
a(lp7895
I-1
aaNtp7896
(S'data'
p7897
(lp7898
S'float64'
p7899
aNtp7900
tp7901
tp7902
sS'DAQmxResetRefClkSrc'
p7903
((lp7904
S'int32'
p7905
ag11
a((S'taskHandle'
p7906
(lp7907
S'TaskHandle'
p7908
aNtp7909
tp7910
tp7911
sS'DAQmxGetAODACRefSrc'
p7912
((lp7913
S'int32'
p7914
ag11
a((S'taskHandle'
p7915
(lp7916
S'TaskHandle'
p7917
aNtp7918
(S'channel'
p7919
(lp7920
S'char'
p7921
a(lp7922
I-1
aaNtp7923
(S'data'
p7924
(lp7925
S'int32'
p7926
ag19
aNtp7927
tp7928
tp7929
sS'DAQmxSetAnlgEdgeRefTrigLvl'
p7930
((lp7931
S'int32'
p7932
ag11
a((S'taskHandle'
p7933
(lp7934
S'TaskHandle'
p7935
aNtp7936
(S'data'
p7937
(lp7938
S'float64'
p7939
aNtp7940
tp7941
tp7942
sS'DAQmxCreateAIVoltageChan'
p7943
((lp7944
S'int32'
p7945
ag11
a((S'taskHandle'
p7946
(lp7947
S'TaskHandle'
p7948
aNtp7949
(S'physicalChannel'
p7950
(lp7951
S'char'
p7952
a(lp7953
I-1
aaNtp7954
(S'nameToAssignToChannel'
p7955
(lp7956
S'char'
p7957
a(lp7958
I-1
aaNtp7959
(S'terminalConfig'
p7960
(lp7961
S'int32'
p7962
aNtp7963
(S'minVal'
p7964
(lp7965
S'float64'
p7966
aNtp7967
(S'maxVal'
p7968
(lp7969
S'float64'
p7970
aNtp7971
(S'units'
p7972
(lp7973
S'int32'
p7974
aNtp7975
(S'customScaleName'
p7976
(lp7977
S'char'
p7978
a(lp7979
I-1
aaNtp7980
tp7981
tp7982
sS'DAQmxGetCITimestampUnits'
p7983
((lp7984
S'int32'
p7985
ag11
a((S'taskHandle'
p7986
(lp7987
S'TaskHandle'
p7988
aNtp7989
(S'channel'
p7990
(lp7991
S'char'
p7992
a(lp7993
I-1
aaNtp7994
(S'data'
p7995
(lp7996
S'int32'
p7997
ag19
aNtp7998
tp7999
tp8000
sS'DAQmxGetAILowpassSwitchCapExtClkFreq'
p8001
((lp8002
S'int32'
p8003
ag11
a((S'taskHandle'
p8004
(lp8005
S'TaskHandle'
p8006
aNtp8007
(S'channel'
p8008
(lp8009
S'char'
p8010
a(lp8011
I-1
aaNtp8012
(S'data'
p8013
(lp8014
S'float64'
p8015
ag19
aNtp8016
tp8017
tp8018
sS'DAQmxGetChangeDetectDIFallingEdgePhysicalChans'
p8019
((lp8020
S'int32'
p8021
ag11
a((S'taskHandle'
p8022
(lp8023
S'TaskHandle'
p8024
aNtp8025
(S'data'
p8026
(lp8027
S'char'
p8028
ag19
aNtp8029
(S'bufferSize'
p8030
(lp8031
S'uInt32'
p8032
aNtp8033
tp8034
tp8035
sS'DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate'
p8036
((lp8037
S'int32'
p8038
ag11
a((S'taskHandle'
p8039
(lp8040
S'TaskHandle'
p8041
aNtp8042
(S'data'
p8043
(lp8044
S'float64'
p8045
ag19
aNtp8046
tp8047
tp8048
sS'DAQmxGetDevPCIBusNum'
p8049
((lp8050
S'int32'
p8051
ag11
a((S'device'
p8052
(lp8053
S'char'
p8054
a(lp8055
I-1
aaNtp8056
(S'data'
p8057
(lp8058
S'uInt32'
p8059
ag19
aNtp8060
tp8061
tp8062
sS'DAQmxSetCIPeriodStartingEdge'
p8063
((lp8064
S'int32'
p8065
ag11
a((S'taskHandle'
p8066
(lp8067
S'TaskHandle'
p8068
aNtp8069
(S'channel'
p8070
(lp8071
S'char'
p8072
a(lp8073
I-1
aaNtp8074
(S'data'
p8075
(lp8076
S'int32'
p8077
aNtp8078
tp8079
tp8080
sS'DAQmxSetExportedChangeDetectEventPulsePolarity'
p8081
((lp8082
S'int32'
p8083
ag11
a((S'taskHandle'
p8084
(lp8085
S'TaskHandle'
p8086
aNtp8087
(S'data'
p8088
(lp8089
S'int32'
p8090
aNtp8091
tp8092
tp8093
sS'DAQmxGetDevProductNum'
p8094
((lp8095
S'int32'
p8096
ag11
a((S'device'
p8097
(lp8098
S'char'
p8099
a(lp8100
I-1
aaNtp8101
(S'data'
p8102
(lp8103
S'uInt32'
p8104
ag19
aNtp8105
tp8106
tp8107
sS'DAQmxResetCITimestampUnits'
p8108
((lp8109
S'int32'
p8110
ag11
a((S'taskHandle'
p8111
(lp8112
S'TaskHandle'
p8113
aNtp8114
(S'channel'
p8115
(lp8116
S'char'
p8117
a(lp8118
I-1
aaNtp8119
tp8120
tp8121
sS'DAQmxGetDevCIPhysicalChans'
p8122
((lp8123
S'int32'
p8124
ag11
a((S'device'
p8125
(lp8126
S'char'
p8127
a(lp8128
I-1
aaNtp8129
(S'data'
p8130
(lp8131
S'char'
p8132
ag19
aNtp8133
(S'bufferSize'
p8134
(lp8135
S'uInt32'
p8136
aNtp8137
tp8138
tp8139
sS'DAQmxGetCICountEdgesDigFltrTimebaseSrc'
p8140
((lp8141
S'int32'
p8142
ag11
a((S'taskHandle'
p8143
(lp8144
S'TaskHandle'
p8145
aNtp8146
(S'channel'
p8147
(lp8148
S'char'
p8149
a(lp8150
I-1
aaNtp8151
(S'data'
p8152
(lp8153
S'char'
p8154
ag19
aNtp8155
(S'bufferSize'
p8156
(lp8157
S'uInt32'
p8158
aNtp8159
tp8160
tp8161
sS'DAQmxGetExportedAdvCmpltEventPulseWidth'
p8162
((lp8163
S'int32'
p8164
ag11
a((S'taskHandle'
p8165
(lp8166
S'TaskHandle'
p8167
aNtp8168
(S'data'
p8169
(lp8170
S'float64'
p8171
ag19
aNtp8172
tp8173
tp8174
sS'DAQmxGetAIDitherEnable'
p8175
((lp8176
S'int32'
p8177
ag11
a((S'taskHandle'
p8178
(lp8179
S'TaskHandle'
p8180
aNtp8181
(S'channel'
p8182
(lp8183
S'char'
p8184
a(lp8185
I-1
aaNtp8186
(S'data'
p8187
(lp8188
S'bool32'
p8189
ag19
aNtp8190
tp8191
tp8192
sS'DAQmxResetCIPeriodDigSyncEnable'
p8193
((lp8194
S'int32'
p8195
ag11
a((S'taskHandle'
p8196
(lp8197
S'TaskHandle'
p8198
aNtp8199
(S'channel'
p8200
(lp8201
S'char'
p8202
a(lp8203
I-1
aaNtp8204
tp8205
tp8206
sS'DAQmxSetCOCtrTimebaseDigFltrEnable'
p8207
((lp8208
S'int32'
p8209
ag11
a((S'taskHandle'
p8210
(lp8211
S'TaskHandle'
p8212
aNtp8213
(S'channel'
p8214
(lp8215
S'char'
p8216
a(lp8217
I-1
aaNtp8218
(S'data'
p8219
(lp8220
S'bool32'
p8221
aNtp8222
tp8223
tp8224
sS'DAQmxSetAIFreqUnits'
p8225
((lp8226
S'int32'
p8227
ag11
a((S'taskHandle'
p8228
(lp8229
S'TaskHandle'
p8230
aNtp8231
(S'channel'
p8232
(lp8233
S'char'
p8234
a(lp8235
I-1
aaNtp8236
(S'data'
p8237
(lp8238
S'int32'
p8239
aNtp8240
tp8241
tp8242
sS'DAQmxSetAIStrainGageCfg'
p8243
((lp8244
S'int32'
p8245
ag11
a((S'taskHandle'
p8246
(lp8247
S'TaskHandle'
p8248
aNtp8249
(S'channel'
p8250
(lp8251
S'char'
p8252
a(lp8253
I-1
aaNtp8254
(S'data'
p8255
(lp8256
S'int32'
p8257
aNtp8258
tp8259
tp8260
sS'DAQmxResetWatchdogTimeout'
p8261
((lp8262
S'int32'
p8263
ag11
a((S'taskHandle'
p8264
(lp8265
S'TaskHandle'
p8266
aNtp8267
tp8268
tp8269
sS'DAQmxResetAIDitherEnable'
p8270
((lp8271
S'int32'
p8272
ag11
a((S'taskHandle'
p8273
(lp8274
S'TaskHandle'
p8275
aNtp8276
(S'channel'
p8277
(lp8278
S'char'
p8279
a(lp8280
I-1
aaNtp8281
tp8282
tp8283
sS'DAQmxGetAISampAndHoldEnable'
p8284
((lp8285
S'int32'
p8286
ag11
a((S'taskHandle'
p8287
(lp8288
S'TaskHandle'
p8289
aNtp8290
(S'channel'
p8291
(lp8292
S'char'
p8293
a(lp8294
I-1
aaNtp8295
(S'data'
p8296
(lp8297
S'bool32'
p8298
ag19
aNtp8299
tp8300
tp8301
sS'DAQmxGetDigEdgeStartTrigSrc'
p8302
((lp8303
S'int32'
p8304
ag11
a((S'taskHandle'
p8305
(lp8306
S'TaskHandle'
p8307
aNtp8308
(S'data'
p8309
(lp8310
S'char'
p8311
ag19
aNtp8312
(S'bufferSize'
p8313
(lp8314
S'uInt32'
p8315
aNtp8316
tp8317
tp8318
sS'DAQmxSetCOPulseHighTicks'
p8319
((lp8320
S'int32'
p8321
ag11
a((S'taskHandle'
p8322
(lp8323
S'TaskHandle'
p8324
aNtp8325
(S'channel'
p8326
(lp8327
S'char'
p8328
a(lp8329
I-1
aaNtp8330
(S'data'
p8331
(lp8332
S'uInt32'
p8333
aNtp8334
tp8335
tp8336
sS'DAQmxWriteBinaryU16'
p8337
((lp8338
S'int32'
p8339
ag11
a((S'taskHandle'
p8340
(lp8341
S'TaskHandle'
p8342
aNtp8343
(S'numSampsPerChan'
p8344
(lp8345
S'int32'
p8346
aNtp8347
(S'autoStart'
p8348
(lp8349
S'bool32'
p8350
aNtp8351
(S'timeout'
p8352
(lp8353
S'float64'
p8354
aNtp8355
(S'dataLayout'
p8356
(lp8357
S'bool32'
p8358
aNtp8359
(S'writeArray'
p8360
(lp8361
S'uInt16'
p8362
a(lp8363
I-1
aaNtp8364
(S'sampsPerChanWritten'
p8365
(lp8366
S'int32'
p8367
ag19
aNtp8368
(S'reserved'
p8369
(lp8370
S'bool32'
p8371
ag19
aNtp8372
tp8373
tp8374
sS'DAQmxSetAIChanCalPolyForwardCoeff'
p8375
((lp8376
S'int32'
p8377
ag11
a((S'taskHandle'
p8378
(lp8379
S'TaskHandle'
p8380
aNtp8381
(S'channel'
p8382
(lp8383
S'char'
p8384
a(lp8385
I-1
aaNtp8386
(S'data'
p8387
(lp8388
S'float64'
p8389
ag19
aNtp8390
(S'arraySizeInSamples'
p8391
(lp8392
S'uInt32'
p8393
aNtp8394
tp8395
tp8396
sS'DAQmxGetAIConvActiveEdge'
p8397
((lp8398
S'int32'
p8399
ag11
a((S'taskHandle'
p8400
(lp8401
S'TaskHandle'
p8402
aNtp8403
(S'data'
p8404
(lp8405
S'int32'
p8406
ag19
aNtp8407
tp8408
tp8409
sS'DAQmxSetCICountEdgesDigSyncEnable'
p8410
((lp8411
S'int32'
p8412
ag11
a((S'taskHandle'
p8413
(lp8414
S'TaskHandle'
p8415
aNtp8416
(S'channel'
p8417
(lp8418
S'char'
p8419
a(lp8420
I-1
aaNtp8421
(S'data'
p8422
(lp8423
S'bool32'
p8424
aNtp8425
tp8426
tp8427
sS'DAQmxCfgAnlgEdgeStartTrig'
p8428
((lp8429
S'int32'
p8430
ag11
a((S'taskHandle'
p8431
(lp8432
S'TaskHandle'
p8433
aNtp8434
(S'triggerSource'
p8435
(lp8436
S'char'
p8437
a(lp8438
I-1
aaNtp8439
(S'triggerSlope'
p8440
(lp8441
S'int32'
p8442
aNtp8443
(S'triggerLevel'
p8444
(lp8445
S'float64'
p8446
aNtp8447
tp8448
tp8449
sS'DAQmxSetCalUserDefinedInfo'
p8450
((lp8451
S'int32'
p8452
ag11
a((S'deviceName'
p8453
(lp8454
S'char'
p8455
a(lp8456
I-1
aaNtp8457
(S'data'
p8458
(lp8459
S'char'
p8460
ag19
aNtp8461
tp8462
tp8463
sS'DAQmxGetReadDigitalLinesBytesPerChan'
p8464
((lp8465
S'int32'
p8466
ag11
a((S'taskHandle'
p8467
(lp8468
S'TaskHandle'
p8469
aNtp8470
(S'data'
p8471
(lp8472
S'uInt32'
p8473
ag19
aNtp8474
tp8475
tp8476
sS'DAQmxResetAIConvTimebaseDiv'
p8477
((lp8478
S'int32'
p8479
ag11
a((S'taskHandle'
p8480
(lp8481
S'TaskHandle'
p8482
aNtp8483
tp8484
tp8485
sS'DAQmxGetPhysicalChanTEDSModelNum'
p8486
((lp8487
S'int32'
p8488
ag11
a((S'physicalChannel'
p8489
(lp8490
S'char'
p8491
a(lp8492
I-1
aaNtp8493
(S'data'
p8494
(lp8495
S'uInt32'
p8496
ag19
aNtp8497
tp8498
tp8499
sS'DAQmxGetSampClkDigSyncEnable'
p8500
((lp8501
S'int32'
p8502
ag11
a((S'taskHandle'
p8503
(lp8504
S'TaskHandle'
p8505
aNtp8506
(S'data'
p8507
(lp8508
S'bool32'
p8509
ag19
aNtp8510
tp8511
tp8512
sS'DAQmxGetSwitchChanMaxACSwitchPwr'
p8513
((lp8514
S'int32'
p8515
ag11
a((S'switchChannelName'
p8516
(lp8517
S'char'
p8518
a(lp8519
I-1
aaNtp8520
(S'data'
p8521
(lp8522
S'float64'
p8523
ag19
aNtp8524
tp8525
tp8526
sS'DAQmxSetAIAccelSensitivityUnits'
p8527
((lp8528
S'int32'
p8529
ag11
a((S'taskHandle'
p8530
(lp8531
S'TaskHandle'
p8532
aNtp8533
(S'channel'
p8534
(lp8535
S'char'
p8536
a(lp8537
I-1
aaNtp8538
(S'data'
p8539
(lp8540
S'int32'
p8541
aNtp8542
tp8543
tp8544
sS'DAQmxResetAnlgWinPauseTrigBtm'
p8545
((lp8546
S'int32'
p8547
ag11
a((S'taskHandle'
p8548
(lp8549
S'TaskHandle'
p8550
aNtp8551
tp8552
tp8553
sS'DAQmxResetWriteRelativeTo'
p8554
((lp8555
S'int32'
p8556
ag11
a((S'taskHandle'
p8557
(lp8558
S'TaskHandle'
p8559
aNtp8560
tp8561
tp8562
sS'DAQmxResetAIExcitActualVal'
p8563
((lp8564
S'int32'
p8565
ag11
a((S'taskHandle'
p8566
(lp8567
S'TaskHandle'
p8568
aNtp8569
(S'channel'
p8570
(lp8571
S'char'
p8572
a(lp8573
I-1
aaNtp8574
tp8575
tp8576
sS'DAQmxSetSampClkTimebaseSrc'
p8577
((lp8578
S'int32'
p8579
ag11
a((S'taskHandle'
p8580
(lp8581
S'TaskHandle'
p8582
aNtp8583
(S'data'
p8584
(lp8585
S'char'
p8586
ag19
aNtp8587
tp8588
tp8589
sS'DAQmxResetChangeDetectDIRisingEdgePhysicalChans'
p8590
((lp8591
S'int32'
p8592
ag11
a((S'taskHandle'
p8593
(lp8594
S'TaskHandle'
p8595
aNtp8596
tp8597
tp8598
sS'DAQmxGetExportedSampClkPulsePolarity'
p8599
((lp8600
S'int32'
p8601
ag11
a((S'taskHandle'
p8602
(lp8603
S'TaskHandle'
p8604
aNtp8605
(S'data'
p8606
(lp8607
S'int32'
p8608
ag19
aNtp8609
tp8610
tp8611
sS'DAQmxGetSwitchChanMaxDCSwitchPwr'
p8612
((lp8613
S'int32'
p8614
ag11
a((S'switchChannelName'
p8615
(lp8616
S'char'
p8617
a(lp8618
I-1
aaNtp8619
(S'data'
p8620
(lp8621
S'float64'
p8622
ag19
aNtp8623
tp8624
tp8625
sS'DAQmxGetDigEdgeStartTrigEdge'
p8626
((lp8627
S'int32'
p8628
ag11
a((S'taskHandle'
p8629
(lp8630
S'TaskHandle'
p8631
aNtp8632
(S'data'
p8633
(lp8634
S'int32'
p8635
ag19
aNtp8636
tp8637
tp8638
sS'DAQmxIsReadOrWriteLate'
p8639
((lp8640
S'bool32'
p8641
ag11
a((S'errorCode'
p8642
(lp8643
S'int32'
p8644
aNtp8645
tp8646
tp8647
sS'DAQmxGetDigEdgeArmStartTrigDigSyncEnable'
p8648
((lp8649
S'int32'
p8650
ag11
a((S'taskHandle'
p8651
(lp8652
S'TaskHandle'
p8653
aNtp8654
(S'data'
p8655
(lp8656
S'bool32'
p8657
ag19
aNtp8658
tp8659
tp8660
sS'DAQmxSetAnlgWinRefTrigSrc'
p8661
((lp8662
S'int32'
p8663
ag11
a((S'taskHandle'
p8664
(lp8665
S'TaskHandle'
p8666
aNtp8667
(S'data'
p8668
(lp8669
S'char'
p8670
ag19
aNtp8671
tp8672
tp8673
sS'DAQmxGetExportedCtrOutEventPulsePolarity'
p8674
((lp8675
S'int32'
p8676
ag11
a((S'taskHandle'
p8677
(lp8678
S'TaskHandle'
p8679
aNtp8680
(S'data'
p8681
(lp8682
S'int32'
p8683
ag19
aNtp8684
tp8685
tp8686
sS'DAQmxSetCIFreqMeasMeth'
p8687
((lp8688
S'int32'
p8689
ag11
a((S'taskHandle'
p8690
(lp8691
S'TaskHandle'
p8692
aNtp8693
(S'channel'
p8694
(lp8695
S'char'
p8696
a(lp8697
I-1
aaNtp8698
(S'data'
p8699
(lp8700
S'int32'
p8701
aNtp8702
tp8703
tp8704
sS'DAQmxResetAIChanCalTablePreScaledVals'
p8705
((lp8706
S'int32'
p8707
ag11
a((S'taskHandle'
p8708
(lp8709
S'TaskHandle'
p8710
aNtp8711
(S'channel'
p8712
(lp8713
S'char'
p8714
a(lp8715
I-1
aaNtp8716
tp8717
tp8718
sS'DAQmxResetAIConvActiveEdge'
p8719
((lp8720
S'int32'
p8721
ag11
a((S'taskHandle'
p8722
(lp8723
S'TaskHandle'
p8724
aNtp8725
tp8726
tp8727
sS'DAQmxGetScaleLinYIntercept'
p8728
((lp8729
S'int32'
p8730
ag11
a((S'scaleName'
p8731
(lp8732
S'char'
p8733
a(lp8734
I-1
aaNtp8735
(S'data'
p8736
(lp8737
S'float64'
p8738
ag19
aNtp8739
tp8740
tp8741
sS'DAQmxAdjust1102Cal'
p8742
((lp8743
S'int32'
p8744
ag11
a((S'calHandle'
p8745
(lp8746
S'uInt32'
p8747
aNtp8748
(S'refVoltage'
p8749
(lp8750
S'float64'
p8751
aNtp8752
(S'measOutput'
p8753
(lp8754
S'float64'
p8755
aNtp8756
tp8757
tp8758
sS'DAQmxGetCICtrTimebaseActiveEdge'
p8759
((lp8760
S'int32'
p8761
ag11
a((S'taskHandle'
p8762
(lp8763
S'TaskHandle'
p8764
aNtp8765
(S'channel'
p8766
(lp8767
S'char'
p8768
a(lp8769
I-1
aaNtp8770
(S'data'
p8771
(lp8772
S'int32'
p8773
ag19
aNtp8774
tp8775
tp8776
sS'DAQmxResetCICtrTimebaseSrc'
p8777
((lp8778
S'int32'
p8779
ag11
a((S'taskHandle'
p8780
(lp8781
S'TaskHandle'
p8782
aNtp8783
(S'channel'
p8784
(lp8785
S'char'
p8786
a(lp8787
I-1
aaNtp8788
tp8789
tp8790
sS'DAQmxResetBufOutputOnbrdBufSize'
p8791
((lp8792
S'int32'
p8793
ag11
a((S'taskHandle'
p8794
(lp8795
S'TaskHandle'
p8796
aNtp8797
tp8798
tp8799
sS'DAQmxSetDelayFromSampClkDelayUnits'
p8800
((lp8801
S'int32'
p8802
ag11
a((S'taskHandle'
p8803
(lp8804
S'TaskHandle'
p8805
aNtp8806
(S'data'
p8807
(lp8808
S'int32'
p8809
aNtp8810
tp8811
tp8812
sS'DAQmxSetAIChanCalCalDate'
p8813
((lp8814
S'int32'
p8815
ag11
a((S'taskHandle'
p8816
(lp8817
S'TaskHandle'
p8818
aNtp8819
(S'channelName'
p8820
(lp8821
S'char'
p8822
a(lp8823
I-1
aaNtp8824
(S'year'
p8825
(lp8826
S'uInt32'
p8827
aNtp8828
(S'month'
p8829
(lp8830
S'uInt32'
p8831
aNtp8832
(S'day'
p8833
(lp8834
S'uInt32'
p8835
aNtp8836
(S'hour'
p8837
(lp8838
S'uInt32'
p8839
aNtp8840
(S'minute'
p8841
(lp8842
S'uInt32'
p8843
aNtp8844
tp8845
tp8846
sS'DAQmxSetScaleMapPreScaledMax'
p8847
((lp8848
S'int32'
p8849
ag11
a((S'scaleName'
p8850
(lp8851
S'char'
p8852
a(lp8853
I-1
aaNtp8854
(S'data'
p8855
(lp8856
S'float64'
p8857
aNtp8858
tp8859
tp8860
sS'DAQmxGetBufOutputOnbrdBufSize'
p8861
((lp8862
S'int32'
p8863
ag11
a((S'taskHandle'
p8864
(lp8865
S'TaskHandle'
p8866
aNtp8867
(S'data'
p8868
(lp8869
S'uInt32'
p8870
ag19
aNtp8871
tp8872
tp8873
sS'DAQmxSetDITristate'
p8874
((lp8875
S'int32'
p8876
ag11
a((S'taskHandle'
p8877
(lp8878
S'TaskHandle'
p8879
aNtp8880
(S'channel'
p8881
(lp8882
S'char'
p8883
a(lp8884
I-1
aaNtp8885
(S'data'
p8886
(lp8887
S'bool32'
p8888
aNtp8889
tp8890
tp8891
sS'DAQmxSetCIAngEncoderInitialAngle'
p8892
((lp8893
S'int32'
p8894
ag11
a((S'taskHandle'
p8895
(lp8896
S'TaskHandle'
p8897
aNtp8898
(S'channel'
p8899
(lp8900
S'char'
p8901
a(lp8902
I-1
aaNtp8903
(S'data'
p8904
(lp8905
S'float64'
p8906
aNtp8907
tp8908
tp8909
sS'DAQmxSetWriteRelativeTo'
p8910
((lp8911
S'int32'
p8912
ag11
a((S'taskHandle'
p8913
(lp8914
S'TaskHandle'
p8915
aNtp8916
(S'data'
p8917
(lp8918
S'int32'
p8919
aNtp8920
tp8921
tp8922
sS'DAQmxSetReadRelativeTo'
p8923
((lp8924
S'int32'
p8925
ag11
a((S'taskHandle'
p8926
(lp8927
S'TaskHandle'
p8928
aNtp8929
(S'data'
p8930
(lp8931
S'int32'
p8932
aNtp8933
tp8934
tp8935
sS'DAQmxGetAIRVDTSensitivity'
p8936
((lp8937
S'int32'
p8938
ag11
a((S'taskHandle'
p8939
(lp8940
S'TaskHandle'
p8941
aNtp8942
(S'channel'
p8943
(lp8944
S'char'
p8945
a(lp8946
I-1
aaNtp8947
(S'data'
p8948
(lp8949
S'float64'
p8950
ag19
aNtp8951
tp8952
tp8953
sS'DAQmxResetDigEdgeStartTrigDigSyncEnable'
p8954
((lp8955
S'int32'
p8956
ag11
a((S'taskHandle'
p8957
(lp8958
S'TaskHandle'
p8959
aNtp8960
tp8961
tp8962
sS'DAQmxGetDODataXferMech'
p8963
((lp8964
S'int32'
p8965
ag11
a((S'taskHandle'
p8966
(lp8967
S'TaskHandle'
p8968
aNtp8969
(S'channel'
p8970
(lp8971
S'char'
p8972
a(lp8973
I-1
aaNtp8974
(S'data'
p8975
(lp8976
S'int32'
p8977
ag19
aNtp8978
tp8979
tp8980
sS'DAQmxSetAIRTDR0'
p8981
((lp8982
S'int32'
p8983
ag11
a((S'taskHandle'
p8984
(lp8985
S'TaskHandle'
p8986
aNtp8987
(S'channel'
p8988
(lp8989
S'char'
p8990
a(lp8991
I-1
aaNtp8992
(S'data'
p8993
(lp8994
S'float64'
p8995
aNtp8996
tp8997
tp8998
sS'DAQmxResetAOUseOnlyOnBrdMem'
p8999
((lp9000
S'int32'
p9001
ag11
a((S'taskHandle'
p9002
(lp9003
S'TaskHandle'
p9004
aNtp9005
(S'channel'
p9006
(lp9007
S'char'
p9008
a(lp9009
I-1
aaNtp9010
tp9011
tp9012
sS'DAQmxGetCIEncoderAInputDigFltrTimebaseSrc'
p9013
((lp9014
S'int32'
p9015
ag11
a((S'taskHandle'
p9016
(lp9017
S'TaskHandle'
p9018
aNtp9019
(S'channel'
p9020
(lp9021
S'char'
p9022
a(lp9023
I-1
aaNtp9024
(S'data'
p9025
(lp9026
S'char'
p9027
ag19
aNtp9028
(S'bufferSize'
p9029
(lp9030
S'uInt32'
p9031
aNtp9032
tp9033
tp9034
sS'DAQmxGetDevDOPorts'
p9035
((lp9036
S'int32'
p9037
ag11
a((S'device'
p9038
(lp9039
S'char'
p9040
a(lp9041
I-1
aaNtp9042
(S'data'
p9043
(lp9044
S'char'
p9045
ag19
aNtp9046
(S'bufferSize'
p9047
(lp9048
S'uInt32'
p9049
aNtp9050
tp9051
tp9052
sS'DAQmxGetCIEncoderAInputDigSyncEnable'
p9053
((lp9054
S'int32'
p9055
ag11
a((S'taskHandle'
p9056
(lp9057
S'TaskHandle'
p9058
aNtp9059
(S'channel'
p9060
(lp9061
S'char'
p9062
a(lp9063
I-1
aaNtp9064
(S'data'
p9065
(lp9066
S'bool32'
p9067
ag19
aNtp9068
tp9069
tp9070
sS'DAQmxGetAICoupling'
p9071
((lp9072
S'int32'
p9073
ag11
a((S'taskHandle'
p9074
(lp9075
S'TaskHandle'
p9076
aNtp9077
(S'channel'
p9078
(lp9079
S'char'
p9080
a(lp9081
I-1
aaNtp9082
(S'data'
p9083
(lp9084
S'int32'
p9085
ag19
aNtp9086
tp9087
tp9088
sS'DAQmxSetExportedCtrOutEventOutputTerm'
p9089
((lp9090
S'int32'
p9091
ag11
a((S'taskHandle'
p9092
(lp9093
S'TaskHandle'
p9094
aNtp9095
(S'data'
p9096
(lp9097
S'char'
p9098
ag19
aNtp9099
tp9100
tp9101
sS'DAQmxSetScaleTablePreScaledVals'
p9102
((lp9103
S'int32'
p9104
ag11
a((S'scaleName'
p9105
(lp9106
S'char'
p9107
a(lp9108
I-1
aaNtp9109
(S'data'
p9110
(lp9111
S'float64'
p9112
ag19
aNtp9113
(S'arraySizeInSamples'
p9114
(lp9115
S'uInt32'
p9116
aNtp9117
tp9118
tp9119
sS'DAQmxResetAIDataXferMech'
p9120
((lp9121
S'int32'
p9122
ag11
a((S'taskHandle'
p9123
(lp9124
S'TaskHandle'
p9125
aNtp9126
(S'channel'
p9127
(lp9128
S'char'
p9129
a(lp9130
I-1
aaNtp9131
tp9132
tp9133
sS'DAQmxSetReadWaitMode'
p9134
((lp9135
S'int32'
p9136
ag11
a((S'taskHandle'
p9137
(lp9138
S'TaskHandle'
p9139
aNtp9140
(S'data'
p9141
(lp9142
S'int32'
p9143
aNtp9144
tp9145
tp9146
sS'DAQmxSetExportedSampClkPulsePolarity'
p9147
((lp9148
S'int32'
p9149
ag11
a((S'taskHandle'
p9150
(lp9151
S'TaskHandle'
p9152
aNtp9153
(S'data'
p9154
(lp9155
S'int32'
p9156
aNtp9157
tp9158
tp9159
sS'DAQmxGetCITwoEdgeSepSecondDigSyncEnable'
p9160
((lp9161
S'int32'
p9162
ag11
a((S'taskHandle'
p9163
(lp9164
S'TaskHandle'
p9165
aNtp9166
(S'channel'
p9167
(lp9168
S'char'
p9169
a(lp9170
I-1
aaNtp9171
(S'data'
p9172
(lp9173
S'bool32'
p9174
ag19
aNtp9175
tp9176
tp9177
sS'DAQmxResetCIAngEncoderInitialAngle'
p9178
((lp9179
S'int32'
p9180
ag11
a((S'taskHandle'
p9181
(lp9182
S'TaskHandle'
p9183
aNtp9184
(S'channel'
p9185
(lp9186
S'char'
p9187
a(lp9188
I-1
aaNtp9189
tp9190
tp9191
sS'DAQmxSetCIPulseWidthDigFltrTimebaseSrc'
p9192
((lp9193
S'int32'
p9194
ag11
a((S'taskHandle'
p9195
(lp9196
S'TaskHandle'
p9197
aNtp9198
(S'channel'
p9199
(lp9200
S'char'
p9201
a(lp9202
I-1
aaNtp9203
(S'data'
p9204
(lp9205
S'char'
p9206
ag19
aNtp9207
tp9208
tp9209
sS'DAQmxResetStartTrigType'
p9210
((lp9211
S'int32'
p9212
ag11
a((S'taskHandle'
p9213
(lp9214
S'TaskHandle'
p9215
aNtp9216
tp9217
tp9218
sS'DAQmxResetAODACRefConnToGnd'
p9219
((lp9220
S'int32'
p9221
ag11
a((S'taskHandle'
p9222
(lp9223
S'TaskHandle'
p9224
aNtp9225
(S'channel'
p9226
(lp9227
S'char'
p9228
a(lp9229
I-1
aaNtp9230
tp9231
tp9232
sS'DAQmxSetAIThrmstrC'
p9233
((lp9234
S'int32'
p9235
ag11
a((S'taskHandle'
p9236
(lp9237
S'TaskHandle'
p9238
aNtp9239
(S'channel'
p9240
(lp9241
S'char'
p9242
a(lp9243
I-1
aaNtp9244
(S'data'
p9245
(lp9246
S'float64'
p9247
aNtp9248
tp9249
tp9250
sS'DAQmxSetAIThrmstrB'
p9251
((lp9252
S'int32'
p9253
ag11
a((S'taskHandle'
p9254
(lp9255
S'TaskHandle'
p9256
aNtp9257
(S'channel'
p9258
(lp9259
S'char'
p9260
a(lp9261
I-1
aaNtp9262
(S'data'
p9263
(lp9264
S'float64'
p9265
aNtp9266
tp9267
tp9268
sS'DAQmxSetAIThrmstrA'
p9269
((lp9270
S'int32'
p9271
ag11
a((S'taskHandle'
p9272
(lp9273
S'TaskHandle'
p9274
aNtp9275
(S'channel'
p9276
(lp9277
S'char'
p9278
a(lp9279
I-1
aaNtp9280
(S'data'
p9281
(lp9282
S'float64'
p9283
aNtp9284
tp9285
tp9286
sS'DAQmxReadBinaryI16'
p9287
((lp9288
S'int32'
p9289
ag11
a((S'taskHandle'
p9290
(lp9291
S'TaskHandle'
p9292
aNtp9293
(S'numSampsPerChan'
p9294
(lp9295
S'int32'
p9296
aNtp9297
(S'timeout'
p9298
(lp9299
S'float64'
p9300
aNtp9301
(S'fillMode'
p9302
(lp9303
S'bool32'
p9304
aNtp9305
(S'readArray'
p9306
(lp9307
S'int16'
p9308
a(lp9309
I-1
aaNtp9310
(S'arraySizeInSamps'
p9311
(lp9312
S'uInt32'
p9313
aNtp9314
(S'sampsPerChanRead'
p9315
(lp9316
S'int32'
p9317
ag19
aNtp9318
(S'reserved'
p9319
(lp9320
S'bool32'
p9321
ag19
aNtp9322
tp9323
tp9324
sS'DAQmxGetAIChanCalTablePreScaledVals'
p9325
((lp9326
S'int32'
p9327
ag11
a((S'taskHandle'
p9328
(lp9329
S'TaskHandle'
p9330
aNtp9331
(S'channel'
p9332
(lp9333
S'char'
p9334
a(lp9335
I-1
aaNtp9336
(S'data'
p9337
(lp9338
S'float64'
p9339
ag19
aNtp9340
(S'arraySizeInSamples'
p9341
(lp9342
S'uInt32'
p9343
aNtp9344
tp9345
tp9346
sS'DAQmxGetSampClkTimebaseMasterTimebaseDiv'
p9347
((lp9348
S'int32'
p9349
ag11
a((S'taskHandle'
p9350
(lp9351
S'TaskHandle'
p9352
aNtp9353
(S'data'
p9354
(lp9355
S'uInt32'
p9356
ag19
aNtp9357
tp9358
tp9359
sS'DAQmxDeleteSavedGlobalChan'
p9360
((lp9361
S'int32'
p9362
ag11
a((S'channelName'
p9363
(lp9364
S'char'
p9365
a(lp9366
I-1
aaNtp9367
tp9368
tp9369
sS'DAQmxGetExportedAdvTrigOutputTerm'
p9370
((lp9371
S'int32'
p9372
ag11
a((S'taskHandle'
p9373
(lp9374
S'TaskHandle'
p9375
aNtp9376
(S'data'
p9377
(lp9378
S'char'
p9379
ag19
aNtp9380
(S'bufferSize'
p9381
(lp9382
S'uInt32'
p9383
aNtp9384
tp9385
tp9386
sS'DAQmxGetAIInputSrc'
p9387
((lp9388
S'int32'
p9389
ag11
a((S'taskHandle'
p9390
(lp9391
S'TaskHandle'
p9392
aNtp9393
(S'channel'
p9394
(lp9395
S'char'
p9396
a(lp9397
I-1
aaNtp9398
(S'data'
p9399
(lp9400
S'char'
p9401
ag19
aNtp9402
(S'bufferSize'
p9403
(lp9404
S'uInt32'
p9405
aNtp9406
tp9407
tp9408
sS'DAQmxSwitchGetSingleRelayCount'
p9409
((lp9410
S'int32'
p9411
ag11
a((S'relayName'
p9412
(lp9413
S'char'
p9414
a(lp9415
I-1
aaNtp9416
(S'count'
p9417
(lp9418
S'uInt32'
p9419
ag19
aNtp9420
tp9421
tp9422
sS'DAQmxGetCICountEdgesDigFltrEnable'
p9423
((lp9424
S'int32'
p9425
ag11
a((S'taskHandle'
p9426
(lp9427
S'TaskHandle'
p9428
aNtp9429
(S'channel'
p9430
(lp9431
S'char'
p9432
a(lp9433
I-1
aaNtp9434
(S'data'
p9435
(lp9436
S'bool32'
p9437
ag19
aNtp9438
tp9439
tp9440
sS'DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc'
p9441
((lp9442
S'int32'
p9443
ag11
a((S'taskHandle'
p9444
(lp9445
S'TaskHandle'
p9446
aNtp9447
(S'data'
p9448
(lp9449
S'char'
p9450
ag19
aNtp9451
(S'bufferSize'
p9452
(lp9453
S'uInt32'
p9454
aNtp9455
tp9456
tp9457
sS'DAQmxGetCIEncoderDecodingType'
p9458
((lp9459
S'int32'
p9460
ag11
a((S'taskHandle'
p9461
(lp9462
S'TaskHandle'
p9463
aNtp9464
(S'channel'
p9465
(lp9466
S'char'
p9467
a(lp9468
I-1
aaNtp9469
(S'data'
p9470
(lp9471
S'int32'
p9472
ag19
aNtp9473
tp9474
tp9475
sS'DAQmxResetCICountEdgesDigFltrTimebaseRate'
p9476
((lp9477
S'int32'
p9478
ag11
a((S'taskHandle'
p9479
(lp9480
S'TaskHandle'
p9481
aNtp9482
(S'channel'
p9483
(lp9484
S'char'
p9485
a(lp9486
I-1
aaNtp9487
tp9488
tp9489
sS'DAQmxAdjustDSAAOCal'
p9490
((lp9491
S'int32'
p9492
ag11
a((S'calHandle'
p9493
(lp9494
S'uInt32'
p9495
aNtp9496
(S'channel'
p9497
(lp9498
S'uInt32'
p9499
aNtp9500
(S'requestedLowVoltage'
p9501
(lp9502
S'float64'
p9503
aNtp9504
(S'actualLowVoltage'
p9505
(lp9506
S'float64'
p9507
aNtp9508
(S'requestedHighVoltage'
p9509
(lp9510
S'float64'
p9511
aNtp9512
(S'actualHighVoltage'
p9513
(lp9514
S'float64'
p9515
aNtp9516
(S'gainSetting'
p9517
(lp9518
S'float64'
p9519
aNtp9520
tp9521
tp9522
sS'DAQmxSetAODACOffsetSrc'
p9523
((lp9524
S'int32'
p9525
ag11
a((S'taskHandle'
p9526
(lp9527
S'TaskHandle'
p9528
aNtp9529
(S'channel'
p9530
(lp9531
S'char'
p9532
a(lp9533
I-1
aaNtp9534
(S'data'
p9535
(lp9536
S'int32'
p9537
aNtp9538
tp9539
tp9540
sS'DAQmxGetCIPeriodMeasTime'
p9541
((lp9542
S'int32'
p9543
ag11
a((S'taskHandle'
p9544
(lp9545
S'TaskHandle'
p9546
aNtp9547
(S'channel'
p9548
(lp9549
S'char'
p9550
a(lp9551
I-1
aaNtp9552
(S'data'
p9553
(lp9554
S'float64'
p9555
ag19
aNtp9556
tp9557
tp9558
sS'DAQmxSetDigEdgeArmStartTrigDigSyncEnable'
p9559
((lp9560
S'int32'
p9561
ag11
a((S'taskHandle'
p9562
(lp9563
S'TaskHandle'
p9564
aNtp9565
(S'data'
p9566
(lp9567
S'bool32'
p9568
aNtp9569
tp9570
tp9571
sS'DAQmxResetAIBridgeNomResistance'
p9572
((lp9573
S'int32'
p9574
ag11
a((S'taskHandle'
p9575
(lp9576
S'TaskHandle'
p9577
aNtp9578
(S'channel'
p9579
(lp9580
S'char'
p9581
a(lp9582
I-1
aaNtp9583
tp9584
tp9585
sS'DAQmxGetCIEncoderBInputDigFltrEnable'
p9586
((lp9587
S'int32'
p9588
ag11
a((S'taskHandle'
p9589
(lp9590
S'TaskHandle'
p9591
aNtp9592
(S'channel'
p9593
(lp9594
S'char'
p9595
a(lp9596
I-1
aaNtp9597
(S'data'
p9598
(lp9599
S'bool32'
p9600
ag19
aNtp9601
tp9602
tp9603
sS'DAQmxResetAIChanCalOperatorName'
p9604
((lp9605
S'int32'
p9606
ag11
a((S'taskHandle'
p9607
(lp9608
S'TaskHandle'
p9609
aNtp9610
(S'channel'
p9611
(lp9612
S'char'
p9613
a(lp9614
I-1
aaNtp9615
tp9616
tp9617
sS'DAQmxGetCIMax'
p9618
((lp9619
S'int32'
p9620
ag11
a((S'taskHandle'
p9621
(lp9622
S'TaskHandle'
p9623
aNtp9624
(S'channel'
p9625
(lp9626
S'char'
p9627
a(lp9628
I-1
aaNtp9629
(S'data'
p9630
(lp9631
S'float64'
p9632
ag19
aNtp9633
tp9634
tp9635
sS'DAQmxResetCIEncoderZIndexPhase'
p9636
((lp9637
S'int32'
p9638
ag11
a((S'taskHandle'
p9639
(lp9640
S'TaskHandle'
p9641
aNtp9642
(S'channel'
p9643
(lp9644
S'char'
p9645
a(lp9646
I-1
aaNtp9647
tp9648
tp9649
sS'DAQmxResetCOAutoIncrCnt'
p9650
((lp9651
S'int32'
p9652
ag11
a((S'taskHandle'
p9653
(lp9654
S'TaskHandle'
p9655
aNtp9656
(S'channel'
p9657
(lp9658
S'char'
p9659
a(lp9660
I-1
aaNtp9661
tp9662
tp9663
sS'DAQmxSetSyncPulseMinDelayToStart'
p9664
((lp9665
S'int32'
p9666
ag11
a((S'taskHandle'
p9667
(lp9668
S'TaskHandle'
p9669
aNtp9670
(S'data'
p9671
(lp9672
S'float64'
p9673
aNtp9674
tp9675
tp9676
sS'DAQmxResetAODACOffsetSrc'
p9677
((lp9678
S'int32'
p9679
ag11
a((S'taskHandle'
p9680
(lp9681
S'TaskHandle'
p9682
aNtp9683
(S'channel'
p9684
(lp9685
S'char'
p9686
a(lp9687
I-1
aaNtp9688
tp9689
tp9690
sS'DAQmxGetPhysicalChanTEDSVersionNum'
p9691
((lp9692
S'int32'
p9693
ag11
a((S'physicalChannel'
p9694
(lp9695
S'char'
p9696
a(lp9697
I-1
aaNtp9698
(S'data'
p9699
(lp9700
S'uInt32'
p9701
ag19
aNtp9702
tp9703
tp9704
sS'DAQmxResetExportedAdvTrigPulseWidthUnits'
p9705
((lp9706
S'int32'
p9707
ag11
a((S'taskHandle'
p9708
(lp9709
S'TaskHandle'
p9710
aNtp9711
tp9712
tp9713
sS'DAQmxResetCIPeriodTerm'
p9714
((lp9715
S'int32'
p9716
ag11
a((S'taskHandle'
p9717
(lp9718
S'TaskHandle'
p9719
aNtp9720
(S'channel'
p9721
(lp9722
S'char'
p9723
a(lp9724
I-1
aaNtp9725
tp9726
tp9727
sS'DAQmxResetDigEdgeWatchdogExpirTrigSrc'
p9728
((lp9729
S'int32'
p9730
ag11
a((S'taskHandle'
p9731
(lp9732
S'TaskHandle'
p9733
aNtp9734
tp9735
tp9736
sS'DAQmxResetExportedSampClkOutputBehavior'
p9737
((lp9738
S'int32'
p9739
ag11
a((S'taskHandle'
p9740
(lp9741
S'TaskHandle'
p9742
aNtp9743
tp9744
tp9745
sS'DAQmxResetCIEncoderAInputDigFltrEnable'
p9746
((lp9747
S'int32'
p9748
ag11
a((S'taskHandle'
p9749
(lp9750
S'TaskHandle'
p9751
aNtp9752
(S'channel'
p9753
(lp9754
S'char'
p9755
a(lp9756
I-1
aaNtp9757
tp9758
tp9759
sS'DAQmxGetAnlgLvlPauseTrigWhen'
p9760
((lp9761
S'int32'
p9762
ag11
a((S'taskHandle'
p9763
(lp9764
S'TaskHandle'
p9765
aNtp9766
(S'data'
p9767
(lp9768
S'int32'
p9769
ag19
aNtp9770
tp9771
tp9772
sS'DAQmxSetCIPeriodMeasMeth'
p9773
((lp9774
S'int32'
p9775
ag11
a((S'taskHandle'
p9776
(lp9777
S'TaskHandle'
p9778
aNtp9779
(S'channel'
p9780
(lp9781
S'char'
p9782
a(lp9783
I-1
aaNtp9784
(S'data'
p9785
(lp9786
S'int32'
p9787
aNtp9788
tp9789
tp9790
sS'DAQmxSetCIPulseWidthDigFltrEnable'
p9791
((lp9792
S'int32'
p9793
ag11
a((S'taskHandle'
p9794
(lp9795
S'TaskHandle'
p9796
aNtp9797
(S'channel'
p9798
(lp9799
S'char'
p9800
a(lp9801
I-1
aaNtp9802
(S'data'
p9803
(lp9804
S'bool32'
p9805
aNtp9806
tp9807
tp9808
sS'DAQmxGetCOCtrTimebaseMasterTimebaseDiv'
p9809
((lp9810
S'int32'
p9811
ag11
a((S'taskHandle'
p9812
(lp9813
S'TaskHandle'
p9814
aNtp9815
(S'channel'
p9816
(lp9817
S'char'
p9818
a(lp9819
I-1
aaNtp9820
(S'data'
p9821
(lp9822
S'uInt32'
p9823
ag19
aNtp9824
tp9825
tp9826
sS'DAQmxGetCIEncoderBInputTerm'
p9827
((lp9828
S'int32'
p9829
ag11
a((S'taskHandle'
p9830
(lp9831
S'TaskHandle'
p9832
aNtp9833
(S'channel'
p9834
(lp9835
S'char'
p9836
a(lp9837
I-1
aaNtp9838
(S'data'
p9839
(lp9840
S'char'
p9841
ag19
aNtp9842
(S'bufferSize'
p9843
(lp9844
S'uInt32'
p9845
aNtp9846
tp9847
tp9848
sS'DAQmxCreateCIPeriodChan'
p9849
((lp9850
S'int32'
p9851
ag11
a((S'taskHandle'
p9852
(lp9853
S'TaskHandle'
p9854
aNtp9855
(S'counter'
p9856
(lp9857
S'char'
p9858
a(lp9859
I-1
aaNtp9860
(S'nameToAssignToChannel'
p9861
(lp9862
S'char'
p9863
a(lp9864
I-1
aaNtp9865
(S'minVal'
p9866
(lp9867
S'float64'
p9868
aNtp9869
(S'maxVal'
p9870
(lp9871
S'float64'
p9872
aNtp9873
(S'units'
p9874
(lp9875
S'int32'
p9876
aNtp9877
(S'edge'
p9878
(lp9879
S'int32'
p9880
aNtp9881
(S'measMethod'
p9882
(lp9883
S'int32'
p9884
aNtp9885
(S'measTime'
p9886
(lp9887
S'float64'
p9888
aNtp9889
(S'divisor'
p9890
(lp9891
S'uInt32'
p9892
aNtp9893
(S'customScaleName'
p9894
(lp9895
S'char'
p9896
a(lp9897
I-1
aaNtp9898
tp9899
tp9900
sS'DAQmxResetSampClkDigFltrTimebaseSrc'
p9901
((lp9902
S'int32'
p9903
ag11
a((S'taskHandle'
p9904
(lp9905
S'TaskHandle'
p9906
aNtp9907
tp9908
tp9909
sS'DAQmxResetAIConvRate'
p9910
((lp9911
S'int32'
p9912
ag11
a((S'taskHandle'
p9913
(lp9914
S'TaskHandle'
p9915
aNtp9916
tp9917
tp9918
sS'DAQmxSetSampQuantSampMode'
p9919
((lp9920
S'int32'
p9921
ag11
a((S'taskHandle'
p9922
(lp9923
S'TaskHandle'
p9924
aNtp9925
(S'data'
p9926
(lp9927
S'int32'
p9928
aNtp9929
tp9930
tp9931
sS'DAQmxResetCIPeriodMeasMeth'
p9932
((lp9933
S'int32'
p9934
ag11
a((S'taskHandle'
p9935
(lp9936
S'TaskHandle'
p9937
aNtp9938
(S'channel'
p9939
(lp9940
S'char'
p9941
a(lp9942
I-1
aaNtp9943
tp9944
tp9945
sS'DAQmxSetAILowpassSwitchCapClkSrc'
p9946
((lp9947
S'int32'
p9948
ag11
a((S'taskHandle'
p9949
(lp9950
S'TaskHandle'
p9951
aNtp9952
(S'channel'
p9953
(lp9954
S'char'
p9955
a(lp9956
I-1
aaNtp9957
(S'data'
p9958
(lp9959
S'int32'
p9960
aNtp9961
tp9962
tp9963
sS'DAQmxResetCOPulseHighTicks'
p9964
((lp9965
S'int32'
p9966
ag11
a((S'taskHandle'
p9967
(lp9968
S'TaskHandle'
p9969
aNtp9970
(S'channel'
p9971
(lp9972
S'char'
p9973
a(lp9974
I-1
aaNtp9975
tp9976
tp9977
sS'DAQmxGetChanType'
p9978
((lp9979
S'int32'
p9980
ag11
a((S'taskHandle'
p9981
(lp9982
S'TaskHandle'
p9983
aNtp9984
(S'channel'
p9985
(lp9986
S'char'
p9987
a(lp9988
I-1
aaNtp9989
(S'data'
p9990
(lp9991
S'int32'
p9992
ag19
aNtp9993
tp9994
tp9995
sS'DAQmxGetAODACRngLow'
p9996
((lp9997
S'int32'
p9998
ag11
a((S'taskHandle'
p9999
(lp10000
S'TaskHandle'
p10001
aNtp10002
(S'channel'
p10003
(lp10004
S'char'
p10005
a(lp10006
I-1
aaNtp10007
(S'data'
p10008
(lp10009
S'float64'
p10010
ag19
aNtp10011
tp10012
tp10013
sS'DAQmxResetRealTimeReportMissedSamp'
p10014
((lp10015
S'int32'
p10016
ag11
a((S'taskHandle'
p10017
(lp10018
S'TaskHandle'
p10019
aNtp10020
tp10021
tp10022
sS'DAQmxResetCICountEdgesInitialCnt'
p10023
((lp10024
S'int32'
p10025
ag11
a((S'taskHandle'
p10026
(lp10027
S'TaskHandle'
p10028
aNtp10029
(S'channel'
p10030
(lp10031
S'char'
p10032
a(lp10033
I-1
aaNtp10034
tp10035
tp10036
sS'DAQmxGetCITwoEdgeSepFirstDigSyncEnable'
p10037
((lp10038
S'int32'
p10039
ag11
a((S'taskHandle'
p10040
(lp10041
S'TaskHandle'
p10042
aNtp10043
(S'channel'
p10044
(lp10045
S'char'
p10046
a(lp10047
I-1
aaNtp10048
(S'data'
p10049
(lp10050
S'bool32'
p10051
ag19
aNtp10052
tp10053
tp10054
sS'DAQmxCreateCOPulseChanTicks'
p10055
((lp10056
S'int32'
p10057
ag11
a((S'taskHandle'
p10058
(lp10059
S'TaskHandle'
p10060
aNtp10061
(S'counter'
p10062
(lp10063
S'char'
p10064
a(lp10065
I-1
aaNtp10066
(S'nameToAssignToChannel'
p10067
(lp10068
S'char'
p10069
a(lp10070
I-1
aaNtp10071
(S'sourceTerminal'
p10072
(lp10073
S'char'
p10074
a(lp10075
I-1
aaNtp10076
(S'idleState'
p10077
(lp10078
S'int32'
p10079
aNtp10080
(S'initialDelay'
p10081
(lp10082
S'int32'
p10083
aNtp10084
(S'lowTicks'
p10085
(lp10086
S'int32'
p10087
aNtp10088
(S'highTicks'
p10089
(lp10090
S'int32'
p10091
aNtp10092
tp10093
tp10094
sS'DAQmxResetCIPeriodStartingEdge'
p10095
((lp10096
S'int32'
p10097
ag11
a((S'taskHandle'
p10098
(lp10099
S'TaskHandle'
p10100
aNtp10101
(S'channel'
p10102
(lp10103
S'char'
p10104
a(lp10105
I-1
aaNtp10106
tp10107
tp10108
sS'DAQmxResetCOCtrTimebaseDigSyncEnable'
p10109
((lp10110
S'int32'
p10111
ag11
a((S'taskHandle'
p10112
(lp10113
S'TaskHandle'
p10114
aNtp10115
(S'channel'
p10116
(lp10117
S'char'
p10118
a(lp10119
I-1
aaNtp10120
tp10121
tp10122
sS'DAQmxGetDigLvlPauseTrigDigFltrTimebaseRate'
p10123
((lp10124
S'int32'
p10125
ag11
a((S'taskHandle'
p10126
(lp10127
S'TaskHandle'
p10128
aNtp10129
(S'data'
p10130
(lp10131
S'float64'
p10132
ag19
aNtp10133
tp10134
tp10135
sS'DAQmxGetExportedAIConvClkOutputTerm'
p10136
((lp10137
S'int32'
p10138
ag11
a((S'taskHandle'
p10139
(lp10140
S'TaskHandle'
p10141
aNtp10142
(S'data'
p10143
(lp10144
S'char'
p10145
ag19
aNtp10146
(S'bufferSize'
p10147
(lp10148
S'uInt32'
p10149
aNtp10150
tp10151
tp10152
sS'DAQmxResetCISemiPeriodDigSyncEnable'
p10153
((lp10154
S'int32'
p10155
ag11
a((S'taskHandle'
p10156
(lp10157
S'TaskHandle'
p10158
aNtp10159
(S'channel'
p10160
(lp10161
S'char'
p10162
a(lp10163
I-1
aaNtp10164
tp10165
tp10166
sS'DAQmxResetRefTrigPretrigSamples'
p10167
((lp10168
S'int32'
p10169
ag11
a((S'taskHandle'
p10170
(lp10171
S'TaskHandle'
p10172
aNtp10173
tp10174
tp10175
sS'DAQmxSetAICurrentShuntResistance'
p10176
((lp10177
S'int32'
p10178
ag11
a((S'taskHandle'
p10179
(lp10180
S'TaskHandle'
p10181
aNtp10182
(S'channel'
p10183
(lp10184
S'char'
p10185
a(lp10186
I-1
aaNtp10187
(S'data'
p10188
(lp10189
S'float64'
p10190
aNtp10191
tp10192
tp10193
sS'DAQmxResetAIRngHigh'
p10194
((lp10195
S'int32'
p10196
ag11
a((S'taskHandle'
p10197
(lp10198
S'TaskHandle'
p10199
aNtp10200
(S'channel'
p10201
(lp10202
S'char'
p10203
a(lp10204
I-1
aaNtp10205
tp10206
tp10207
sS'DAQmxResetAILowpassSwitchCapExtClkDiv'
p10208
((lp10209
S'int32'
p10210
ag11
a((S'taskHandle'
p10211
(lp10212
S'TaskHandle'
p10213
aNtp10214
(S'channel'
p10215
(lp10216
S'char'
p10217
a(lp10218
I-1
aaNtp10219
tp10220
tp10221
sS'DAQmxSetCICountEdgesDigFltrEnable'
p10222
((lp10223
S'int32'
p10224
ag11
a((S'taskHandle'
p10225
(lp10226
S'TaskHandle'
p10227
aNtp10228
(S'channel'
p10229
(lp10230
S'char'
p10231
a(lp10232
I-1
aaNtp10233
(S'data'
p10234
(lp10235
S'bool32'
p10236
aNtp10237
tp10238
tp10239
sS'DAQmxResetExportedChangeDetectEventPulsePolarity'
p10240
((lp10241
S'int32'
p10242
ag11
a((S'taskHandle'
p10243
(lp10244
S'TaskHandle'
p10245
aNtp10246
tp10247
tp10248
sS'DAQmxGetExportedRefTrigOutputTerm'
p10249
((lp10250
S'int32'
p10251
ag11
a((S'taskHandle'
p10252
(lp10253
S'TaskHandle'
p10254
aNtp10255
(S'data'
p10256
(lp10257
S'char'
p10258
ag19
aNtp10259
(S'bufferSize'
p10260
(lp10261
S'uInt32'
p10262
aNtp10263
tp10264
tp10265
sS'DAQmxSetExportedCtrOutEventOutputBehavior'
p10266
((lp10267
S'int32'
p10268
ag11
a((S'taskHandle'
p10269
(lp10270
S'TaskHandle'
p10271
aNtp10272
(S'data'
p10273
(lp10274
S'int32'
p10275
aNtp10276
tp10277
tp10278
sS'DAQmxGetDevAIPhysicalChans'
p10279
((lp10280
S'int32'
p10281
ag11
a((S'device'
p10282
(lp10283
S'char'
p10284
a(lp10285
I-1
aaNtp10286
(S'data'
p10287
(lp10288
S'char'
p10289
ag19
aNtp10290
(S'bufferSize'
p10291
(lp10292
S'uInt32'
p10293
aNtp10294
tp10295
tp10296
sS'DAQmxGetAIStrainGageGageFactor'
p10297
((lp10298
S'int32'
p10299
ag11
a((S'taskHandle'
p10300
(lp10301
S'TaskHandle'
p10302
aNtp10303
(S'channel'
p10304
(lp10305
S'char'
p10306
a(lp10307
I-1
aaNtp10308
(S'data'
p10309
(lp10310
S'float64'
p10311
ag19
aNtp10312
tp10313
tp10314
sS'DAQmxGetPersistedTaskAuthor'
p10315
((lp10316
S'int32'
p10317
ag11
a((S'taskName'
p10318
(lp10319
S'char'
p10320
a(lp10321
I-1
aaNtp10322
(S'data'
p10323
(lp10324
S'char'
p10325
ag19
aNtp10326
(S'bufferSize'
p10327
(lp10328
S'uInt32'
p10329
aNtp10330
tp10331
tp10332
sS'DAQmxResetAIRawDataCompressionType'
p10333
((lp10334
S'int32'
p10335
ag11
a((S'taskHandle'
p10336
(lp10337
S'TaskHandle'
p10338
aNtp10339
(S'channel'
p10340
(lp10341
S'char'
p10342
a(lp10343
I-1
aaNtp10344
tp10345
tp10346
sS'DAQmxResetReadReadAllAvailSamp'
p10347
((lp10348
S'int32'
p10349
ag11
a((S'taskHandle'
p10350
(lp10351
S'TaskHandle'
p10352
aNtp10353
tp10354
tp10355
sS'DAQmxSetAIConvTimebaseSrc'
p10356
((lp10357
S'int32'
p10358
ag11
a((S'taskHandle'
p10359
(lp10360
S'TaskHandle'
p10361
aNtp10362
(S'data'
p10363
(lp10364
S'int32'
p10365
aNtp10366
tp10367
tp10368
sS'DAQmxCreateTEDSAIThrmcplChan'
p10369
((lp10370
S'int32'
p10371
ag11
a((S'taskHandle'
p10372
(lp10373
S'TaskHandle'
p10374
aNtp10375
(S'physicalChannel'
p10376
(lp10377
S'char'
p10378
a(lp10379
I-1
aaNtp10380
(S'nameToAssignToChannel'
p10381
(lp10382
S'char'
p10383
a(lp10384
I-1
aaNtp10385
(S'minVal'
p10386
(lp10387
S'float64'
p10388
aNtp10389
(S'maxVal'
p10390
(lp10391
S'float64'
p10392
aNtp10393
(S'units'
p10394
(lp10395
S'int32'
p10396
aNtp10397
(S'cjcSource'
p10398
(lp10399
S'int32'
p10400
aNtp10401
(S'cjcVal'
p10402
(lp10403
S'float64'
p10404
aNtp10405
(S'cjcChannel'
p10406
(lp10407
S'char'
p10408
a(lp10409
I-1
aaNtp10410
tp10411
tp10412
sS'DAQmxGetAIBridgeBalanceCoarsePot'
p10413
((lp10414
S'int32'
p10415
ag11
a((S'taskHandle'
p10416
(lp10417
S'TaskHandle'
p10418
aNtp10419
(S'channel'
p10420
(lp10421
S'char'
p10422
a(lp10423
I-1
aaNtp10424
(S'data'
p10425
(lp10426
S'int32'
p10427
ag19
aNtp10428
tp10429
tp10430
sS'DAQmxSetScaleTableScaledVals'
p10431
((lp10432
S'int32'
p10433
ag11
a((S'scaleName'
p10434
(lp10435
S'char'
p10436
a(lp10437
I-1
aaNtp10438
(S'data'
p10439
(lp10440
S'float64'
p10441
ag19
aNtp10442
(S'arraySizeInSamples'
p10443
(lp10444
S'uInt32'
p10445
aNtp10446
tp10447
tp10448
sS'DAQmxGetDigEdgeRefTrigSrc'
p10449
((lp10450
S'int32'
p10451
ag11
a((S'taskHandle'
p10452
(lp10453
S'TaskHandle'
p10454
aNtp10455
(S'data'
p10456
(lp10457
S'char'
p10458
ag19
aNtp10459
(S'bufferSize'
p10460
(lp10461
S'uInt32'
p10462
aNtp10463
tp10464
tp10465
sS'DAQmxGetCOCtrTimebaseActiveEdge'
p10466
((lp10467
S'int32'
p10468
ag11
a((S'taskHandle'
p10469
(lp10470
S'TaskHandle'
p10471
aNtp10472
(S'channel'
p10473
(lp10474
S'char'
p10475
a(lp10476
I-1
aaNtp10477
(S'data'
p10478
(lp10479
S'int32'
p10480
ag19
aNtp10481
tp10482
tp10483
sS'DAQmxGetCIEncoderBInputDigFltrMinPulseWidth'
p10484
((lp10485
S'int32'
p10486
ag11
a((S'taskHandle'
p10487
(lp10488
S'TaskHandle'
p10489
aNtp10490
(S'channel'
p10491
(lp10492
S'char'
p10493
a(lp10494
I-1
aaNtp10495
(S'data'
p10496
(lp10497
S'float64'
p10498
ag19
aNtp10499
tp10500
tp10501
sS'DAQmxGetExportedSampClkOutputTerm'
p10502
((lp10503
S'int32'
p10504
ag11
a((S'taskHandle'
p10505
(lp10506
S'TaskHandle'
p10507
aNtp10508
(S'data'
p10509
(lp10510
S'char'
p10511
ag19
aNtp10512
(S'bufferSize'
p10513
(lp10514
S'uInt32'
p10515
aNtp10516
tp10517
tp10518
sS'DAQmxSetAOReglitchEnable'
p10519
((lp10520
S'int32'
p10521
ag11
a((S'taskHandle'
p10522
(lp10523
S'TaskHandle'
p10524
aNtp10525
(S'channel'
p10526
(lp10527
S'char'
p10528
a(lp10529
I-1
aaNtp10530
(S'data'
p10531
(lp10532
S'bool32'
p10533
aNtp10534
tp10535
tp10536
sS'DAQmxGetCIPulseWidthTerm'
p10537
((lp10538
S'int32'
p10539
ag11
a((S'taskHandle'
p10540
(lp10541
S'TaskHandle'
p10542
aNtp10543
(S'channel'
p10544
(lp10545
S'char'
p10546
a(lp10547
I-1
aaNtp10548
(S'data'
p10549
(lp10550
S'char'
p10551
ag19
aNtp10552
(S'bufferSize'
p10553
(lp10554
S'uInt32'
p10555
aNtp10556
tp10557
tp10558
sS'DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate'
p10559
((lp10560
S'int32'
p10561
ag11
a((S'taskHandle'
p10562
(lp10563
S'TaskHandle'
p10564
aNtp10565
(S'channel'
p10566
(lp10567
S'char'
p10568
a(lp10569
I-1
aaNtp10570
(S'data'
p10571
(lp10572
S'float64'
p10573
aNtp10574
tp10575
tp10576
sS'DAQmxGetWriteDigitalLinesBytesPerChan'
p10577
((lp10578
S'int32'
p10579
ag11
a((S'taskHandle'
p10580
(lp10581
S'TaskHandle'
p10582
aNtp10583
(S'data'
p10584
(lp10585
S'uInt32'
p10586
ag19
aNtp10587
tp10588
tp10589
sS'DAQmxSetExportedHshkEventPulsePolarity'
p10590
((lp10591
S'int32'
p10592
ag11
a((S'taskHandle'
p10593
(lp10594
S'TaskHandle'
p10595
aNtp10596
(S'data'
p10597
(lp10598
S'int32'
p10599
aNtp10600
tp10601
tp10602
sS'DAQmxSetAIFreqHyst'
p10603
((lp10604
S'int32'
p10605
ag11
a((S'taskHandle'
p10606
(lp10607
S'TaskHandle'
p10608
aNtp10609
(S'channel'
p10610
(lp10611
S'char'
p10612
a(lp10613
I-1
aaNtp10614
(S'data'
p10615
(lp10616
S'float64'
p10617
aNtp10618
tp10619
tp10620
sS'DAQmxGetSwitchScanBreakMode'
p10621
((lp10622
S'int32'
p10623
ag11
a((S'taskHandle'
p10624
(lp10625
S'TaskHandle'
p10626
aNtp10627
(S'data'
p10628
(lp10629
S'int32'
p10630
ag19
aNtp10631
tp10632
tp10633
sS'DAQmxSetReadReadAllAvailSamp'
p10634
((lp10635
S'int32'
p10636
ag11
a((S'taskHandle'
p10637
(lp10638
S'TaskHandle'
p10639
aNtp10640
(S'data'
p10641
(lp10642
S'bool32'
p10643
aNtp10644
tp10645
tp10646
sS'DAQmxResetCISemiPeriodDigFltrMinPulseWidth'
p10647
((lp10648
S'int32'
p10649
ag11
a((S'taskHandle'
p10650
(lp10651
S'TaskHandle'
p10652
aNtp10653
(S'channel'
p10654
(lp10655
S'char'
p10656
a(lp10657
I-1
aaNtp10658
tp10659
tp10660
sS'DAQmxGetAIRVDTSensitivityUnits'
p10661
((lp10662
S'int32'
p10663
ag11
a((S'taskHandle'
p10664
(lp10665
S'TaskHandle'
p10666
aNtp10667
(S'channel'
p10668
(lp10669
S'char'
p10670
a(lp10671
I-1
aaNtp10672
(S'data'
p10673
(lp10674
S'int32'
p10675
ag19
aNtp10676
tp10677
tp10678
sS'DAQmxSendSoftwareTrigger'
p10679
((lp10680
S'int32'
p10681
ag11
a((S'taskHandle'
p10682
(lp10683
S'TaskHandle'
p10684
aNtp10685
(S'triggerID'
p10686
(lp10687
S'int32'
p10688
aNtp10689
tp10690
tp10691
sS'DAQmxSetAIMin'
p10692
((lp10693
S'int32'
p10694
ag11
a((S'taskHandle'
p10695
(lp10696
S'TaskHandle'
p10697
aNtp10698
(S'channel'
p10699
(lp10700
S'char'
p10701
a(lp10702
I-1
aaNtp10703
(S'data'
p10704
(lp10705
S'float64'
p10706
aNtp10707
tp10708
tp10709
sS'DAQmxGetSampQuantSampMode'
p10710
((lp10711
S'int32'
p10712
ag11
a((S'taskHandle'
p10713
(lp10714
S'TaskHandle'
p10715
aNtp10716
(S'data'
p10717
(lp10718
S'int32'
p10719
ag19
aNtp10720
tp10721
tp10722
sS'DAQmxGetCICountEdgesDigFltrMinPulseWidth'
p10723
((lp10724
S'int32'
p10725
ag11
a((S'taskHandle'
p10726
(lp10727
S'TaskHandle'
p10728
aNtp10729
(S'channel'
p10730
(lp10731
S'char'
p10732
a(lp10733
I-1
aaNtp10734
(S'data'
p10735
(lp10736
S'float64'
p10737
ag19
aNtp10738
tp10739
tp10740
sS'DAQmxGetAOVoltageUnits'
p10741
((lp10742
S'int32'
p10743
ag11
a((S'taskHandle'
p10744
(lp10745
S'TaskHandle'
p10746
aNtp10747
(S'channel'
p10748
(lp10749
S'char'
p10750
a(lp10751
I-1
aaNtp10752
(S'data'
p10753
(lp10754
S'int32'
p10755
ag19
aNtp10756
tp10757
tp10758
sS'DAQmxResetSampQuantSampPerChan'
p10759
((lp10760
S'int32'
p10761
ag11
a((S'taskHandle'
p10762
(lp10763
S'TaskHandle'
p10764
aNtp10765
tp10766
tp10767
sS'DAQmxResetCITimestampInitialSeconds'
p10768
((lp10769
S'int32'
p10770
ag11
a((S'taskHandle'
p10771
(lp10772
S'TaskHandle'
p10773
aNtp10774
(S'channel'
p10775
(lp10776
S'char'
p10777
a(lp10778
I-1
aaNtp10779
tp10780
tp10781
sS'DAQmxGetAIBridgeShuntCalEnable'
p10782
((lp10783
S'int32'
p10784
ag11
a((S'taskHandle'
p10785
(lp10786
S'TaskHandle'
p10787
aNtp10788
(S'channel'
p10789
(lp10790
S'char'
p10791
a(lp10792
I-1
aaNtp10793
(S'data'
p10794
(lp10795
S'bool32'
p10796
ag19
aNtp10797
tp10798
tp10799
sS'DAQmxResetAIStrainGageGageFactor'
p10800
((lp10801
S'int32'
p10802
ag11
a((S'taskHandle'
p10803
(lp10804
S'TaskHandle'
p10805
aNtp10806
(S'channel'
p10807
(lp10808
S'char'
p10809
a(lp10810
I-1
aaNtp10811
tp10812
tp10813
sS'DAQmxSetDigEdgeRefTrigSrc'
p10814
((lp10815
S'int32'
p10816
ag11
a((S'taskHandle'
p10817
(lp10818
S'TaskHandle'
p10819
aNtp10820
(S'data'
p10821
(lp10822
S'char'
p10823
ag19
aNtp10824
tp10825
tp10826
sS'DAQmxResetAOReglitchEnable'
p10827
((lp10828
S'int32'
p10829
ag11
a((S'taskHandle'
p10830
(lp10831
S'TaskHandle'
p10832
aNtp10833
(S'channel'
p10834
(lp10835
S'char'
p10836
a(lp10837
I-1
aaNtp10838
tp10839
tp10840
sS'DAQmxSetAIVoltageUnits'
p10841
((lp10842
S'int32'
p10843
ag11
a((S'taskHandle'
p10844
(lp10845
S'TaskHandle'
p10846
aNtp10847
(S'channel'
p10848
(lp10849
S'char'
p10850
a(lp10851
I-1
aaNtp10852
(S'data'
p10853
(lp10854
S'int32'
p10855
aNtp10856
tp10857
tp10858
sS'DAQmxGetAIThrmcplCJCChan'
p10859
((lp10860
S'int32'
p10861
ag11
a((S'taskHandle'
p10862
(lp10863
S'TaskHandle'
p10864
aNtp10865
(S'channel'
p10866
(lp10867
S'char'
p10868
a(lp10869
I-1
aaNtp10870
(S'data'
p10871
(lp10872
S'char'
p10873
ag19
aNtp10874
(S'bufferSize'
p10875
(lp10876
S'uInt32'
p10877
aNtp10878
tp10879
tp10880
sS'DAQmxResetCIEncoderBInputDigSyncEnable'
p10881
((lp10882
S'int32'
p10883
ag11
a((S'taskHandle'
p10884
(lp10885
S'TaskHandle'
p10886
aNtp10887
(S'channel'
p10888
(lp10889
S'char'
p10890
a(lp10891
I-1
aaNtp10892
tp10893
tp10894
sS'DAQmxGetSwitchChanMaxACCarryCurrent'
p10895
((lp10896
S'int32'
p10897
ag11
a((S'switchChannelName'
p10898
(lp10899
S'char'
p10900
a(lp10901
I-1
aaNtp10902
(S'data'
p10903
(lp10904
S'float64'
p10905
ag19
aNtp10906
tp10907
tp10908
sS'DAQmxResetAODACRngHigh'
p10909
((lp10910
S'int32'
p10911
ag11
a((S'taskHandle'
p10912
(lp10913
S'TaskHandle'
p10914
aNtp10915
(S'channel'
p10916
(lp10917
S'char'
p10918
a(lp10919
I-1
aaNtp10920
tp10921
tp10922
sS'DAQmxSetExportedAIHoldCmpltEventPulsePolarity'
p10923
((lp10924
S'int32'
p10925
ag11
a((S'taskHandle'
p10926
(lp10927
S'TaskHandle'
p10928
aNtp10929
(S'data'
p10930
(lp10931
S'int32'
p10932
aNtp10933
tp10934
tp10935
sS'DAQmxGetDigPatternStartTrigWhen'
p10936
((lp10937
S'int32'
p10938
ag11
a((S'taskHandle'
p10939
(lp10940
S'TaskHandle'
p10941
aNtp10942
(S'data'
p10943
(lp10944
S'int32'
p10945
ag19
aNtp10946
tp10947
tp10948
sS'DAQmxGetDevPCIDevNum'
p10949
((lp10950
S'int32'
p10951
ag11
a((S'device'
p10952
(lp10953
S'char'
p10954
a(lp10955
I-1
aaNtp10956
(S'data'
p10957
(lp10958
S'uInt32'
p10959
ag19
aNtp10960
tp10961
tp10962
sS'DAQmxGetMasterTimebaseRate'
p10963
((lp10964
S'int32'
p10965
ag11
a((S'taskHandle'
p10966
(lp10967
S'TaskHandle'
p10968
aNtp10969
(S'data'
p10970
(lp10971
S'float64'
p10972
ag19
aNtp10973
tp10974
tp10975
sS'DAQmxResetCICtrTimebaseMasterTimebaseDiv'
p10976
((lp10977
S'int32'
p10978
ag11
a((S'taskHandle'
p10979
(lp10980
S'TaskHandle'
p10981
aNtp10982
(S'channel'
p10983
(lp10984
S'char'
p10985
a(lp10986
I-1
aaNtp10987
tp10988
tp10989
sS'DAQmxGetCICountEdgesInitialCnt'
p10990
((lp10991
S'int32'
p10992
ag11
a((S'taskHandle'
p10993
(lp10994
S'TaskHandle'
p10995
aNtp10996
(S'channel'
p10997
(lp10998
S'char'
p10999
a(lp11000
I-1
aaNtp11001
(S'data'
p11002
(lp11003
S'uInt32'
p11004
ag19
aNtp11005
tp11006
tp11007
sS'DAQmxResetCICountEdgesDigFltrEnable'
p11008
((lp11009
S'int32'
p11010
ag11
a((S'taskHandle'
p11011
(lp11012
S'TaskHandle'
p11013
aNtp11014
(S'channel'
p11015
(lp11016
S'char'
p11017
a(lp11018
I-1
aaNtp11019
tp11020
tp11021
sS'DAQmxResetReadChannelsToRead'
p11022
((lp11023
S'int32'
p11024
ag11
a((S'taskHandle'
p11025
(lp11026
S'TaskHandle'
p11027
aNtp11028
tp11029
tp11030
sS'DAQmxResetAOMemMapEnable'
p11031
((lp11032
S'int32'
p11033
ag11
a((S'taskHandle'
p11034
(lp11035
S'TaskHandle'
p11036
aNtp11037
(S'channel'
p11038
(lp11039
S'char'
p11040
a(lp11041
I-1
aaNtp11042
tp11043
tp11044
sS'DAQmxSetCITwoEdgeSepSecondTerm'
p11045
((lp11046
S'int32'
p11047
ag11
a((S'taskHandle'
p11048
(lp11049
S'TaskHandle'
p11050
aNtp11051
(S'channel'
p11052
(lp11053
S'char'
p11054
a(lp11055
I-1
aaNtp11056
(S'data'
p11057
(lp11058
S'char'
p11059
ag19
aNtp11060
tp11061
tp11062
sS'DAQmxGetDigPatternRefTrigPattern'
p11063
((lp11064
S'int32'
p11065
ag11
a((S'taskHandle'
p11066
(lp11067
S'TaskHandle'
p11068
aNtp11069
(S'data'
p11070
(lp11071
S'char'
p11072
ag19
aNtp11073
(S'bufferSize'
p11074
(lp11075
S'uInt32'
p11076
aNtp11077
tp11078
tp11079
sS'DAQmxResetAIACExcitSyncEnable'
p11080
((lp11081
S'int32'
p11082
ag11
a((S'taskHandle'
p11083
(lp11084
S'TaskHandle'
p11085
aNtp11086
(S'channel'
p11087
(lp11088
S'char'
p11089
a(lp11090
I-1
aaNtp11091
tp11092
tp11093
sS'DAQmxSetAOMax'
p11094
((lp11095
S'int32'
p11096
ag11
a((S'taskHandle'
p11097
(lp11098
S'TaskHandle'
p11099
aNtp11100
(S'channel'
p11101
(lp11102
S'char'
p11103
a(lp11104
I-1
aaNtp11105
(S'data'
p11106
(lp11107
S'float64'
p11108
aNtp11109
tp11110
tp11111
sS'DAQmxResetCIFreqUnits'
p11112
((lp11113
S'int32'
p11114
ag11
a((S'taskHandle'
p11115
(lp11116
S'TaskHandle'
p11117
aNtp11118
(S'channel'
p11119
(lp11120
S'char'
p11121
a(lp11122
I-1
aaNtp11123
tp11124
tp11125
sS'DAQmxSetAILVDTSensitivity'
p11126
((lp11127
S'int32'
p11128
ag11
a((S'taskHandle'
p11129
(lp11130
S'TaskHandle'
p11131
aNtp11132
(S'channel'
p11133
(lp11134
S'char'
p11135
a(lp11136
I-1
aaNtp11137
(S'data'
p11138
(lp11139
S'float64'
p11140
aNtp11141
tp11142
tp11143
sS'DAQmxResetAIAtten'
p11144
((lp11145
S'int32'
p11146
ag11
a((S'taskHandle'
p11147
(lp11148
S'TaskHandle'
p11149
aNtp11150
(S'channel'
p11151
(lp11152
S'char'
p11153
a(lp11154
I-1
aaNtp11155
tp11156
tp11157
sS'DAQmxSetCIFreqDigSyncEnable'
p11158
((lp11159
S'int32'
p11160
ag11
a((S'taskHandle'
p11161
(lp11162
S'TaskHandle'
p11163
aNtp11164
(S'channel'
p11165
(lp11166
S'char'
p11167
a(lp11168
I-1
aaNtp11169
(S'data'
p11170
(lp11171
S'bool32'
p11172
aNtp11173
tp11174
tp11175
sS'DAQmxResetCICountEdgesDigSyncEnable'
p11176
((lp11177
S'int32'
p11178
ag11
a((S'taskHandle'
p11179
(lp11180
S'TaskHandle'
p11181
aNtp11182
(S'channel'
p11183
(lp11184
S'char'
p11185
a(lp11186
I-1
aaNtp11187
tp11188
tp11189
sS'DAQmxGetReadAutoStart'
p11190
((lp11191
S'int32'
p11192
ag11
a((S'taskHandle'
p11193
(lp11194
S'TaskHandle'
p11195
aNtp11196
(S'data'
p11197
(lp11198
S'bool32'
p11199
ag19
aNtp11200
tp11201
tp11202
sS'DAQmxGetChanDescr'
p11203
((lp11204
S'int32'
p11205
ag11
a((S'taskHandle'
p11206
(lp11207
S'TaskHandle'
p11208
aNtp11209
(S'channel'
p11210
(lp11211
S'char'
p11212
a(lp11213
I-1
aaNtp11214
(S'data'
p11215
(lp11216
S'char'
p11217
ag19
aNtp11218
(S'bufferSize'
p11219
(lp11220
S'uInt32'
p11221
aNtp11222
tp11223
tp11224
sS'DAQmxResetCOPulseTimeUnits'
p11225
((lp11226
S'int32'
p11227
ag11
a((S'taskHandle'
p11228
(lp11229
S'TaskHandle'
p11230
aNtp11231
(S'channel'
p11232
(lp11233
S'char'
p11234
a(lp11235
I-1
aaNtp11236
tp11237
tp11238
sS'DAQmxSetCIEncoderZInputDigSyncEnable'
p11239
((lp11240
S'int32'
p11241
ag11
a((S'taskHandle'
p11242
(lp11243
S'TaskHandle'
p11244
aNtp11245
(S'channel'
p11246
(lp11247
S'char'
p11248
a(lp11249
I-1
aaNtp11250
(S'data'
p11251
(lp11252
S'bool32'
p11253
aNtp11254
tp11255
tp11256
sS'DAQmxSetAnlgWinRefTrigTop'
p11257
((lp11258
S'int32'
p11259
ag11
a((S'taskHandle'
p11260
(lp11261
S'TaskHandle'
p11262
aNtp11263
(S'data'
p11264
(lp11265
S'float64'
p11266
aNtp11267
tp11268
tp11269
sS'DAQmxGetAIStrainGageCfg'
p11270
((lp11271
S'int32'
p11272
ag11
a((S'taskHandle'
p11273
(lp11274
S'TaskHandle'
p11275
aNtp11276
(S'channel'
p11277
(lp11278
S'char'
p11279
a(lp11280
I-1
aaNtp11281
(S'data'
p11282
(lp11283
S'int32'
p11284
ag19
aNtp11285
tp11286
tp11287
sS'DAQmxSetAIChanCalDesc'
p11288
((lp11289
S'int32'
p11290
ag11
a((S'taskHandle'
p11291
(lp11292
S'TaskHandle'
p11293
aNtp11294
(S'channel'
p11295
(lp11296
S'char'
p11297
a(lp11298
I-1
aaNtp11299
(S'data'
p11300
(lp11301
S'char'
p11302
ag19
aNtp11303
tp11304
tp11305
sS'DAQmxSetAOVoltageUnits'
p11306
((lp11307
S'int32'
p11308
ag11
a((S'taskHandle'
p11309
(lp11310
S'TaskHandle'
p11311
aNtp11312
(S'channel'
p11313
(lp11314
S'char'
p11315
a(lp11316
I-1
aaNtp11317
(S'data'
p11318
(lp11319
S'int32'
p11320
aNtp11321
tp11322
tp11323
sS'DAQmxResetExportedRdyForXferEventLvlActiveLvl'
p11324
((lp11325
S'int32'
p11326
ag11
a((S'taskHandle'
p11327
(lp11328
S'TaskHandle'
p11329
aNtp11330
tp11331
tp11332
sS'DAQmxResetCITwoEdgeSepSecondDigSyncEnable'
p11333
((lp11334
S'int32'
p11335
ag11
a((S'taskHandle'
p11336
(lp11337
S'TaskHandle'
p11338
aNtp11339
(S'channel'
p11340
(lp11341
S'char'
p11342
a(lp11343
I-1
aaNtp11344
tp11345
tp11346
sS'DAQmxGetScalePolyReverseCoeff'
p11347
((lp11348
S'int32'
p11349
ag11
a((S'scaleName'
p11350
(lp11351
S'char'
p11352
a(lp11353
I-1
aaNtp11354
(S'data'
p11355
(lp11356
S'float64'
p11357
ag19
aNtp11358
(S'arraySizeInSamples'
p11359
(lp11360
S'uInt32'
p11361
aNtp11362
tp11363
tp11364
sS'DAQmxGetPhysicalChanTEDSBitStream'
p11365
((lp11366
S'int32'
p11367
ag11
a((S'physicalChannel'
p11368
(lp11369
S'char'
p11370
a(lp11371
I-1
aaNtp11372
(S'data'
p11373
(lp11374
S'uInt8'
p11375
ag19
aNtp11376
(S'arraySizeInSamples'
p11377
(lp11378
S'uInt32'
p11379
aNtp11380
tp11381
tp11382
sS'DAQmxSetAILowpassSwitchCapExtClkFreq'
p11383
((lp11384
S'int32'
p11385
ag11
a((S'taskHandle'
p11386
(lp11387
S'TaskHandle'
p11388
aNtp11389
(S'channel'
p11390
(lp11391
S'char'
p11392
a(lp11393
I-1
aaNtp11394
(S'data'
p11395
(lp11396
S'float64'
p11397
aNtp11398
tp11399
tp11400
sS'DAQmxGetChangeDetectDIRisingEdgePhysicalChans'
p11401
((lp11402
S'int32'
p11403
ag11
a((S'taskHandle'
p11404
(lp11405
S'TaskHandle'
p11406
aNtp11407
(S'data'
p11408
(lp11409
S'char'
p11410
ag19
aNtp11411
(S'bufferSize'
p11412
(lp11413
S'uInt32'
p11414
aNtp11415
tp11416
tp11417
sS'DAQmxResetAIStrainGageCfg'
p11418
((lp11419
S'int32'
p11420
ag11
a((S'taskHandle'
p11421
(lp11422
S'TaskHandle'
p11423
aNtp11424
(S'channel'
p11425
(lp11426
S'char'
p11427
a(lp11428
I-1
aaNtp11429
tp11430
tp11431
sS'DAQmxSetCIEncoderAInputDigFltrMinPulseWidth'
p11432
((lp11433
S'int32'
p11434
ag11
a((S'taskHandle'
p11435
(lp11436
S'TaskHandle'
p11437
aNtp11438
(S'channel'
p11439
(lp11440
S'char'
p11441
a(lp11442
I-1
aaNtp11443
(S'data'
p11444
(lp11445
S'float64'
p11446
aNtp11447
tp11448
tp11449
sS'DAQmxResetReadAttribute'
p11450
((lp11451
S'int32'
p11452
ag11
a((S'taskHandle'
p11453
(lp11454
S'TaskHandle'
p11455
aNtp11456
(S'attribute'
p11457
(lp11458
S'int32'
p11459
aNtp11460
tp11461
tp11462
sS'DAQmxSetAILowpassSwitchCapOutClkDiv'
p11463
((lp11464
S'int32'
p11465
ag11
a((S'taskHandle'
p11466
(lp11467
S'TaskHandle'
p11468
aNtp11469
(S'channel'
p11470
(lp11471
S'char'
p11472
a(lp11473
I-1
aaNtp11474
(S'data'
p11475
(lp11476
S'uInt32'
p11477
aNtp11478
tp11479
tp11480
sS'DAQmxGetDONumLines'
p11481
((lp11482
S'int32'
p11483
ag11
a((S'taskHandle'
p11484
(lp11485
S'TaskHandle'
p11486
aNtp11487
(S'channel'
p11488
(lp11489
S'char'
p11490
a(lp11491
I-1
aaNtp11492
(S'data'
p11493
(lp11494
S'uInt32'
p11495
ag19
aNtp11496
tp11497
tp11498
sS'DAQmxSetAILossyLSBRemovalCompressedSampSize'
p11499
((lp11500
S'int32'
p11501
ag11
a((S'taskHandle'
p11502
(lp11503
S'TaskHandle'
p11504
aNtp11505
(S'channel'
p11506
(lp11507
S'char'
p11508
a(lp11509
I-1
aaNtp11510
(S'data'
p11511
(lp11512
S'uInt32'
p11513
aNtp11514
tp11515
tp11516
sS'DAQmxSetCITimestampInitialSeconds'
p11517
((lp11518
S'int32'
p11519
ag11
a((S'taskHandle'
p11520
(lp11521
S'TaskHandle'
p11522
aNtp11523
(S'channel'
p11524
(lp11525
S'char'
p11526
a(lp11527
I-1
aaNtp11528
(S'data'
p11529
(lp11530
S'uInt32'
p11531
aNtp11532
tp11533
tp11534
sS'DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate'
p11535
((lp11536
S'int32'
p11537
ag11
a((S'taskHandle'
p11538
(lp11539
S'TaskHandle'
p11540
aNtp11541
(S'data'
p11542
(lp11543
S'float64'
p11544
ag19
aNtp11545
tp11546
tp11547
sS'DAQmxGetCOAutoIncrCnt'
p11548
((lp11549
S'int32'
p11550
ag11
a((S'taskHandle'
p11551
(lp11552
S'TaskHandle'
p11553
aNtp11554
(S'channel'
p11555
(lp11556
S'char'
p11557
a(lp11558
I-1
aaNtp11559
(S'data'
p11560
(lp11561
S'uInt32'
p11562
ag19
aNtp11563
tp11564
tp11565
sS'DAQmxSetDODataXferReqCond'
p11566
((lp11567
S'int32'
p11568
ag11
a((S'taskHandle'
p11569
(lp11570
S'TaskHandle'
p11571
aNtp11572
(S'channel'
p11573
(lp11574
S'char'
p11575
a(lp11576
I-1
aaNtp11577
(S'data'
p11578
(lp11579
S'int32'
p11580
aNtp11581
tp11582
tp11583
sS'DAQmxCfgAnlgWindowRefTrig'
p11584
((lp11585
S'int32'
p11586
ag11
a((S'taskHandle'
p11587
(lp11588
S'TaskHandle'
p11589
aNtp11590
(S'triggerSource'
p11591
(lp11592
S'char'
p11593
a(lp11594
I-1
aaNtp11595
(S'triggerWhen'
p11596
(lp11597
S'int32'
p11598
aNtp11599
(S'windowTop'
p11600
(lp11601
S'float64'
p11602
aNtp11603
(S'windowBottom'
p11604
(lp11605
S'float64'
p11606
aNtp11607
(S'pretriggerSamples'
p11608
(lp11609
S'uInt32'
p11610
aNtp11611
tp11612
tp11613
sS'DAQmxSetDigPatternRefTrigPattern'
p11614
((lp11615
S'int32'
p11616
ag11
a((S'taskHandle'
p11617
(lp11618
S'TaskHandle'
p11619
aNtp11620
(S'data'
p11621
(lp11622
S'char'
p11623
ag19
aNtp11624
tp11625
tp11626
sS'DAQmxResetExportedSyncPulseEventOutputTerm'
p11627
((lp11628
S'int32'
p11629
ag11
a((S'taskHandle'
p11630
(lp11631
S'TaskHandle'
p11632
aNtp11633
tp11634
tp11635
sS'DAQmxGetCIPulseWidthDigFltrEnable'
p11636
((lp11637
S'int32'
p11638
ag11
a((S'taskHandle'
p11639
(lp11640
S'TaskHandle'
p11641
aNtp11642
(S'channel'
p11643
(lp11644
S'char'
p11645
a(lp11646
I-1
aaNtp11647
(S'data'
p11648
(lp11649
S'bool32'
p11650
ag19
aNtp11651
tp11652
tp11653
sS'DAQmxGetDevPXIChassisNum'
p11654
((lp11655
S'int32'
p11656
ag11
a((S'device'
p11657
(lp11658
S'char'
p11659
a(lp11660
I-1
aaNtp11661
(S'data'
p11662
(lp11663
S'uInt32'
p11664
ag19
aNtp11665
tp11666
tp11667
sS'DAQmxGetSwitchChanMaxACCarryPwr'
p11668
((lp11669
S'int32'
p11670
ag11
a((S'switchChannelName'
p11671
(lp11672
S'char'
p11673
a(lp11674
I-1
aaNtp11675
(S'data'
p11676
(lp11677
S'float64'
p11678
ag19
aNtp11679
tp11680
tp11681
sS'DAQmxGetAIBridgeInitialVoltage'
p11682
((lp11683
S'int32'
p11684
ag11
a((S'taskHandle'
p11685
(lp11686
S'TaskHandle'
p11687
aNtp11688
(S'channel'
p11689
(lp11690
S'char'
p11691
a(lp11692
I-1
aaNtp11693
(S'data'
p11694
(lp11695
S'float64'
p11696
ag19
aNtp11697
tp11698
tp11699
sS'DAQmxSetAnlgLvlPauseTrigCoupling'
p11700
((lp11701
S'int32'
p11702
ag11
a((S'taskHandle'
p11703
(lp11704
S'TaskHandle'
p11705
aNtp11706
(S'data'
p11707
(lp11708
S'int32'
p11709
aNtp11710
tp11711
tp11712
sS'DAQmxResetCICountEdgesCountDirDigSyncEnable'
p11713
((lp11714
S'int32'
p11715
ag11
a((S'taskHandle'
p11716
(lp11717
S'TaskHandle'
p11718
aNtp11719
(S'channel'
p11720
(lp11721
S'char'
p11722
a(lp11723
I-1
aaNtp11724
tp11725
tp11726
sS'DAQmxResetSampClkRate'
p11727
((lp11728
S'int32'
p11729
ag11
a((S'taskHandle'
p11730
(lp11731
S'TaskHandle'
p11732
aNtp11733
tp11734
tp11735
sS'DAQmxGetAIRngLow'
p11736
((lp11737
S'int32'
p11738
ag11
a((S'taskHandle'
p11739
(lp11740
S'TaskHandle'
p11741
aNtp11742
(S'channel'
p11743
(lp11744
S'char'
p11745
a(lp11746
I-1
aaNtp11747
(S'data'
p11748
(lp11749
S'float64'
p11750
ag19
aNtp11751
tp11752
tp11753
sS'DAQmxResetDigLvlPauseTrigDigFltrMinPulseWidth'
p11754
((lp11755
S'int32'
p11756
ag11
a((S'taskHandle'
p11757
(lp11758
S'TaskHandle'
p11759
aNtp11760
tp11761
tp11762
sS'DAQmxResetWatchdogDOExpirState'
p11763
((lp11764
S'int32'
p11765
ag11
a((S'taskHandle'
p11766
(lp11767
S'TaskHandle'
p11768
aNtp11769
(S'channel'
p11770
(lp11771
S'char'
p11772
a(lp11773
I-1
aaNtp11774
tp11775
tp11776
sS'DAQmxGetAODACRefConnToGnd'
p11777
((lp11778
S'int32'
p11779
ag11
a((S'taskHandle'
p11780
(lp11781
S'TaskHandle'
p11782
aNtp11783
(S'channel'
p11784
(lp11785
S'char'
p11786
a(lp11787
I-1
aaNtp11788
(S'data'
p11789
(lp11790
S'bool32'
p11791
ag19
aNtp11792
tp11793
tp11794
sS'DAQmxSetAIChanCalScaleType'
p11795
((lp11796
S'int32'
p11797
ag11
a((S'taskHandle'
p11798
(lp11799
S'TaskHandle'
p11800
aNtp11801
(S'channel'
p11802
(lp11803
S'char'
p11804
a(lp11805
I-1
aaNtp11806
(S'data'
p11807
(lp11808
S'int32'
p11809
aNtp11810
tp11811
tp11812
sS'DAQmxGetSelfCalSupported'
p11813
((lp11814
S'int32'
p11815
ag11
a((S'deviceName'
p11816
(lp11817
S'char'
p11818
a(lp11819
I-1
aaNtp11820
(S'data'
p11821
(lp11822
S'bool32'
p11823
ag19
aNtp11824
tp11825
tp11826
sS'DAQmxGetPersistedTaskAllowInteractiveDeletion'
p11827
((lp11828
S'int32'
p11829
ag11
a((S'taskName'
p11830
(lp11831
S'char'
p11832
a(lp11833
I-1
aaNtp11834
(S'data'
p11835
(lp11836
S'bool32'
p11837
ag19
aNtp11838
tp11839
tp11840
sS'DAQmxGetCOCtrTimebaseDigFltrTimebaseRate'
p11841
((lp11842
S'int32'
p11843
ag11
a((S'taskHandle'
p11844
(lp11845
S'TaskHandle'
p11846
aNtp11847
(S'channel'
p11848
(lp11849
S'char'
p11850
a(lp11851
I-1
aaNtp11852
(S'data'
p11853
(lp11854
S'float64'
p11855
ag19
aNtp11856
tp11857
tp11858
sS'DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth'
p11859
((lp11860
S'int32'
p11861
ag11
a((S'taskHandle'
p11862
(lp11863
S'TaskHandle'
p11864
aNtp11865
(S'channel'
p11866
(lp11867
S'char'
p11868
a(lp11869
I-1
aaNtp11870
tp11871
tp11872
sS'DAQmxGetAODACOffsetExtSrc'
p11873
((lp11874
S'int32'
p11875
ag11
a((S'taskHandle'
p11876
(lp11877
S'TaskHandle'
p11878
aNtp11879
(S'channel'
p11880
(lp11881
S'char'
p11882
a(lp11883
I-1
aaNtp11884
(S'data'
p11885
(lp11886
S'char'
p11887
ag19
aNtp11888
(S'bufferSize'
p11889
(lp11890
S'uInt32'
p11891
aNtp11892
tp11893
tp11894
sS'DAQmxResetAIExcitDCorAC'
p11895
((lp11896
S'int32'
p11897
ag11
a((S'taskHandle'
p11898
(lp11899
S'TaskHandle'
p11900
aNtp11901
(S'channel'
p11902
(lp11903
S'char'
p11904
a(lp11905
I-1
aaNtp11906
tp11907
tp11908
sS'DAQmxGetCOCtrTimebaseRate'
p11909
((lp11910
S'int32'
p11911
ag11
a((S'taskHandle'
p11912
(lp11913
S'TaskHandle'
p11914
aNtp11915
(S'channel'
p11916
(lp11917
S'char'
p11918
a(lp11919
I-1
aaNtp11920
(S'data'
p11921
(lp11922
S'float64'
p11923
ag19
aNtp11924
tp11925
tp11926
sS'DAQmxSetCOPulseIdleState'
p11927
((lp11928
S'int32'
p11929
ag11
a((S'taskHandle'
p11930
(lp11931
S'TaskHandle'
p11932
aNtp11933
(S'channel'
p11934
(lp11935
S'char'
p11936
a(lp11937
I-1
aaNtp11938
(S'data'
p11939
(lp11940
S'int32'
p11941
aNtp11942
tp11943
tp11944
sS'DAQmxGetSwitchChanBandwidth'
p11945
((lp11946
S'int32'
p11947
ag11
a((S'switchChannelName'
p11948
(lp11949
S'char'
p11950
a(lp11951
I-1
aaNtp11952
(S'data'
p11953
(lp11954
S'float64'
p11955
ag19
aNtp11956
tp11957
tp11958
sS'DAQmxSetAIRTDType'
p11959
((lp11960
S'int32'
p11961
ag11
a((S'taskHandle'
p11962
(lp11963
S'TaskHandle'
p11964
aNtp11965
(S'channel'
p11966
(lp11967
S'char'
p11968
a(lp11969
I-1
aaNtp11970
(S'data'
p11971
(lp11972
S'int32'
p11973
aNtp11974
tp11975
tp11976
sS'DAQmxSetAIChanCalEnableCal'
p11977
((lp11978
S'int32'
p11979
ag11
a((S'taskHandle'
p11980
(lp11981
S'TaskHandle'
p11982
aNtp11983
(S'channel'
p11984
(lp11985
S'char'
p11986
a(lp11987
I-1
aaNtp11988
(S'data'
p11989
(lp11990
S'bool32'
p11991
aNtp11992
tp11993
tp11994
sS'DAQmxGetAIBridgeShuntCalSelect'
p11995
((lp11996
S'int32'
p11997
ag11
a((S'taskHandle'
p11998
(lp11999
S'TaskHandle'
p12000
aNtp12001
(S'channel'
p12002
(lp12003
S'char'
p12004
a(lp12005
I-1
aaNtp12006
(S'data'
p12007
(lp12008
S'int32'
p12009
ag19
aNtp12010
tp12011
tp12012
sS'DAQmxGetDigEdgeWatchdogExpirTrigSrc'
p12013
((lp12014
S'int32'
p12015
ag11
a((S'taskHandle'
p12016
(lp12017
S'TaskHandle'
p12018
aNtp12019
(S'data'
p12020
(lp12021
S'char'
p12022
ag19
aNtp12023
(S'bufferSize'
p12024
(lp12025
S'uInt32'
p12026
aNtp12027
tp12028
tp12029
sS'DAQmxGetHshkSampleInputDataWhen'
p12030
((lp12031
S'int32'
p12032
ag11
a((S'taskHandle'
p12033
(lp12034
S'TaskHandle'
p12035
aNtp12036
(S'data'
p12037
(lp12038
S'int32'
p12039
ag19
aNtp12040
tp12041
tp12042
sS'DAQmxGetInterlockedHshkTrigAssertedLvl'
p12043
((lp12044
S'int32'
p12045
ag11
a((S'taskHandle'
p12046
(lp12047
S'TaskHandle'
p12048
aNtp12049
(S'data'
p12050
(lp12051
S'int32'
p12052
ag19
aNtp12053
tp12054
tp12055
sS'DAQmxGetCIEncoderZInputDigSyncEnable'
p12056
((lp12057
S'int32'
p12058
ag11
a((S'taskHandle'
p12059
(lp12060
S'TaskHandle'
p12061
aNtp12062
(S'channel'
p12063
(lp12064
S'char'
p12065
a(lp12066
I-1
aaNtp12067
(S'data'
p12068
(lp12069
S'bool32'
p12070
ag19
aNtp12071
tp12072
tp12073
sS'DAQmxResetAnlgWinRefTrigTop'
p12074
((lp12075
S'int32'
p12076
ag11
a((S'taskHandle'
p12077
(lp12078
S'TaskHandle'
p12079
aNtp12080
tp12081
tp12082
sS'DAQmxGetAIExcitSrc'
p12083
((lp12084
S'int32'
p12085
ag11
a((S'taskHandle'
p12086
(lp12087
S'TaskHandle'
p12088
aNtp12089
(S'channel'
p12090
(lp12091
S'char'
p12092
a(lp12093
I-1
aaNtp12094
(S'data'
p12095
(lp12096
S'int32'
p12097
ag19
aNtp12098
tp12099
tp12100
sS'DAQmxSetAdvTrigType'
p12101
((lp12102
S'int32'
p12103
ag11
a((S'taskHandle'
p12104
(lp12105
S'TaskHandle'
p12106
aNtp12107
(S'data'
p12108
(lp12109
S'int32'
p12110
aNtp12111
tp12112
tp12113
sS'DAQmxResetAILeadWireResistance'
p12114
((lp12115
S'int32'
p12116
ag11
a((S'taskHandle'
p12117
(lp12118
S'TaskHandle'
p12119
aNtp12120
(S'channel'
p12121
(lp12122
S'char'
p12123
a(lp12124
I-1
aaNtp12125
tp12126
tp12127
sS'DAQmxResetDITristate'
p12128
((lp12129
S'int32'
p12130
ag11
a((S'taskHandle'
p12131
(lp12132
S'TaskHandle'
p12133
aNtp12134
(S'channel'
p12135
(lp12136
S'char'
p12137
a(lp12138
I-1
aaNtp12139
tp12140
tp12141
sS'DAQmxSetAODACRefConnToGnd'
p12142
((lp12143
S'int32'
p12144
ag11
a((S'taskHandle'
p12145
(lp12146
S'TaskHandle'
p12147
aNtp12148
(S'channel'
p12149
(lp12150
S'char'
p12151
a(lp12152
I-1
aaNtp12153
(S'data'
p12154
(lp12155
S'bool32'
p12156
aNtp12157
tp12158
tp12159
sS'DAQmxResetCIEncoderZIndexEnable'
p12160
((lp12161
S'int32'
p12162
ag11
a((S'taskHandle'
p12163
(lp12164
S'TaskHandle'
p12165
aNtp12166
(S'channel'
p12167
(lp12168
S'char'
p12169
a(lp12170
I-1
aaNtp12171
tp12172
tp12173
sS'DAQmxCfgDigPatternRefTrig'
p12174
((lp12175
S'int32'
p12176
ag11
a((S'taskHandle'
p12177
(lp12178
S'TaskHandle'
p12179
aNtp12180
(S'triggerSource'
p12181
(lp12182
S'char'
p12183
a(lp12184
I-1
aaNtp12185
(S'triggerPattern'
p12186
(lp12187
S'char'
p12188
a(lp12189
I-1
aaNtp12190
(S'triggerWhen'
p12191
(lp12192
S'int32'
p12193
aNtp12194
(S'pretriggerSamples'
p12195
(lp12196
S'uInt32'
p12197
aNtp12198
tp12199
tp12200
sS'DAQmxResetWriteSleepTime'
p12201
((lp12202
S'int32'
p12203
ag11
a((S'taskHandle'
p12204
(lp12205
S'TaskHandle'
p12206
aNtp12207
tp12208
tp12209
sS'DAQmxResetSampClkTimebaseRate'
p12210
((lp12211
S'int32'
p12212
ag11
a((S'taskHandle'
p12213
(lp12214
S'TaskHandle'
p12215
aNtp12216
tp12217
tp12218
sS'DAQmxResetAnlgEdgeStartTrigSlope'
p12219
((lp12220
S'int32'
p12221
ag11
a((S'taskHandle'
p12222
(lp12223
S'TaskHandle'
p12224
aNtp12225
tp12226
tp12227
sS'DAQmxSetAIResistanceUnits'
p12228
((lp12229
S'int32'
p12230
ag11
a((S'taskHandle'
p12231
(lp12232
S'TaskHandle'
p12233
aNtp12234
(S'channel'
p12235
(lp12236
S'char'
p12237
a(lp12238
I-1
aaNtp12239
(S'data'
p12240
(lp12241
S'int32'
p12242
aNtp12243
tp12244
tp12245
sS'DAQmxGetAIDataXferMech'
p12246
((lp12247
S'int32'
p12248
ag11
a((S'taskHandle'
p12249
(lp12250
S'TaskHandle'
p12251
aNtp12252
(S'channel'
p12253
(lp12254
S'char'
p12255
a(lp12256
I-1
aaNtp12257
(S'data'
p12258
(lp12259
S'int32'
p12260
ag19
aNtp12261
tp12262
tp12263
sS'DAQmxResetDigLvlPauseTrigDigFltrTimebaseSrc'
p12264
((lp12265
S'int32'
p12266
ag11
a((S'taskHandle'
p12267
(lp12268
S'TaskHandle'
p12269
aNtp12270
tp12271
tp12272
sS'DAQmxGetAICurrentShuntLoc'
p12273
((lp12274
S'int32'
p12275
ag11
a((S'taskHandle'
p12276
(lp12277
S'TaskHandle'
p12278
aNtp12279
(S'channel'
p12280
(lp12281
S'char'
p12282
a(lp12283
I-1
aaNtp12284
(S'data'
p12285
(lp12286
S'int32'
p12287
ag19
aNtp12288
tp12289
tp12290
sS'DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth'
p12291
((lp12292
S'int32'
p12293
ag11
a((S'taskHandle'
p12294
(lp12295
S'TaskHandle'
p12296
aNtp12297
(S'channel'
p12298
(lp12299
S'char'
p12300
a(lp12301
I-1
aaNtp12302
(S'data'
p12303
(lp12304
S'float64'
p12305
ag19
aNtp12306
tp12307
tp12308
sS'DAQmxGetAIThrmstrC'
p12309
((lp12310
S'int32'
p12311
ag11
a((S'taskHandle'
p12312
(lp12313
S'TaskHandle'
p12314
aNtp12315
(S'channel'
p12316
(lp12317
S'char'
p12318
a(lp12319
I-1
aaNtp12320
(S'data'
p12321
(lp12322
S'float64'
p12323
ag19
aNtp12324
tp12325
tp12326
sS'DAQmxGetDevBusType'
p12327
((lp12328
S'int32'
p12329
ag11
a((S'device'
p12330
(lp12331
S'char'
p12332
a(lp12333
I-1
aaNtp12334
(S'data'
p12335
(lp12336
S'int32'
p12337
ag19
aNtp12338
tp12339
tp12340
sS'DAQmxSetReadSleepTime'
p12341
((lp12342
S'int32'
p12343
ag11
a((S'taskHandle'
p12344
(lp12345
S'TaskHandle'
p12346
aNtp12347
(S'data'
p12348
(lp12349
S'float64'
p12350
aNtp12351
tp12352
tp12353
sS'DAQmxGetCIAngEncoderUnits'
p12354
((lp12355
S'int32'
p12356
ag11
a((S'taskHandle'
p12357
(lp12358
S'TaskHandle'
p12359
aNtp12360
(S'channel'
p12361
(lp12362
S'char'
p12363
a(lp12364
I-1
aaNtp12365
(S'data'
p12366
(lp12367
S'int32'
p12368
ag19
aNtp12369
tp12370
tp12371
sS'DAQmxGetRefTrigType'
p12372
((lp12373
S'int32'
p12374
ag11
a((S'taskHandle'
p12375
(lp12376
S'TaskHandle'
p12377
aNtp12378
(S'data'
p12379
(lp12380
S'int32'
p12381
ag19
aNtp12382
tp12383
tp12384
sS'DAQmxGetSwitchDevSettled'
p12385
((lp12386
S'int32'
p12387
ag11
a((S'deviceName'
p12388
(lp12389
S'char'
p12390
a(lp12391
I-1
aaNtp12392
(S'data'
p12393
(lp12394
S'bool32'
p12395
ag19
aNtp12396
tp12397
tp12398
sS'DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate'
p12399
((lp12400
S'int32'
p12401
ag11
a((S'taskHandle'
p12402
(lp12403
S'TaskHandle'
p12404
aNtp12405
(S'channel'
p12406
(lp12407
S'char'
p12408
a(lp12409
I-1
aaNtp12410
tp12411
tp12412
sS'DAQmxResetAISoundPressureUnits'
p12413
((lp12414
S'int32'
p12415
ag11
a((S'taskHandle'
p12416
(lp12417
S'TaskHandle'
p12418
aNtp12419
(S'channel'
p12420
(lp12421
S'char'
p12422
a(lp12423
I-1
aaNtp12424
tp12425
tp12426
sS'DAQmxSetAILowpassCutoffFreq'
p12427
((lp12428
S'int32'
p12429
ag11
a((S'taskHandle'
p12430
(lp12431
S'TaskHandle'
p12432
aNtp12433
(S'channel'
p12434
(lp12435
S'char'
p12436
a(lp12437
I-1
aaNtp12438
(S'data'
p12439
(lp12440
S'float64'
p12441
aNtp12442
tp12443
tp12444
sS'DAQmxResetAIDataXferReqCond'
p12445
((lp12446
S'int32'
p12447
ag11
a((S'taskHandle'
p12448
(lp12449
S'TaskHandle'
p12450
aNtp12451
(S'channel'
p12452
(lp12453
S'char'
p12454
a(lp12455
I-1
aaNtp12456
tp12457
tp12458
sS'DAQmxGetInterlockedHshkTrigSrc'
p12459
((lp12460
S'int32'
p12461
ag11
a((S'taskHandle'
p12462
(lp12463
S'TaskHandle'
p12464
aNtp12465
(S'data'
p12466
(lp12467
S'char'
p12468
ag19
aNtp12469
(S'bufferSize'
p12470
(lp12471
S'uInt32'
p12472
aNtp12473
tp12474
tp12475
sS'DAQmxGetExportedSampClkTimebaseOutputTerm'
p12476
((lp12477
S'int32'
p12478
ag11
a((S'taskHandle'
p12479
(lp12480
S'TaskHandle'
p12481
aNtp12482
(S'data'
p12483
(lp12484
S'char'
p12485
ag19
aNtp12486
(S'bufferSize'
p12487
(lp12488
S'uInt32'
p12489
aNtp12490
tp12491
tp12492
sS'DAQmxSetPauseTrigType'
p12493
((lp12494
S'int32'
p12495
ag11
a((S'taskHandle'
p12496
(lp12497
S'TaskHandle'
p12498
aNtp12499
(S'data'
p12500
(lp12501
S'int32'
p12502
aNtp12503
tp12504
tp12505
sS'DAQmxGetCIGPSSyncSrc'
p12506
((lp12507
S'int32'
p12508
ag11
a((S'taskHandle'
p12509
(lp12510
S'TaskHandle'
p12511
aNtp12512
(S'channel'
p12513
(lp12514
S'char'
p12515
a(lp12516
I-1
aaNtp12517
(S'data'
p12518
(lp12519
S'char'
p12520
ag19
aNtp12521
(S'bufferSize'
p12522
(lp12523
S'uInt32'
p12524
aNtp12525
tp12526
tp12527
sS'DAQmxSetBufOutputBufSize'
p12528
((lp12529
S'int32'
p12530
ag11
a((S'taskHandle'
p12531
(lp12532
S'TaskHandle'
p12533
aNtp12534
(S'data'
p12535
(lp12536
S'uInt32'
p12537
aNtp12538
tp12539
tp12540
sS'DAQmxAdjust1520Cal'
p12541
((lp12542
S'int32'
p12543
ag11
a((S'calHandle'
p12544
(lp12545
S'uInt32'
p12546
aNtp12547
(S'refVoltage'
p12548
(lp12549
S'float64'
p12550
aNtp12551
(S'measOutput'
p12552
(lp12553
S'float64'
p12554
aNtp12555
tp12556
tp12557
sS'DAQmxResetExportedWatchdogExpiredEventOutputTerm'
p12558
((lp12559
S'int32'
p12560
ag11
a((S'taskHandle'
p12561
(lp12562
S'TaskHandle'
p12563
aNtp12564
tp12565
tp12566
sS'DAQmxResetWatchdogAttribute'
p12567
((lp12568
S'int32'
p12569
ag11
a((S'taskHandle'
p12570
(lp12571
S'TaskHandle'
p12572
aNtp12573
(S'lines'
p12574
(lp12575
S'char'
p12576
a(lp12577
I-1
aaNtp12578
(S'attribute'
p12579
(lp12580
S'int32'
p12581
aNtp12582
tp12583
tp12584
sS'DAQmxSetAIDitherEnable'
p12585
((lp12586
S'int32'
p12587
ag11
a((S'taskHandle'
p12588
(lp12589
S'TaskHandle'
p12590
aNtp12591
(S'channel'
p12592
(lp12593
S'char'
p12594
a(lp12595
I-1
aaNtp12596
(S'data'
p12597
(lp12598
S'bool32'
p12599
aNtp12600
tp12601
tp12602
sS'DAQmxCreateMapScale'
p12603
((lp12604
S'int32'
p12605
ag11
a((S'name'
p12606
(lp12607
S'char'
p12608
a(lp12609
I-1
aaNtp12610
(S'prescaledMin'
p12611
(lp12612
S'float64'
p12613
aNtp12614
(S'prescaledMax'
p12615
(lp12616
S'float64'
p12617
aNtp12618
(S'scaledMin'
p12619
(lp12620
S'float64'
p12621
aNtp12622
(S'scaledMax'
p12623
(lp12624
S'float64'
p12625
aNtp12626
(S'preScaledUnits'
p12627
(lp12628
S'int32'
p12629
aNtp12630
(S'scaledUnits'
p12631
(lp12632
S'char'
p12633
a(lp12634
I-1
aaNtp12635
tp12636
tp12637
sS'DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc'
p12638
((lp12639
S'int32'
p12640
ag11
a((S'taskHandle'
p12641
(lp12642
S'TaskHandle'
p12643
aNtp12644
(S'channel'
p12645
(lp12646
S'char'
p12647
a(lp12648
I-1
aaNtp12649
(S'data'
p12650
(lp12651
S'char'
p12652
ag19
aNtp12653
(S'bufferSize'
p12654
(lp12655
S'uInt32'
p12656
aNtp12657
tp12658
tp12659
sS'DAQmxGetSampClkActiveEdge'
p12660
((lp12661
S'int32'
p12662
ag11
a((S'taskHandle'
p12663
(lp12664
S'TaskHandle'
p12665
aNtp12666
(S'data'
p12667
(lp12668
S'int32'
p12669
ag19
aNtp12670
tp12671
tp12672
sS'DAQmxResetCIPeriodUnits'
p12673
((lp12674
S'int32'
p12675
ag11
a((S'taskHandle'
p12676
(lp12677
S'TaskHandle'
p12678
aNtp12679
(S'channel'
p12680
(lp12681
S'char'
p12682
a(lp12683
I-1
aaNtp12684
tp12685
tp12686
sS'DAQmxGetAIMin'
p12687
((lp12688
S'int32'
p12689
ag11
a((S'taskHandle'
p12690
(lp12691
S'TaskHandle'
p12692
aNtp12693
(S'channel'
p12694
(lp12695
S'char'
p12696
a(lp12697
I-1
aaNtp12698
(S'data'
p12699
(lp12700
S'float64'
p12701
ag19
aNtp12702
tp12703
tp12704
sS'DAQmxSetAnlgEdgeRefTrigHyst'
p12705
((lp12706
S'int32'
p12707
ag11
a((S'taskHandle'
p12708
(lp12709
S'TaskHandle'
p12710
aNtp12711
(S'data'
p12712
(lp12713
S'float64'
p12714
aNtp12715
tp12716
tp12717
sS'DAQmxResetCIPeriodDiv'
p12718
((lp12719
S'int32'
p12720
ag11
a((S'taskHandle'
p12721
(lp12722
S'TaskHandle'
p12723
aNtp12724
(S'channel'
p12725
(lp12726
S'char'
p12727
a(lp12728
I-1
aaNtp12729
tp12730
tp12731
sS'DAQmxResetSwitchScanRepeatMode'
p12732
((lp12733
S'int32'
p12734
ag11
a((S'taskHandle'
p12735
(lp12736
S'TaskHandle'
p12737
aNtp12738
tp12739
tp12740
sS'DAQmxSetCITwoEdgeSepSecondDigFltrEnable'
p12741
((lp12742
S'int32'
p12743
ag11
a((S'taskHandle'
p12744
(lp12745
S'TaskHandle'
p12746
aNtp12747
(S'channel'
p12748
(lp12749
S'char'
p12750
a(lp12751
I-1
aaNtp12752
(S'data'
p12753
(lp12754
S'bool32'
p12755
aNtp12756
tp12757
tp12758
sS'DAQmxSetExportedSampClkTimebaseOutputTerm'
p12759
((lp12760
S'int32'
p12761
ag11
a((S'taskHandle'
p12762
(lp12763
S'TaskHandle'
p12764
aNtp12765
(S'data'
p12766
(lp12767
S'char'
p12768
ag19
aNtp12769
tp12770
tp12771
sS'DAQmxGetAIConvSrc'
p12772
((lp12773
S'int32'
p12774
ag11
a((S'taskHandle'
p12775
(lp12776
S'TaskHandle'
p12777
aNtp12778
(S'data'
p12779
(lp12780
S'char'
p12781
ag19
aNtp12782
(S'bufferSize'
p12783
(lp12784
S'uInt32'
p12785
aNtp12786
tp12787
tp12788
sS'DAQmxSetCIMax'
p12789
((lp12790
S'int32'
p12791
ag11
a((S'taskHandle'
p12792
(lp12793
S'TaskHandle'
p12794
aNtp12795
(S'channel'
p12796
(lp12797
S'char'
p12798
a(lp12799
I-1
aaNtp12800
(S'data'
p12801
(lp12802
S'float64'
p12803
aNtp12804
tp12805
tp12806
sS'DAQmxResetAIMemMapEnable'
p12807
((lp12808
S'int32'
p12809
ag11
a((S'taskHandle'
p12810
(lp12811
S'TaskHandle'
p12812
aNtp12813
(S'channel'
p12814
(lp12815
S'char'
p12816
a(lp12817
I-1
aaNtp12818
tp12819
tp12820
sS'DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth'
p12821
((lp12822
S'int32'
p12823
ag11
a((S'taskHandle'
p12824
(lp12825
S'TaskHandle'
p12826
aNtp12827
(S'channel'
p12828
(lp12829
S'char'
p12830
a(lp12831
I-1
aaNtp12832
(S'data'
p12833
(lp12834
S'float64'
p12835
aNtp12836
tp12837
tp12838
sS'DAQmxResetDigEdgeArmStartTrigEdge'
p12839
((lp12840
S'int32'
p12841
ag11
a((S'taskHandle'
p12842
(lp12843
S'TaskHandle'
p12844
aNtp12845
tp12846
tp12847
sS'DAQmxSetCIPulseWidthDigFltrMinPulseWidth'
p12848
((lp12849
S'int32'
p12850
ag11
a((S'taskHandle'
p12851
(lp12852
S'TaskHandle'
p12853
aNtp12854
(S'channel'
p12855
(lp12856
S'char'
p12857
a(lp12858
I-1
aaNtp12859
(S'data'
p12860
(lp12861
S'float64'
p12862
aNtp12863
tp12864
tp12865
sS'DAQmxSetCISemiPeriodUnits'
p12866
((lp12867
S'int32'
p12868
ag11
a((S'taskHandle'
p12869
(lp12870
S'TaskHandle'
p12871
aNtp12872
(S'channel'
p12873
(lp12874
S'char'
p12875
a(lp12876
I-1
aaNtp12877
(S'data'
p12878
(lp12879
S'int32'
p12880
aNtp12881
tp12882
tp12883
sS'DAQmxResetAISoundPressureMaxSoundPressureLvl'
p12884
((lp12885
S'int32'
p12886
ag11
a((S'taskHandle'
p12887
(lp12888
S'TaskHandle'
p12889
aNtp12890
(S'channel'
p12891
(lp12892
S'char'
p12893
a(lp12894
I-1
aaNtp12895
tp12896
tp12897
sS'DAQmxGetSwitchDevSwitchChanList'
p12898
((lp12899
S'int32'
p12900
ag11
a((S'deviceName'
p12901
(lp12902
S'char'
p12903
a(lp12904
I-1
aaNtp12905
(S'data'
p12906
(lp12907
S'char'
p12908
ag19
aNtp12909
(S'bufferSize'
p12910
(lp12911
S'uInt32'
p12912
aNtp12913
tp12914
tp12915
sS'DAQmxGetCIEncoderAInputTerm'
p12916
((lp12917
S'int32'
p12918
ag11
a((S'taskHandle'
p12919
(lp12920
S'TaskHandle'
p12921
aNtp12922
(S'channel'
p12923
(lp12924
S'char'
p12925
a(lp12926
I-1
aaNtp12927
(S'data'
p12928
(lp12929
S'char'
p12930
ag19
aNtp12931
(S'bufferSize'
p12932
(lp12933
S'uInt32'
p12934
aNtp12935
tp12936
tp12937
sS'DAQmxGetAnlgEdgeRefTrigCoupling'
p12938
((lp12939
S'int32'
p12940
ag11
a((S'taskHandle'
p12941
(lp12942
S'TaskHandle'
p12943
aNtp12944
(S'data'
p12945
(lp12946
S'int32'
p12947
ag19
aNtp12948
tp12949
tp12950
sS'DAQmxResetAILVDTUnits'
p12951
((lp12952
S'int32'
p12953
ag11
a((S'taskHandle'
p12954
(lp12955
S'TaskHandle'
p12956
aNtp12957
(S'channel'
p12958
(lp12959
S'char'
p12960
a(lp12961
I-1
aaNtp12962
tp12963
tp12964
sS'DAQmxResetCIEncoderBInputDigFltrEnable'
p12965
((lp12966
S'int32'
p12967
ag11
a((S'taskHandle'
p12968
(lp12969
S'TaskHandle'
p12970
aNtp12971
(S'channel'
p12972
(lp12973
S'char'
p12974
a(lp12975
I-1
aaNtp12976
tp12977
tp12978
sS'DAQmxGetScaleMapScaledMin'
p12979
((lp12980
S'int32'
p12981
ag11
a((S'scaleName'
p12982
(lp12983
S'char'
p12984
a(lp12985
I-1
aaNtp12986
(S'data'
p12987
(lp12988
S'float64'
p12989
ag19
aNtp12990
tp12991
tp12992
sS'DAQmxGetReadTotalSampPerChanAcquired'
p12993
((lp12994
S'int32'
p12995
ag11
a((S'taskHandle'
p12996
(lp12997
S'TaskHandle'
p12998
aNtp12999
(S'data'
p13000
(lp13001
S'uInt64'
p13002
ag19
aNtp13003
tp13004
tp13005
sS'DAQmxSetWriteSleepTime'
p13006
((lp13007
S'int32'
p13008
ag11
a((S'taskHandle'
p13009
(lp13010
S'TaskHandle'
p13011
aNtp13012
(S'data'
p13013
(lp13014
S'float64'
p13015
aNtp13016
tp13017
tp13018
sS'DAQmxCreateTEDSAIStrainGageChan'
p13019
((lp13020
S'int32'
p13021
ag11
a((S'taskHandle'
p13022
(lp13023
S'TaskHandle'
p13024
aNtp13025
(S'physicalChannel'
p13026
(lp13027
S'char'
p13028
a(lp13029
I-1
aaNtp13030
(S'nameToAssignToChannel'
p13031
(lp13032
S'char'
p13033
a(lp13034
I-1
aaNtp13035
(S'minVal'
p13036
(lp13037
S'float64'
p13038
aNtp13039
(S'maxVal'
p13040
(lp13041
S'float64'
p13042
aNtp13043
(S'units'
p13044
(lp13045
S'int32'
p13046
aNtp13047
(S'voltageExcitSource'
p13048
(lp13049
S'int32'
p13050
aNtp13051
(S'voltageExcitVal'
p13052
(lp13053
S'float64'
p13054
aNtp13055
(S'initialBridgeVoltage'
p13056
(lp13057
S'float64'
p13058
aNtp13059
(S'leadWireResistance'
p13060
(lp13061
S'float64'
p13062
aNtp13063
(S'customScaleName'
p13064
(lp13065
S'char'
p13066
a(lp13067
I-1
aaNtp13068
tp13069
tp13070
sS'DAQmxGetAOIdleOutputBehavior'
p13071
((lp13072
S'int32'
p13073
ag11
a((S'taskHandle'
p13074
(lp13075
S'TaskHandle'
p13076
aNtp13077
(S'channel'
p13078
(lp13079
S'char'
p13080
a(lp13081
I-1
aaNtp13082
(S'data'
p13083
(lp13084
S'int32'
p13085
ag19
aNtp13086
tp13087
tp13088
sS'DAQmxSetAOResolutionUnits'
p13089
((lp13090
S'int32'
p13091
ag11
a((S'taskHandle'
p13092
(lp13093
S'TaskHandle'
p13094
aNtp13095
(S'channel'
p13096
(lp13097
S'char'
p13098
a(lp13099
I-1
aaNtp13100
(S'data'
p13101
(lp13102
S'int32'
p13103
aNtp13104
tp13105
tp13106
sS'DAQmxGetAIRVDTUnits'
p13107
((lp13108
S'int32'
p13109
ag11
a((S'taskHandle'
p13110
(lp13111
S'TaskHandle'
p13112
aNtp13113
(S'channel'
p13114
(lp13115
S'char'
p13116
a(lp13117
I-1
aaNtp13118
(S'data'
p13119
(lp13120
S'int32'
p13121
ag19
aNtp13122
tp13123
tp13124
sS'DAQmxGetAIExcitVoltageOrCurrent'
p13125
((lp13126
S'int32'
p13127
ag11
a((S'taskHandle'
p13128
(lp13129
S'TaskHandle'
p13130
aNtp13131
(S'channel'
p13132
(lp13133
S'char'
p13134
a(lp13135
I-1
aaNtp13136
(S'data'
p13137
(lp13138
S'int32'
p13139
ag19
aNtp13140
tp13141
tp13142
sS'DAQmxResetAIResistanceUnits'
p13143
((lp13144
S'int32'
p13145
ag11
a((S'taskHandle'
p13146
(lp13147
S'TaskHandle'
p13148
aNtp13149
(S'channel'
p13150
(lp13151
S'char'
p13152
a(lp13153
I-1
aaNtp13154
tp13155
tp13156
sS'DAQmxSetCICountEdgesDir'
p13157
((lp13158
S'int32'
p13159
ag11
a((S'taskHandle'
p13160
(lp13161
S'TaskHandle'
p13162
aNtp13163
(S'channel'
p13164
(lp13165
S'char'
p13166
a(lp13167
I-1
aaNtp13168
(S'data'
p13169
(lp13170
S'int32'
p13171
aNtp13172
tp13173
tp13174
sS'DAQmxResetAIBridgeCfg'
p13175
((lp13176
S'int32'
p13177
ag11
a((S'taskHandle'
p13178
(lp13179
S'TaskHandle'
p13180
aNtp13181
(S'channel'
p13182
(lp13183
S'char'
p13184
a(lp13185
I-1
aaNtp13186
tp13187
tp13188
sS'DAQmxGetAILeadWireResistance'
p13189
((lp13190
S'int32'
p13191
ag11
a((S'taskHandle'
p13192
(lp13193
S'TaskHandle'
p13194
aNtp13195
(S'channel'
p13196
(lp13197
S'char'
p13198
a(lp13199
I-1
aaNtp13200
(S'data'
p13201
(lp13202
S'float64'
p13203
ag19
aNtp13204
tp13205
tp13206
sS'DAQmxResetExportedHshkEventInterlockedAssertOnStart'
p13207
((lp13208
S'int32'
p13209
ag11
a((S'taskHandle'
p13210
(lp13211
S'TaskHandle'
p13212
aNtp13213
tp13214
tp13215
sS'DAQmxAdjustDSAAICal'
p13216
((lp13217
S'int32'
p13218
ag11
a((S'calHandle'
p13219
(lp13220
S'uInt32'
p13221
aNtp13222
(S'referenceVoltage'
p13223
(lp13224
S'float64'
p13225
aNtp13226
tp13227
tp13228
sS'DAQmxResetCOPulseFreq'
p13229
((lp13230
S'int32'
p13231
ag11
a((S'taskHandle'
p13232
(lp13233
S'TaskHandle'
p13234
aNtp13235
(S'channel'
p13236
(lp13237
S'char'
p13238
a(lp13239
I-1
aaNtp13240
tp13241
tp13242
sS'DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth'
p13243
((lp13244
S'int32'
p13245
ag11
a((S'taskHandle'
p13246
(lp13247
S'TaskHandle'
p13248
aNtp13249
(S'data'
p13250
(lp13251
S'float64'
p13252
ag19
aNtp13253
tp13254
tp13255
sS'DAQmxGetExported20MHzTimebaseOutputTerm'
p13256
((lp13257
S'int32'
p13258
ag11
a((S'taskHandle'
p13259
(lp13260
S'TaskHandle'
p13261
aNtp13262
(S'data'
p13263
(lp13264
S'char'
p13265
ag19
aNtp13266
(S'bufferSize'
p13267
(lp13268
S'uInt32'
p13269
aNtp13270
tp13271
tp13272
sS'DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc'
p13273
((lp13274
S'int32'
p13275
ag11
a((S'taskHandle'
p13276
(lp13277
S'TaskHandle'
p13278
aNtp13279
(S'data'
p13280
(lp13281
S'char'
p13282
ag19
aNtp13283
(S'bufferSize'
p13284
(lp13285
S'uInt32'
p13286
aNtp13287
tp13288
tp13289
sS'DAQmxResetCIPulseWidthDigFltrTimebaseRate'
p13290
((lp13291
S'int32'
p13292
ag11
a((S'taskHandle'
p13293
(lp13294
S'TaskHandle'
p13295
aNtp13296
(S'channel'
p13297
(lp13298
S'char'
p13299
a(lp13300
I-1
aaNtp13301
tp13302
tp13303
sS'DAQmxResetCIPulseWidthDigFltrTimebaseSrc'
p13304
((lp13305
S'int32'
p13306
ag11
a((S'taskHandle'
p13307
(lp13308
S'TaskHandle'
p13309
aNtp13310
(S'channel'
p13311
(lp13312
S'char'
p13313
a(lp13314
I-1
aaNtp13315
tp13316
tp13317
sS'DAQmxSetCIEncoderZInputDigFltrTimebaseSrc'
p13318
((lp13319
S'int32'
p13320
ag11
a((S'taskHandle'
p13321
(lp13322
S'TaskHandle'
p13323
aNtp13324
(S'channel'
p13325
(lp13326
S'char'
p13327
a(lp13328
I-1
aaNtp13329
(S'data'
p13330
(lp13331
S'char'
p13332
ag19
aNtp13333
tp13334
tp13335
sS'DAQmxGetPersistedChanAllowInteractiveEditing'
p13336
((lp13337
S'int32'
p13338
ag11
a((S'channel'
p13339
(lp13340
S'char'
p13341
a(lp13342
I-1
aaNtp13343
(S'data'
p13344
(lp13345
S'bool32'
p13346
ag19
aNtp13347
tp13348
tp13349
sS'DAQmxResetAIThrmstrR1'
p13350
((lp13351
S'int32'
p13352
ag11
a((S'taskHandle'
p13353
(lp13354
S'TaskHandle'
p13355
aNtp13356
(S'channel'
p13357
(lp13358
S'char'
p13359
a(lp13360
I-1
aaNtp13361
tp13362
tp13363
sS'DAQmxGetAODataXferReqCond'
p13364
((lp13365
S'int32'
p13366
ag11
a((S'taskHandle'
p13367
(lp13368
S'TaskHandle'
p13369
aNtp13370
(S'channel'
p13371
(lp13372
S'char'
p13373
a(lp13374
I-1
aaNtp13375
(S'data'
p13376
(lp13377
S'int32'
p13378
ag19
aNtp13379
tp13380
tp13381
sS'DAQmxResetDODataXferReqCond'
p13382
((lp13383
S'int32'
p13384
ag11
a((S'taskHandle'
p13385
(lp13386
S'TaskHandle'
p13387
aNtp13388
(S'channel'
p13389
(lp13390
S'char'
p13391
a(lp13392
I-1
aaNtp13393
tp13394
tp13395
sS'DAQmxResetAIEnhancedAliasRejectionEnable'
p13396
((lp13397
S'int32'
p13398
ag11
a((S'taskHandle'
p13399
(lp13400
S'TaskHandle'
p13401
aNtp13402
(S'channel'
p13403
(lp13404
S'char'
p13405
a(lp13406
I-1
aaNtp13407
tp13408
tp13409
sS'DAQmxResetCITwoEdgeSepSecondTerm'
p13410
((lp13411
S'int32'
p13412
ag11
a((S'taskHandle'
p13413
(lp13414
S'TaskHandle'
p13415
aNtp13416
(S'channel'
p13417
(lp13418
S'char'
p13419
a(lp13420
I-1
aaNtp13421
tp13422
tp13423
sS'DAQmxSetScaleLinSlope'
p13424
((lp13425
S'int32'
p13426
ag11
a((S'scaleName'
p13427
(lp13428
S'char'
p13429
a(lp13430
I-1
aaNtp13431
(S'data'
p13432
(lp13433
S'float64'
p13434
aNtp13435
tp13436
tp13437
sS'DAQmxResetExportedAdvCmpltEventPulseWidth'
p13438
((lp13439
S'int32'
p13440
ag11
a((S'taskHandle'
p13441
(lp13442
S'TaskHandle'
p13443
aNtp13444
tp13445
tp13446
sS'DAQmxGetSampClkTimebaseSrc'
p13447
((lp13448
S'int32'
p13449
ag11
a((S'taskHandle'
p13450
(lp13451
S'TaskHandle'
p13452
aNtp13453
(S'data'
p13454
(lp13455
S'char'
p13456
ag19
aNtp13457
(S'bufferSize'
p13458
(lp13459
S'uInt32'
p13460
aNtp13461
tp13462
tp13463
sS'DAQmxGetBufInputOnbrdBufSize'
p13464
((lp13465
S'int32'
p13466
ag11
a((S'taskHandle'
p13467
(lp13468
S'TaskHandle'
p13469
aNtp13470
(S'data'
p13471
(lp13472
S'uInt32'
p13473
ag19
aNtp13474
tp13475
tp13476
sS'DAQmxReadBinaryI32'
p13477
((lp13478
S'int32'
p13479
ag11
a((S'taskHandle'
p13480
(lp13481
S'TaskHandle'
p13482
aNtp13483
(S'numSampsPerChan'
p13484
(lp13485
S'int32'
p13486
aNtp13487
(S'timeout'
p13488
(lp13489
S'float64'
p13490
aNtp13491
(S'fillMode'
p13492
(lp13493
S'bool32'
p13494
aNtp13495
(S'readArray'
p13496
(lp13497
S'int32'
p13498
a(lp13499
I-1
aaNtp13500
(S'arraySizeInSamps'
p13501
(lp13502
S'uInt32'
p13503
aNtp13504
(S'sampsPerChanRead'
p13505
(lp13506
S'int32'
p13507
ag19
aNtp13508
(S'reserved'
p13509
(lp13510
S'bool32'
p13511
ag19
aNtp13512
tp13513
tp13514
sS'DAQmxSetOnDemandSimultaneousAOEnable'
p13515
((lp13516
S'int32'
p13517
ag11
a((S'taskHandle'
p13518
(lp13519
S'TaskHandle'
p13520
aNtp13521
(S'data'
p13522
(lp13523
S'bool32'
p13524
aNtp13525
tp13526
tp13527
sS'DAQmxResetAnlgWinStartTrigWhen'
p13528
((lp13529
S'int32'
p13530
ag11
a((S'taskHandle'
p13531
(lp13532
S'TaskHandle'
p13533
aNtp13534
tp13535
tp13536
sS'DAQmxCreateAIRTDChan'
p13537
((lp13538
S'int32'
p13539
ag11
a((S'taskHandle'
p13540
(lp13541
S'TaskHandle'
p13542
aNtp13543
(S'physicalChannel'
p13544
(lp13545
S'char'
p13546
a(lp13547
I-1
aaNtp13548
(S'nameToAssignToChannel'
p13549
(lp13550
S'char'
p13551
a(lp13552
I-1
aaNtp13553
(S'minVal'
p13554
(lp13555
S'float64'
p13556
aNtp13557
(S'maxVal'
p13558
(lp13559
S'float64'
p13560
aNtp13561
(S'units'
p13562
(lp13563
S'int32'
p13564
aNtp13565
(S'rtdType'
p13566
(lp13567
S'int32'
p13568
aNtp13569
(S'resistanceConfig'
p13570
(lp13571
S'int32'
p13572
aNtp13573
(S'currentExcitSource'
p13574
(lp13575
S'int32'
p13576
aNtp13577
(S'currentExcitVal'
p13578
(lp13579
S'float64'
p13580
aNtp13581
(S'r0'
p13582
(lp13583
S'float64'
p13584
aNtp13585
tp13586
tp13587
sS'DAQmxGetWatchdogTimeout'
p13588
((lp13589
S'int32'
p13590
ag11
a((S'taskHandle'
p13591
(lp13592
S'TaskHandle'
p13593
aNtp13594
(S'data'
p13595
(lp13596
S'float64'
p13597
ag19
aNtp13598
tp13599
tp13600
sS'DAQmxResetDOInvertLines'
p13601
((lp13602
S'int32'
p13603
ag11
a((S'taskHandle'
p13604
(lp13605
S'TaskHandle'
p13606
aNtp13607
(S'channel'
p13608
(lp13609
S'char'
p13610
a(lp13611
I-1
aaNtp13612
tp13613
tp13614
sS'DAQmxSetCIFreqStartingEdge'
p13615
((lp13616
S'int32'
p13617
ag11
a((S'taskHandle'
p13618
(lp13619
S'TaskHandle'
p13620
aNtp13621
(S'channel'
p13622
(lp13623
S'char'
p13624
a(lp13625
I-1
aaNtp13626
(S'data'
p13627
(lp13628
S'int32'
p13629
aNtp13630
tp13631
tp13632
sS'DAQmxResetCIEncoderAInputDigSyncEnable'
p13633
((lp13634
S'int32'
p13635
ag11
a((S'taskHandle'
p13636
(lp13637
S'TaskHandle'
p13638
aNtp13639
(S'channel'
p13640
(lp13641
S'char'
p13642
a(lp13643
I-1
aaNtp13644
tp13645
tp13646
sS'DAQmxSetAIChanCalTablePreScaledVals'
p13647
((lp13648
S'int32'
p13649
ag11
a((S'taskHandle'
p13650
(lp13651
S'TaskHandle'
p13652
aNtp13653
(S'channel'
p13654
(lp13655
S'char'
p13656
a(lp13657
I-1
aaNtp13658
(S'data'
p13659
(lp13660
S'float64'
p13661
ag19
aNtp13662
(S'arraySizeInSamples'
p13663
(lp13664
S'uInt32'
p13665
aNtp13666
tp13667
tp13668
sS'DAQmxResetAIInputSrc'
p13669
((lp13670
S'int32'
p13671
ag11
a((S'taskHandle'
p13672
(lp13673
S'TaskHandle'
p13674
aNtp13675
(S'channel'
p13676
(lp13677
S'char'
p13678
a(lp13679
I-1
aaNtp13680
tp13681
tp13682
sS'DAQmxResetCIEncoderZInputDigSyncEnable'
p13683
((lp13684
S'int32'
p13685
ag11
a((S'taskHandle'
p13686
(lp13687
S'TaskHandle'
p13688
aNtp13689
(S'channel'
p13690
(lp13691
S'char'
p13692
a(lp13693
I-1
aaNtp13694
tp13695
tp13696
sS'DAQmxResetCIEncoderZInputDigFltrEnable'
p13697
((lp13698
S'int32'
p13699
ag11
a((S'taskHandle'
p13700
(lp13701
S'TaskHandle'
p13702
aNtp13703
(S'channel'
p13704
(lp13705
S'char'
p13706
a(lp13707
I-1
aaNtp13708
tp13709
tp13710
sS'DAQmxResetDOOutputDriveType'
p13711
((lp13712
S'int32'
p13713
ag11
a((S'taskHandle'
p13714
(lp13715
S'TaskHandle'
p13716
aNtp13717
(S'channel'
p13718
(lp13719
S'char'
p13720
a(lp13721
I-1
aaNtp13722
tp13723
tp13724
sS'DAQmxSetAnlgWinStartTrigBtm'
p13725
((lp13726
S'int32'
p13727
ag11
a((S'taskHandle'
p13728
(lp13729
S'TaskHandle'
p13730
aNtp13731
(S'data'
p13732
(lp13733
S'float64'
p13734
aNtp13735
tp13736
tp13737
sS'DAQmxGetDevIsSimulated'
p13738
((lp13739
S'int32'
p13740
ag11
a((S'device'
p13741
(lp13742
S'char'
p13743
a(lp13744
I-1
aaNtp13745
(S'data'
p13746
(lp13747
S'bool32'
p13748
ag19
aNtp13749
tp13750
tp13751
sS'DAQmxResetAOCurrentUnits'
p13752
((lp13753
S'int32'
p13754
ag11
a((S'taskHandle'
p13755
(lp13756
S'TaskHandle'
p13757
aNtp13758
(S'channel'
p13759
(lp13760
S'char'
p13761
a(lp13762
I-1
aaNtp13763
tp13764
tp13765
sS'DAQmxWriteDigitalU16'
p13766
((lp13767
S'int32'
p13768
ag11
a((S'taskHandle'
p13769
(lp13770
S'TaskHandle'
p13771
aNtp13772
(S'numSampsPerChan'
p13773
(lp13774
S'int32'
p13775
aNtp13776
(S'autoStart'
p13777
(lp13778
S'bool32'
p13779
aNtp13780
(S'timeout'
p13781
(lp13782
S'float64'
p13783
aNtp13784
(S'dataLayout'
p13785
(lp13786
S'bool32'
p13787
aNtp13788
(S'writeArray'
p13789
(lp13790
S'uInt16'
p13791
a(lp13792
I-1
aaNtp13793
(S'sampsPerChanWritten'
p13794
(lp13795
S'int32'
p13796
ag19
aNtp13797
(S'reserved'
p13798
(lp13799
S'bool32'
p13800
ag19
aNtp13801
tp13802
tp13803
sS'DAQmxSetMasterTimebaseSrc'
p13804
((lp13805
S'int32'
p13806
ag11
a((S'taskHandle'
p13807
(lp13808
S'TaskHandle'
p13809
aNtp13810
(S'data'
p13811
(lp13812
S'char'
p13813
ag19
aNtp13814
tp13815
tp13816
sS'DAQmxResetExportedCtrOutEventOutputBehavior'
p13817
((lp13818
S'int32'
p13819
ag11
a((S'taskHandle'
p13820
(lp13821
S'TaskHandle'
p13822
aNtp13823
tp13824
tp13825
sS'DAQmxResetAIExcitVal'
p13826
((lp13827
S'int32'
p13828
ag11
a((S'taskHandle'
p13829
(lp13830
S'TaskHandle'
p13831
aNtp13832
(S'channel'
p13833
(lp13834
S'char'
p13835
a(lp13836
I-1
aaNtp13837
tp13838
tp13839
sS'DAQmxGetSampClkSrc'
p13840
((lp13841
S'int32'
p13842
ag11
a((S'taskHandle'
p13843
(lp13844
S'TaskHandle'
p13845
aNtp13846
(S'data'
p13847
(lp13848
S'char'
p13849
ag19
aNtp13850
(S'bufferSize'
p13851
(lp13852
S'uInt32'
p13853
aNtp13854
tp13855
tp13856
sS'DAQmxSetScaleLinYIntercept'
p13857
((lp13858
S'int32'
p13859
ag11
a((S'scaleName'
p13860
(lp13861
S'char'
p13862
a(lp13863
I-1
aaNtp13864
(S'data'
p13865
(lp13866
S'float64'
p13867
aNtp13868
tp13869
tp13870
sS'DAQmxCreateTEDSAIVoltageChan'
p13871
((lp13872
S'int32'
p13873
ag11
a((S'taskHandle'
p13874
(lp13875
S'TaskHandle'
p13876
aNtp13877
(S'physicalChannel'
p13878
(lp13879
S'char'
p13880
a(lp13881
I-1
aaNtp13882
(S'nameToAssignToChannel'
p13883
(lp13884
S'char'
p13885
a(lp13886
I-1
aaNtp13887
(S'terminalConfig'
p13888
(lp13889
S'int32'
p13890
aNtp13891
(S'minVal'
p13892
(lp13893
S'float64'
p13894
aNtp13895
(S'maxVal'
p13896
(lp13897
S'float64'
p13898
aNtp13899
(S'units'
p13900
(lp13901
S'int32'
p13902
aNtp13903
(S'customScaleName'
p13904
(lp13905
S'char'
p13906
a(lp13907
I-1
aaNtp13908
tp13909
tp13910
sS'DAQmxResetDigEdgeStartTrigDigFltrTimebaseSrc'
p13911
((lp13912
S'int32'
p13913
ag11
a((S'taskHandle'
p13914
(lp13915
S'TaskHandle'
p13916
aNtp13917
tp13918
tp13919
sS'DAQmxSetAOLoadImpedance'
p13920
((lp13921
S'int32'
p13922
ag11
a((S'taskHandle'
p13923
(lp13924
S'TaskHandle'
p13925
aNtp13926
(S'channel'
p13927
(lp13928
S'char'
p13929
a(lp13930
I-1
aaNtp13931
(S'data'
p13932
(lp13933
S'float64'
p13934
aNtp13935
tp13936
tp13937
sS'DAQmxResetExportedAdvCmpltEventOutputTerm'
p13938
((lp13939
S'int32'
p13940
ag11
a((S'taskHandle'
p13941
(lp13942
S'TaskHandle'
p13943
aNtp13944
tp13945
tp13946
sS'DAQmxCreateTEDSAIPosRVDTChan'
p13947
((lp13948
S'int32'
p13949
ag11
a((S'taskHandle'
p13950
(lp13951
S'TaskHandle'
p13952
aNtp13953
(S'physicalChannel'
p13954
(lp13955
S'char'
p13956
a(lp13957
I-1
aaNtp13958
(S'nameToAssignToChannel'
p13959
(lp13960
S'char'
p13961
a(lp13962
I-1
aaNtp13963
(S'minVal'
p13964
(lp13965
S'float64'
p13966
aNtp13967
(S'maxVal'
p13968
(lp13969
S'float64'
p13970
aNtp13971
(S'units'
p13972
(lp13973
S'int32'
p13974
aNtp13975
(S'voltageExcitSource'
p13976
(lp13977
S'int32'
p13978
aNtp13979
(S'voltageExcitVal'
p13980
(lp13981
S'float64'
p13982
aNtp13983
(S'voltageExcitFreq'
p13984
(lp13985
S'float64'
p13986
aNtp13987
(S'ACExcitWireMode'
p13988
(lp13989
S'int32'
p13990
aNtp13991
(S'customScaleName'
p13992
(lp13993
S'char'
p13994
a(lp13995
I-1
aaNtp13996
tp13997
tp13998
sS'DAQmxGetCIPulseWidthDigSyncEnable'
p13999
((lp14000
S'int32'
p14001
ag11
a((S'taskHandle'
p14002
(lp14003
S'TaskHandle'
p14004
aNtp14005
(S'channel'
p14006
(lp14007
S'char'
p14008
a(lp14009
I-1
aaNtp14010
(S'data'
p14011
(lp14012
S'bool32'
p14013
ag19
aNtp14014
tp14015
tp14016
sS'DAQmxGetCOOutputState'
p14017
((lp14018
S'int32'
p14019
ag11
a((S'taskHandle'
p14020
(lp14021
S'TaskHandle'
p14022
aNtp14023
(S'channel'
p14024
(lp14025
S'char'
p14026
a(lp14027
I-1
aaNtp14028
(S'data'
p14029
(lp14030
S'int32'
p14031
ag19
aNtp14032
tp14033
tp14034
sS'DAQmxGetAILowpassSwitchCapClkSrc'
p14035
((lp14036
S'int32'
p14037
ag11
a((S'taskHandle'
p14038
(lp14039
S'TaskHandle'
p14040
aNtp14041
(S'channel'
p14042
(lp14043
S'char'
p14044
a(lp14045
I-1
aaNtp14046
(S'data'
p14047
(lp14048
S'int32'
p14049
ag19
aNtp14050
tp14051
tp14052
sS'DAQmxSetExportedAdvTrigOutputTerm'
p14053
((lp14054
S'int32'
p14055
ag11
a((S'taskHandle'
p14056
(lp14057
S'TaskHandle'
p14058
aNtp14059
(S'data'
p14060
(lp14061
S'char'
p14062
ag19
aNtp14063
tp14064
tp14065
sS'DAQmxSetAnlgWinStartTrigCoupling'
p14066
((lp14067
S'int32'
p14068
ag11
a((S'taskHandle'
p14069
(lp14070
S'TaskHandle'
p14071
aNtp14072
(S'data'
p14073
(lp14074
S'int32'
p14075
aNtp14076
tp14077
tp14078
sS'DAQmxGetDINumLines'
p14079
((lp14080
S'int32'
p14081
ag11
a((S'taskHandle'
p14082
(lp14083
S'TaskHandle'
p14084
aNtp14085
(S'channel'
p14086
(lp14087
S'char'
p14088
a(lp14089
I-1
aaNtp14090
(S'data'
p14091
(lp14092
S'uInt32'
p14093
ag19
aNtp14094
tp14095
tp14096
sS'DAQmxResetDIDigFltrMinPulseWidth'
p14097
((lp14098
S'int32'
p14099
ag11
a((S'taskHandle'
p14100
(lp14101
S'TaskHandle'
p14102
aNtp14103
(S'channel'
p14104
(lp14105
S'char'
p14106
a(lp14107
I-1
aaNtp14108
tp14109
tp14110
sS'DAQmxGetAIExcitDCorAC'
p14111
((lp14112
S'int32'
p14113
ag11
a((S'taskHandle'
p14114
(lp14115
S'TaskHandle'
p14116
aNtp14117
(S'channel'
p14118
(lp14119
S'char'
p14120
a(lp14121
I-1
aaNtp14122
(S'data'
p14123
(lp14124
S'int32'
p14125
ag19
aNtp14126
tp14127
tp14128
sS'DAQmxGetExportedAdvCmpltEventOutputTerm'
p14129
((lp14130
S'int32'
p14131
ag11
a((S'taskHandle'
p14132
(lp14133
S'TaskHandle'
p14134
aNtp14135
(S'data'
p14136
(lp14137
S'char'
p14138
ag19
aNtp14139
(S'bufferSize'
p14140
(lp14141
S'uInt32'
p14142
aNtp14143
tp14144
tp14145
sS'DAQmxResetStartTrigDelayUnits'
p14146
((lp14147
S'int32'
p14148
ag11
a((S'taskHandle'
p14149
(lp14150
S'TaskHandle'
p14151
aNtp14152
tp14153
tp14154
sS'DAQmxResetDigEdgeStartTrigDigFltrMinPulseWidth'
p14155
((lp14156
S'int32'
p14157
ag11
a((S'taskHandle'
p14158
(lp14159
S'TaskHandle'
p14160
aNtp14161
tp14162
tp14163
sS'DAQmxConnectTerms'
p14164
((lp14165
S'int32'
p14166
ag11
a((S'sourceTerminal'
p14167
(lp14168
S'char'
p14169
a(lp14170
I-1
aaNtp14171
(S'destinationTerminal'
p14172
(lp14173
S'char'
p14174
a(lp14175
I-1
aaNtp14176
(S'signalModifiers'
p14177
(lp14178
S'int32'
p14179
aNtp14180
tp14181
tp14182
sS'DAQmxGetExportedAdvTrigPulsePolarity'
p14183
((lp14184
S'int32'
p14185
ag11
a((S'taskHandle'
p14186
(lp14187
S'TaskHandle'
p14188
aNtp14189
(S'data'
p14190
(lp14191
S'int32'
p14192
ag19
aNtp14193
tp14194
tp14195
sS'DAQmxSetDigEdgeArmStartTrigSrc'
p14196
((lp14197
S'int32'
p14198
ag11
a((S'taskHandle'
p14199
(lp14200
S'TaskHandle'
p14201
aNtp14202
(S'data'
p14203
(lp14204
S'char'
p14205
ag19
aNtp14206
tp14207
tp14208
sS'DAQmxGetCILinEncoderDistPerPulse'
p14209
((lp14210
S'int32'
p14211
ag11
a((S'taskHandle'
p14212
(lp14213
S'TaskHandle'
p14214
aNtp14215
(S'channel'
p14216
(lp14217
S'char'
p14218
a(lp14219
I-1
aaNtp14220
(S'data'
p14221
(lp14222
S'float64'
p14223
ag19
aNtp14224
tp14225
tp14226
sS'DAQmxGetAIChanCalVerifAcqVals'
p14227
((lp14228
S'int32'
p14229
ag11
a((S'taskHandle'
p14230
(lp14231
S'TaskHandle'
p14232
aNtp14233
(S'channel'
p14234
(lp14235
S'char'
p14236
a(lp14237
I-1
aaNtp14238
(S'data'
p14239
(lp14240
S'float64'
p14241
ag19
aNtp14242
(S'arraySizeInSamples'
p14243
(lp14244
S'uInt32'
p14245
aNtp14246
tp14247
tp14248
sS'DAQmxSetAnlgLvlPauseTrigHyst'
p14249
((lp14250
S'int32'
p14251
ag11
a((S'taskHandle'
p14252
(lp14253
S'TaskHandle'
p14254
aNtp14255
(S'data'
p14256
(lp14257
S'float64'
p14258
aNtp14259
tp14260
tp14261
sS'DAQmxGetSwitchDevNumColumns'
p14262
((lp14263
S'int32'
p14264
ag11
a((S'deviceName'
p14265
(lp14266
S'char'
p14267
a(lp14268
I-1
aaNtp14269
(S'data'
p14270
(lp14271
S'uInt32'
p14272
ag19
aNtp14273
tp14274
tp14275
sS'DAQmxSetCITwoEdgeSepFirstDigSyncEnable'
p14276
((lp14277
S'int32'
p14278
ag11
a((S'taskHandle'
p14279
(lp14280
S'TaskHandle'
p14281
aNtp14282
(S'channel'
p14283
(lp14284
S'char'
p14285
a(lp14286
I-1
aaNtp14287
(S'data'
p14288
(lp14289
S'bool32'
p14290
aNtp14291
tp14292
tp14293
sS'DAQmxSetAIAutoZeroMode'
p14294
((lp14295
S'int32'
p14296
ag11
a((S'taskHandle'
p14297
(lp14298
S'TaskHandle'
p14299
aNtp14300
(S'channel'
p14301
(lp14302
S'char'
p14303
a(lp14304
I-1
aaNtp14305
(S'data'
p14306
(lp14307
S'int32'
p14308
aNtp14309
tp14310
tp14311
sS'DAQmxSetAIFreqThreshVoltage'
p14312
((lp14313
S'int32'
p14314
ag11
a((S'taskHandle'
p14315
(lp14316
S'TaskHandle'
p14317
aNtp14318
(S'channel'
p14319
(lp14320
S'char'
p14321
a(lp14322
I-1
aaNtp14323
(S'data'
p14324
(lp14325
S'float64'
p14326
aNtp14327
tp14328
tp14329
sS'DAQmxGetAnlgWinPauseTrigBtm'
p14330
((lp14331
S'int32'
p14332
ag11
a((S'taskHandle'
p14333
(lp14334
S'TaskHandle'
p14335
aNtp14336
(S'data'
p14337
(lp14338
S'float64'
p14339
ag19
aNtp14340
tp14341
tp14342
sS'DAQmxResetDigEdgeAdvTrigDigFltrEnable'
p14343
((lp14344
S'int32'
p14345
ag11
a((S'taskHandle'
p14346
(lp14347
S'TaskHandle'
p14348
aNtp14349
tp14350
tp14351
sS'DAQmxSetExportedAdvCmpltEventPulsePolarity'
p14352
((lp14353
S'int32'
p14354
ag11
a((S'taskHandle'
p14355
(lp14356
S'TaskHandle'
p14357
aNtp14358
(S'data'
p14359
(lp14360
S'int32'
p14361
aNtp14362
tp14363
tp14364
sS'DAQmxGetSelfCalLastDateAndTime'
p14365
((lp14366
S'int32'
p14367
ag11
a((S'deviceName'
p14368
(lp14369
S'char'
p14370
a(lp14371
I-1
aaNtp14372
(S'year'
p14373
(lp14374
S'uInt32'
p14375
ag19
aNtp14376
(S'month'
p14377
(lp14378
S'uInt32'
p14379
ag19
aNtp14380
(S'day'
p14381
(lp14382
S'uInt32'
p14383
ag19
aNtp14384
(S'hour'
p14385
(lp14386
S'uInt32'
p14387
ag19
aNtp14388
(S'minute'
p14389
(lp14390
S'uInt32'
p14391
ag19
aNtp14392
tp14393
tp14394
sS'DAQmxGetCIFreqMeasMeth'
p14395
((lp14396
S'int32'
p14397
ag11
a((S'taskHandle'
p14398
(lp14399
S'TaskHandle'
p14400
aNtp14401
(S'channel'
p14402
(lp14403
S'char'
p14404
a(lp14405
I-1
aaNtp14406
(S'data'
p14407
(lp14408
S'int32'
p14409
ag19
aNtp14410
tp14411
tp14412
sS'DAQmxSetAIACExcitSyncEnable'
p14413
((lp14414
S'int32'
p14415
ag11
a((S'taskHandle'
p14416
(lp14417
S'TaskHandle'
p14418
aNtp14419
(S'channel'
p14420
(lp14421
S'char'
p14422
a(lp14423
I-1
aaNtp14424
(S'data'
p14425
(lp14426
S'bool32'
p14427
aNtp14428
tp14429
tp14430
sS'DAQmxGetCIOutputState'
p14431
((lp14432
S'int32'
p14433
ag11
a((S'taskHandle'
p14434
(lp14435
S'TaskHandle'
p14436
aNtp14437
(S'channel'
p14438
(lp14439
S'char'
p14440
a(lp14441
I-1
aaNtp14442
(S'data'
p14443
(lp14444
S'int32'
p14445
ag19
aNtp14446
tp14447
tp14448
sS'DAQmxSetSwitchScanBreakMode'
p14449
((lp14450
S'int32'
p14451
ag11
a((S'taskHandle'
p14452
(lp14453
S'TaskHandle'
p14454
aNtp14455
(S'data'
p14456
(lp14457
S'int32'
p14458
aNtp14459
tp14460
tp14461
sS'DAQmxSetAIAccelUnits'
p14462
((lp14463
S'int32'
p14464
ag11
a((S'taskHandle'
p14465
(lp14466
S'TaskHandle'
p14467
aNtp14468
(S'channel'
p14469
(lp14470
S'char'
p14471
a(lp14472
I-1
aaNtp14473
(S'data'
p14474
(lp14475
S'int32'
p14476
aNtp14477
tp14478
tp14479
sS'DAQmxSetAIChanCalOperatorName'
p14480
((lp14481
S'int32'
p14482
ag11
a((S'taskHandle'
p14483
(lp14484
S'TaskHandle'
p14485
aNtp14486
(S'channel'
p14487
(lp14488
S'char'
p14489
a(lp14490
I-1
aaNtp14491
(S'data'
p14492
(lp14493
S'char'
p14494
ag19
aNtp14495
tp14496
tp14497
sS'DAQmxSetArmStartTrigType'
p14498
((lp14499
S'int32'
p14500
ag11
a((S'taskHandle'
p14501
(lp14502
S'TaskHandle'
p14503
aNtp14504
(S'data'
p14505
(lp14506
S'int32'
p14507
aNtp14508
tp14509
tp14510
sS'DAQmxSetAISoundPressureMaxSoundPressureLvl'
p14511
((lp14512
S'int32'
p14513
ag11
a((S'taskHandle'
p14514
(lp14515
S'TaskHandle'
p14516
aNtp14517
(S'channel'
p14518
(lp14519
S'char'
p14520
a(lp14521
I-1
aaNtp14522
(S'data'
p14523
(lp14524
S'float64'
p14525
aNtp14526
tp14527
tp14528
sS'DAQmxSetDigEdgeWatchdogExpirTrigEdge'
p14529
((lp14530
S'int32'
p14531
ag11
a((S'taskHandle'
p14532
(lp14533
S'TaskHandle'
p14534
aNtp14535
(S'data'
p14536
(lp14537
S'int32'
p14538
aNtp14539
tp14540
tp14541
sS'DAQmxGetAIResolutionUnits'
p14542
((lp14543
S'int32'
p14544
ag11
a((S'taskHandle'
p14545
(lp14546
S'TaskHandle'
p14547
aNtp14548
(S'channel'
p14549
(lp14550
S'char'
p14551
a(lp14552
I-1
aaNtp14553
(S'data'
p14554
(lp14555
S'int32'
p14556
ag19
aNtp14557
tp14558
tp14559
sS'DAQmxSetRealTimeNumOfWarmupIters'
p14560
((lp14561
S'int32'
p14562
ag11
a((S'taskHandle'
p14563
(lp14564
S'TaskHandle'
p14565
aNtp14566
(S'data'
p14567
(lp14568
S'uInt32'
p14569
aNtp14570
tp14571
tp14572
sS'DAQmxGetExportedHshkEventDelay'
p14573
((lp14574
S'int32'
p14575
ag11
a((S'taskHandle'
p14576
(lp14577
S'TaskHandle'
p14578
aNtp14579
(S'data'
p14580
(lp14581
S'float64'
p14582
ag19
aNtp14583
tp14584
tp14585
sS'DAQmxCreateAIThrmcplChan'
p14586
((lp14587
S'int32'
p14588
ag11
a((S'taskHandle'
p14589
(lp14590
S'TaskHandle'
p14591
aNtp14592
(S'physicalChannel'
p14593
(lp14594
S'char'
p14595
a(lp14596
I-1
aaNtp14597
(S'nameToAssignToChannel'
p14598
(lp14599
S'char'
p14600
a(lp14601
I-1
aaNtp14602
(S'minVal'
p14603
(lp14604
S'float64'
p14605
aNtp14606
(S'maxVal'
p14607
(lp14608
S'float64'
p14609
aNtp14610
(S'units'
p14611
(lp14612
S'int32'
p14613
aNtp14614
(S'thermocoupleType'
p14615
(lp14616
S'int32'
p14617
aNtp14618
(S'cjcSource'
p14619
(lp14620
S'int32'
p14621
aNtp14622
(S'cjcVal'
p14623
(lp14624
S'float64'
p14625
aNtp14626
(S'cjcChannel'
p14627
(lp14628
S'char'
p14629
a(lp14630
I-1
aaNtp14631
tp14632
tp14633
sS'DAQmxResetAOGain'
p14634
((lp14635
S'int32'
p14636
ag11
a((S'taskHandle'
p14637
(lp14638
S'TaskHandle'
p14639
aNtp14640
(S'channel'
p14641
(lp14642
S'char'
p14643
a(lp14644
I-1
aaNtp14645
tp14646
tp14647
sS'DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseSrc'
p14648
((lp14649
S'int32'
p14650
ag11
a((S'taskHandle'
p14651
(lp14652
S'TaskHandle'
p14653
aNtp14654
tp14655
tp14656
sS'DAQmxSetCICtrTimebaseRate'
p14657
((lp14658
S'int32'
p14659
ag11
a((S'taskHandle'
p14660
(lp14661
S'TaskHandle'
p14662
aNtp14663
(S'channel'
p14664
(lp14665
S'char'
p14666
a(lp14667
I-1
aaNtp14668
(S'data'
p14669
(lp14670
S'float64'
p14671
aNtp14672
tp14673
tp14674
sS'DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth'
p14675
((lp14676
S'int32'
p14677
ag11
a((S'taskHandle'
p14678
(lp14679
S'TaskHandle'
p14680
aNtp14681
(S'channel'
p14682
(lp14683
S'char'
p14684
a(lp14685
I-1
aaNtp14686
tp14687
tp14688
sS'DAQmxGetSwitchChanWireMode'
p14689
((lp14690
S'int32'
p14691
ag11
a((S'switchChannelName'
p14692
(lp14693
S'char'
p14694
a(lp14695
I-1
aaNtp14696
(S'data'
p14697
(lp14698
S'uInt32'
p14699
ag19
aNtp14700
tp14701
tp14702
sS'DAQmxSetAnlgEdgeStartTrigCoupling'
p14703
((lp14704
S'int32'
p14705
ag11
a((S'taskHandle'
p14706
(lp14707
S'TaskHandle'
p14708
aNtp14709
(S'data'
p14710
(lp14711
S'int32'
p14712
aNtp14713
tp14714
tp14715
sS'DAQmxCreateTask'
p14716
((lp14717
S'int32'
p14718
ag11
a((S'taskName'
p14719
(lp14720
S'char'
p14721
a(lp14722
I-1
aaNtp14723
(S'taskHandle'
p14724
(lp14725
S'TaskHandle'
p14726
ag19
aNtp14727
tp14728
tp14729
sS'DAQmxCreateCIPulseWidthChan'
p14730
((lp14731
S'int32'
p14732
ag11
a((S'taskHandle'
p14733
(lp14734
S'TaskHandle'
p14735
aNtp14736
(S'counter'
p14737
(lp14738
S'char'
p14739
a(lp14740
I-1
aaNtp14741
(S'nameToAssignToChannel'
p14742
(lp14743
S'char'
p14744
a(lp14745
I-1
aaNtp14746
(S'minVal'
p14747
(lp14748
S'float64'
p14749
aNtp14750
(S'maxVal'
p14751
(lp14752
S'float64'
p14753
aNtp14754
(S'units'
p14755
(lp14756
S'int32'
p14757
aNtp14758
(S'startingEdge'
p14759
(lp14760
S'int32'
p14761
aNtp14762
(S'customScaleName'
p14763
(lp14764
S'char'
p14765
a(lp14766
I-1
aaNtp14767
tp14768
tp14769
sS'DAQmxGetAOReglitchEnable'
p14770
((lp14771
S'int32'
p14772
ag11
a((S'taskHandle'
p14773
(lp14774
S'TaskHandle'
p14775
aNtp14776
(S'channel'
p14777
(lp14778
S'char'
p14779
a(lp14780
I-1
aaNtp14781
(S'data'
p14782
(lp14783
S'bool32'
p14784
ag19
aNtp14785
tp14786
tp14787
sS'DAQmxReadDigitalScalarU32'
p14788
((lp14789
S'int32'
p14790
ag11
a((S'taskHandle'
p14791
(lp14792
S'TaskHandle'
p14793
aNtp14794
(S'timeout'
p14795
(lp14796
S'float64'
p14797
aNtp14798
(S'value'
p14799
(lp14800
S'uInt32'
p14801
ag19
aNtp14802
(S'reserved'
p14803
(lp14804
S'bool32'
p14805
ag19
aNtp14806
tp14807
tp14808
sS'DAQmxGetSwitchChanMaxDCCarryCurrent'
p14809
((lp14810
S'int32'
p14811
ag11
a((S'switchChannelName'
p14812
(lp14813
S'char'
p14814
a(lp14815
I-1
aaNtp14816
(S'data'
p14817
(lp14818
S'float64'
p14819
ag19
aNtp14820
tp14821
tp14822
sS'DAQmxGetDigEdgeArmStartTrigEdge'
p14823
((lp14824
S'int32'
p14825
ag11
a((S'taskHandle'
p14826
(lp14827
S'TaskHandle'
p14828
aNtp14829
(S'data'
p14830
(lp14831
S'int32'
p14832
ag19
aNtp14833
tp14834
tp14835
sS'DAQmxGetAnlgWinPauseTrigWhen'
p14836
((lp14837
S'int32'
p14838
ag11
a((S'taskHandle'
p14839
(lp14840
S'TaskHandle'
p14841
aNtp14842
(S'data'
p14843
(lp14844
S'int32'
p14845
ag19
aNtp14846
tp14847
tp14848
sS'DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc'
p14849
((lp14850
S'int32'
p14851
ag11
a((S'taskHandle'
p14852
(lp14853
S'TaskHandle'
p14854
aNtp14855
(S'channel'
p14856
(lp14857
S'char'
p14858
a(lp14859
I-1
aaNtp14860
tp14861
tp14862
sS'DAQmxGetSwitchScanAttribute'
p14863
((lp14864
S'int32'
p14865
ag2542
a((S'taskHandle'
p14866
(lp14867
S'TaskHandle'
p14868
aNtp14869
(S'attribute'
p14870
(lp14871
S'int32'
p14872
aNtp14873
(S'value'
p14874
(lp14875
S'void'
p14876
ag19
aNtp14877
tp14878
tp14879
sS'DAQmxSetAIBridgeInitialVoltage'
p14880
((lp14881
S'int32'
p14882
ag11
a((S'taskHandle'
p14883
(lp14884
S'TaskHandle'
p14885
aNtp14886
(S'channel'
p14887
(lp14888
S'char'
p14889
a(lp14890
I-1
aaNtp14891
(S'data'
p14892
(lp14893
S'float64'
p14894
aNtp14895
tp14896
tp14897
sS'DAQmxResetCOPulseFreqUnits'
p14898
((lp14899
S'int32'
p14900
ag11
a((S'taskHandle'
p14901
(lp14902
S'TaskHandle'
p14903
aNtp14904
(S'channel'
p14905
(lp14906
S'char'
p14907
a(lp14908
I-1
aaNtp14909
tp14910
tp14911
sS'DAQmxResetCIEncoderAInputDigFltrTimebaseSrc'
p14912
((lp14913
S'int32'
p14914
ag11
a((S'taskHandle'
p14915
(lp14916
S'TaskHandle'
p14917
aNtp14918
(S'channel'
p14919
(lp14920
S'char'
p14921
a(lp14922
I-1
aaNtp14923
tp14924
tp14925
sS'DAQmxSetCIGPSSyncSrc'
p14926
((lp14927
S'int32'
p14928
ag11
a((S'taskHandle'
p14929
(lp14930
S'TaskHandle'
p14931
aNtp14932
(S'channel'
p14933
(lp14934
S'char'
p14935
a(lp14936
I-1
aaNtp14937
(S'data'
p14938
(lp14939
S'char'
p14940
ag19
aNtp14941
tp14942
tp14943
sS'DAQmxResetDigEdgeStartTrigSrc'
p14944
((lp14945
S'int32'
p14946
ag11
a((S'taskHandle'
p14947
(lp14948
S'TaskHandle'
p14949
aNtp14950
tp14951
tp14952
sS'DAQmxCreateAIPosLVDTChan'
p14953
((lp14954
S'int32'
p14955
ag11
a((S'taskHandle'
p14956
(lp14957
S'TaskHandle'
p14958
aNtp14959
(S'physicalChannel'
p14960
(lp14961
S'char'
p14962
a(lp14963
I-1
aaNtp14964
(S'nameToAssignToChannel'
p14965
(lp14966
S'char'
p14967
a(lp14968
I-1
aaNtp14969
(S'minVal'
p14970
(lp14971
S'float64'
p14972
aNtp14973
(S'maxVal'
p14974
(lp14975
S'float64'
p14976
aNtp14977
(S'units'
p14978
(lp14979
S'int32'
p14980
aNtp14981
(S'sensitivity'
p14982
(lp14983
S'float64'
p14984
aNtp14985
(S'sensitivityUnits'
p14986
(lp14987
S'int32'
p14988
aNtp14989
(S'voltageExcitSource'
p14990
(lp14991
S'int32'
p14992
aNtp14993
(S'voltageExcitVal'
p14994
(lp14995
S'float64'
p14996
aNtp14997
(S'voltageExcitFreq'
p14998
(lp14999
S'float64'
p15000
aNtp15001
(S'ACExcitWireMode'
p15002
(lp15003
S'int32'
p15004
aNtp15005
(S'customScaleName'
p15006
(lp15007
S'char'
p15008
a(lp15009
I-1
aaNtp15010
tp15011
tp15012
sS'DAQmxCreateAICurrentChan'
p15013
((lp15014
S'int32'
p15015
ag11
a((S'taskHandle'
p15016
(lp15017
S'TaskHandle'
p15018
aNtp15019
(S'physicalChannel'
p15020
(lp15021
S'char'
p15022
a(lp15023
I-1
aaNtp15024
(S'nameToAssignToChannel'
p15025
(lp15026
S'char'
p15027
a(lp15028
I-1
aaNtp15029
(S'terminalConfig'
p15030
(lp15031
S'int32'
p15032
aNtp15033
(S'minVal'
p15034
(lp15035
S'float64'
p15036
aNtp15037
(S'maxVal'
p15038
(lp15039
S'float64'
p15040
aNtp15041
(S'units'
p15042
(lp15043
S'int32'
p15044
aNtp15045
(S'shuntResistorLoc'
p15046
(lp15047
S'int32'
p15048
aNtp15049
(S'extShuntResistorVal'
p15050
(lp15051
S'float64'
p15052
aNtp15053
(S'customScaleName'
p15054
(lp15055
S'char'
p15056
a(lp15057
I-1
aaNtp15058
tp15059
tp15060
sS'DAQmxGetCISemiPeriodUnits'
p15061
((lp15062
S'int32'
p15063
ag11
a((S'taskHandle'
p15064
(lp15065
S'TaskHandle'
p15066
aNtp15067
(S'channel'
p15068
(lp15069
S'char'
p15070
a(lp15071
I-1
aaNtp15072
(S'data'
p15073
(lp15074
S'int32'
p15075
ag19
aNtp15076
tp15077
tp15078
sS'DAQmxGetCICtrTimebaseDigFltrMinPulseWidth'
p15079
((lp15080
S'int32'
p15081
ag11
a((S'taskHandle'
p15082
(lp15083
S'TaskHandle'
p15084
aNtp15085
(S'channel'
p15086
(lp15087
S'char'
p15088
a(lp15089
I-1
aaNtp15090
(S'data'
p15091
(lp15092
S'float64'
p15093
ag19
aNtp15094
tp15095
tp15096
sS'DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate'
p15097
((lp15098
S'int32'
p15099
ag11
a((S'taskHandle'
p15100
(lp15101
S'TaskHandle'
p15102
aNtp15103
(S'channel'
p15104
(lp15105
S'char'
p15106
a(lp15107
I-1
aaNtp15108
(S'data'
p15109
(lp15110
S'float64'
p15111
aNtp15112
tp15113
tp15114
sS'DAQmxSetup1102Cal'
p15115
((lp15116
S'int32'
p15117
ag11
a((S'calHandle'
p15118
(lp15119
S'uInt32'
p15120
aNtp15121
(S'channelNames'
p15122
(lp15123
S'char'
p15124
a(lp15125
I-1
aaNtp15126
(S'gain'
p15127
(lp15128
S'float64'
p15129
aNtp15130
tp15131
tp15132
sS'DAQmxSetAnlgWinPauseTrigBtm'
p15133
((lp15134
S'int32'
p15135
ag11
a((S'taskHandle'
p15136
(lp15137
S'TaskHandle'
p15138
aNtp15139
(S'data'
p15140
(lp15141
S'float64'
p15142
aNtp15143
tp15144
tp15145
sS'DAQmxGetAISoundPressureMaxSoundPressureLvl'
p15146
((lp15147
S'int32'
p15148
ag11
a((S'taskHandle'
p15149
(lp15150
S'TaskHandle'
p15151
aNtp15152
(S'channel'
p15153
(lp15154
S'char'
p15155
a(lp15156
I-1
aaNtp15157
(S'data'
p15158
(lp15159
S'float64'
p15160
ag19
aNtp15161
tp15162
tp15163
sS'DAQmxSetCIEncoderBInputDigFltrEnable'
p15164
((lp15165
S'int32'
p15166
ag11
a((S'taskHandle'
p15167
(lp15168
S'TaskHandle'
p15169
aNtp15170
(S'channel'
p15171
(lp15172
S'char'
p15173
a(lp15174
I-1
aaNtp15175
(S'data'
p15176
(lp15177
S'bool32'
p15178
aNtp15179
tp15180
tp15181
sS'DAQmxGetCOCtrTimebaseSrc'
p15182
((lp15183
S'int32'
p15184
ag11
a((S'taskHandle'
p15185
(lp15186
S'TaskHandle'
p15187
aNtp15188
(S'channel'
p15189
(lp15190
S'char'
p15191
a(lp15192
I-1
aaNtp15193
(S'data'
p15194
(lp15195
S'char'
p15196
ag19
aNtp15197
(S'bufferSize'
p15198
(lp15199
S'uInt32'
p15200
aNtp15201
tp15202
tp15203
sS'DAQmxSetAICustomScaleName'
p15204
((lp15205
S'int32'
p15206
ag11
a((S'taskHandle'
p15207
(lp15208
S'TaskHandle'
p15209
aNtp15210
(S'channel'
p15211
(lp15212
S'char'
p15213
a(lp15214
I-1
aaNtp15215
(S'data'
p15216
(lp15217
S'char'
p15218
ag19
aNtp15219
tp15220
tp15221
sS'DAQmxSetExportedWatchdogExpiredEventOutputTerm'
p15222
((lp15223
S'int32'
p15224
ag11
a((S'taskHandle'
p15225
(lp15226
S'TaskHandle'
p15227
aNtp15228
(S'data'
p15229
(lp15230
S'char'
p15231
ag19
aNtp15232
tp15233
tp15234
sS'DAQmxResetAODataXferMech'
p15235
((lp15236
S'int32'
p15237
ag11
a((S'taskHandle'
p15238
(lp15239
S'TaskHandle'
p15240
aNtp15241
(S'channel'
p15242
(lp15243
S'char'
p15244
a(lp15245
I-1
aaNtp15246
tp15247
tp15248
sS'DAQmxResetCISemiPeriodUnits'
p15249
((lp15250
S'int32'
p15251
ag11
a((S'taskHandle'
p15252
(lp15253
S'TaskHandle'
p15254
aNtp15255
(S'channel'
p15256
(lp15257
S'char'
p15258
a(lp15259
I-1
aaNtp15260
tp15261
tp15262
sS'DAQmxGetDOInvertLines'
p15263
((lp15264
S'int32'
p15265
ag11
a((S'taskHandle'
p15266
(lp15267
S'TaskHandle'
p15268
aNtp15269
(S'channel'
p15270
(lp15271
S'char'
p15272
a(lp15273
I-1
aaNtp15274
(S'data'
p15275
(lp15276
S'bool32'
p15277
ag19
aNtp15278
tp15279
tp15280
sS'DAQmxGetCOCount'
p15281
((lp15282
S'int32'
p15283
ag11
a((S'taskHandle'
p15284
(lp15285
S'TaskHandle'
p15286
aNtp15287
(S'channel'
p15288
(lp15289
S'char'
p15290
a(lp15291
I-1
aaNtp15292
(S'data'
p15293
(lp15294
S'uInt32'
p15295
ag19
aNtp15296
tp15297
tp15298
sS'DAQmxSetCOPulseLowTime'
p15299
((lp15300
S'int32'
p15301
ag11
a((S'taskHandle'
p15302
(lp15303
S'TaskHandle'
p15304
aNtp15305
(S'channel'
p15306
(lp15307
S'char'
p15308
a(lp15309
I-1
aaNtp15310
(S'data'
p15311
(lp15312
S'float64'
p15313
aNtp15314
tp15315
tp15316
sS'DAQmxGetAIThrmcplCJCVal'
p15317
((lp15318
S'int32'
p15319
ag11
a((S'taskHandle'
p15320
(lp15321
S'TaskHandle'
p15322
aNtp15323
(S'channel'
p15324
(lp15325
S'char'
p15326
a(lp15327
I-1
aaNtp15328
(S'data'
p15329
(lp15330
S'float64'
p15331
ag19
aNtp15332
tp15333
tp15334
sS'DAQmxResetSwitchScanAttribute'
p15335
((lp15336
S'int32'
p15337
ag11
a((S'taskHandle'
p15338
(lp15339
S'TaskHandle'
p15340
aNtp15341
(S'attribute'
p15342
(lp15343
S'int32'
p15344
aNtp15345
tp15346
tp15347
sS'DAQmxResetCIAngEncoderPulsesPerRev'
p15348
((lp15349
S'int32'
p15350
ag11
a((S'taskHandle'
p15351
(lp15352
S'TaskHandle'
p15353
aNtp15354
(S'channel'
p15355
(lp15356
S'char'
p15357
a(lp15358
I-1
aaNtp15359
tp15360
tp15361
sS'DAQmxResetDigEdgeRefTrigSrc'
p15362
((lp15363
S'int32'
p15364
ag11
a((S'taskHandle'
p15365
(lp15366
S'TaskHandle'
p15367
aNtp15368
tp15369
tp15370
sS'DAQmxWriteToTEDSFromFile'
p15371
((lp15372
S'int32'
p15373
ag11
a((S'physicalChannel'
p15374
(lp15375
S'char'
p15376
a(lp15377
I-1
aaNtp15378
(S'filePath'
p15379
(lp15380
S'char'
p15381
a(lp15382
I-1
aaNtp15383
(S'basicTEDSOptions'
p15384
(lp15385
S'int32'
p15386
aNtp15387
tp15388
tp15389
sS'DAQmxResetDigLvlPauseTrigSrc'
p15390
((lp15391
S'int32'
p15392
ag11
a((S'taskHandle'
p15393
(lp15394
S'TaskHandle'
p15395
aNtp15396
tp15397
tp15398
sS'DAQmxResetAnlgLvlPauseTrigLvl'
p15399
((lp15400
S'int32'
p15401
ag11
a((S'taskHandle'
p15402
(lp15403
S'TaskHandle'
p15404
aNtp15405
tp15406
tp15407
sS'DAQmxSetStartTrigDelayUnits'
p15408
((lp15409
S'int32'
p15410
ag11
a((S'taskHandle'
p15411
(lp15412
S'TaskHandle'
p15413
aNtp15414
(S'data'
p15415
(lp15416
S'int32'
p15417
aNtp15418
tp15419
tp15420
sS'DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc'
p15421
((lp15422
S'int32'
p15423
ag11
a((S'taskHandle'
p15424
(lp15425
S'TaskHandle'
p15426
aNtp15427
(S'channel'
p15428
(lp15429
S'char'
p15430
a(lp15431
I-1
aaNtp15432
tp15433
tp15434
sS'DAQmxWriteDigitalLines'
p15435
((lp15436
S'int32'
p15437
ag11
a((S'taskHandle'
p15438
(lp15439
S'TaskHandle'
p15440
aNtp15441
(S'numSampsPerChan'
p15442
(lp15443
S'int32'
p15444
aNtp15445
(S'autoStart'
p15446
(lp15447
S'bool32'
p15448
aNtp15449
(S'timeout'
p15450
(lp15451
S'float64'
p15452
aNtp15453
(S'dataLayout'
p15454
(lp15455
S'bool32'
p15456
aNtp15457
(S'writeArray'
p15458
(lp15459
S'uInt8'
p15460
a(lp15461
I-1
aaNtp15462
(S'sampsPerChanWritten'
p15463
(lp15464
S'int32'
p15465
ag19
aNtp15466
(S'reserved'
p15467
(lp15468
S'bool32'
p15469
ag19
aNtp15470
tp15471
tp15472
sS'DAQmxSetDigLvlPauseTrigDigFltrMinPulseWidth'
p15473
((lp15474
S'int32'
p15475
ag11
a((S'taskHandle'
p15476
(lp15477
S'TaskHandle'
p15478
aNtp15479
(S'data'
p15480
(lp15481
S'float64'
p15482
aNtp15483
tp15484
tp15485
sS'DAQmxGetSelfCalLastTemp'
p15486
((lp15487
S'int32'
p15488
ag11
a((S'deviceName'
p15489
(lp15490
S'char'
p15491
a(lp15492
I-1
aaNtp15493
(S'data'
p15494
(lp15495
S'float64'
p15496
ag19
aNtp15497
tp15498
tp15499
sS'DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc'
p15500
((lp15501
S'int32'
p15502
ag11
a((S'taskHandle'
p15503
(lp15504
S'TaskHandle'
p15505
aNtp15506
(S'channel'
p15507
(lp15508
S'char'
p15509
a(lp15510
I-1
aaNtp15511
(S'data'
p15512
(lp15513
S'char'
p15514
ag19
aNtp15515
(S'bufferSize'
p15516
(lp15517
S'uInt32'
p15518
aNtp15519
tp15520
tp15521
sS'DAQmxResetBufferAttribute'
p15522
((lp15523
S'int32'
p15524
ag11
a((S'taskHandle'
p15525
(lp15526
S'TaskHandle'
p15527
aNtp15528
(S'attribute'
p15529
(lp15530
S'int32'
p15531
aNtp15532
tp15533
tp15534
sS'DAQmxSetAODACRefAllowConnToGnd'
p15535
((lp15536
S'int32'
p15537
ag11
a((S'taskHandle'
p15538
(lp15539
S'TaskHandle'
p15540
aNtp15541
(S'channel'
p15542
(lp15543
S'char'
p15544
a(lp15545
I-1
aaNtp15546
(S'data'
p15547
(lp15548
S'bool32'
p15549
aNtp15550
tp15551
tp15552
sS'DAQmxGetScaleLinSlope'
p15553
((lp15554
S'int32'
p15555
ag11
a((S'scaleName'
p15556
(lp15557
S'char'
p15558
a(lp15559
I-1
aaNtp15560
(S'data'
p15561
(lp15562
S'float64'
p15563
ag19
aNtp15564
tp15565
tp15566
sS'DAQmxSetAnlgEdgeRefTrigSrc'
p15567
((lp15568
S'int32'
p15569
ag11
a((S'taskHandle'
p15570
(lp15571
S'TaskHandle'
p15572
aNtp15573
(S'data'
p15574
(lp15575
S'char'
p15576
ag19
aNtp15577
tp15578
tp15579
sS'DAQmxResetExportedAIConvClkOutputTerm'
p15580
((lp15581
S'int32'
p15582
ag11
a((S'taskHandle'
p15583
(lp15584
S'TaskHandle'
p15585
aNtp15586
tp15587
tp15588
sS'DAQmxResetAICurrentUnits'
p15589
((lp15590
S'int32'
p15591
ag11
a((S'taskHandle'
p15592
(lp15593
S'TaskHandle'
p15594
aNtp15595
(S'channel'
p15596
(lp15597
S'char'
p15598
a(lp15599
I-1
aaNtp15600
tp15601
tp15602
sS'DAQmxGetBufInputBufSize'
p15603
((lp15604
S'int32'
p15605
ag11
a((S'taskHandle'
p15606
(lp15607
S'TaskHandle'
p15608
aNtp15609
(S'data'
p15610
(lp15611
S'uInt32'
p15612
ag19
aNtp15613
tp15614
tp15615
sS'DAQmxSetDelayFromSampClkDelay'
p15616
((lp15617
S'int32'
p15618
ag11
a((S'taskHandle'
p15619
(lp15620
S'TaskHandle'
p15621
aNtp15622
(S'data'
p15623
(lp15624
S'float64'
p15625
aNtp15626
tp15627
tp15628
sS'DAQmxResetDevice'
p15629
((lp15630
S'int32'
p15631
ag11
a((S'deviceName'
p15632
(lp15633
S'char'
p15634
a(lp15635
I-1
aaNtp15636
tp15637
tp15638
sS'DAQmxSwitchCloseRelays'
p15639
((lp15640
S'int32'
p15641
ag11
a((S'relayList'
p15642
(lp15643
S'char'
p15644
a(lp15645
I-1
aaNtp15646
(S'waitForSettling'
p15647
(lp15648
S'bool32'
p15649
aNtp15650
tp15651
tp15652
sS'DAQmxResetChanAttribute'
p15653
((lp15654
S'int32'
p15655
ag11
a((S'taskHandle'
p15656
(lp15657
S'TaskHandle'
p15658
aNtp15659
(S'channel'
p15660
(lp15661
S'char'
p15662
a(lp15663
I-1
aaNtp15664
(S'attribute'
p15665
(lp15666
S'int32'
p15667
aNtp15668
tp15669
tp15670
sS'DAQmxResetAIAutoZeroMode'
p15671
((lp15672
S'int32'
p15673
ag11
a((S'taskHandle'
p15674
(lp15675
S'TaskHandle'
p15676
aNtp15677
(S'channel'
p15678
(lp15679
S'char'
p15680
a(lp15681
I-1
aaNtp15682
tp15683
tp15684
sS'DAQmxSetCIPeriodDigFltrTimebaseSrc'
p15685
((lp15686
S'int32'
p15687
ag11
a((S'taskHandle'
p15688
(lp15689
S'TaskHandle'
p15690
aNtp15691
(S'channel'
p15692
(lp15693
S'char'
p15694
a(lp15695
I-1
aaNtp15696
(S'data'
p15697
(lp15698
S'char'
p15699
ag19
aNtp15700
tp15701
tp15702
sS'DAQmxResetAIRngLow'
p15703
((lp15704
S'int32'
p15705
ag11
a((S'taskHandle'
p15706
(lp15707
S'TaskHandle'
p15708
aNtp15709
(S'channel'
p15710
(lp15711
S'char'
p15712
a(lp15713
I-1
aaNtp15714
tp15715
tp15716
sS'DAQmxSetCIPeriodUnits'
p15717
((lp15718
S'int32'
p15719
ag11
a((S'taskHandle'
p15720
(lp15721
S'TaskHandle'
p15722
aNtp15723
(S'channel'
p15724
(lp15725
S'char'
p15726
a(lp15727
I-1
aaNtp15728
(S'data'
p15729
(lp15730
S'int32'
p15731
aNtp15732
tp15733
tp15734
sS'DAQmxSwitchDisconnectAll'
p15735
((lp15736
S'int32'
p15737
ag11
a((S'deviceName'
p15738
(lp15739
S'char'
p15740
a(lp15741
I-1
aaNtp15742
(S'waitForSettling'
p15743
(lp15744
S'bool32'
p15745
aNtp15746
tp15747
tp15748
sS'DAQmxAdjustDSATimebaseCal'
p15749
((lp15750
S'int32'
p15751
ag11
a((S'calHandle'
p15752
(lp15753
S'uInt32'
p15754
aNtp15755
(S'referenceFrequency'
p15756
(lp15757
S'float64'
p15758
aNtp15759
tp15760
tp15761
sS'DAQmxGetCIEncoderZIndexEnable'
p15762
((lp15763
S'int32'
p15764
ag11
a((S'taskHandle'
p15765
(lp15766
S'TaskHandle'
p15767
aNtp15768
(S'channel'
p15769
(lp15770
S'char'
p15771
a(lp15772
I-1
aaNtp15773
(S'data'
p15774
(lp15775
S'bool32'
p15776
ag19
aNtp15777
tp15778
tp15779
sS'DAQmxResetInterlockedHshkTrigAssertedLvl'
p15780
((lp15781
S'int32'
p15782
ag11
a((S'taskHandle'
p15783
(lp15784
S'TaskHandle'
p15785
aNtp15786
tp15787
tp15788
sS'DAQmxResetCISemiPeriodDigFltrTimebaseRate'
p15789
((lp15790
S'int32'
p15791
ag11
a((S'taskHandle'
p15792
(lp15793
S'TaskHandle'
p15794
aNtp15795
(S'channel'
p15796
(lp15797
S'char'
p15798
a(lp15799
I-1
aaNtp15800
tp15801
tp15802
sS'DAQmxResetSampClkDigFltrTimebaseRate'
p15803
((lp15804
S'int32'
p15805
ag11
a((S'taskHandle'
p15806
(lp15807
S'TaskHandle'
p15808
aNtp15809
tp15810
tp15811
sS'DAQmxCreateTEDSAIRTDChan'
p15812
((lp15813
S'int32'
p15814
ag11
a((S'taskHandle'
p15815
(lp15816
S'TaskHandle'
p15817
aNtp15818
(S'physicalChannel'
p15819
(lp15820
S'char'
p15821
a(lp15822
I-1
aaNtp15823
(S'nameToAssignToChannel'
p15824
(lp15825
S'char'
p15826
a(lp15827
I-1
aaNtp15828
(S'minVal'
p15829
(lp15830
S'float64'
p15831
aNtp15832
(S'maxVal'
p15833
(lp15834
S'float64'
p15835
aNtp15836
(S'units'
p15837
(lp15838
S'int32'
p15839
aNtp15840
(S'resistanceConfig'
p15841
(lp15842
S'int32'
p15843
aNtp15844
(S'currentExcitSource'
p15845
(lp15846
S'int32'
p15847
aNtp15848
(S'currentExcitVal'
p15849
(lp15850
S'float64'
p15851
aNtp15852
tp15853
tp15854
sS'DAQmxGetCORdyForNewVal'
p15855
((lp15856
S'int32'
p15857
ag11
a((S'taskHandle'
p15858
(lp15859
S'TaskHandle'
p15860
aNtp15861
(S'channel'
p15862
(lp15863
S'char'
p15864
a(lp15865
I-1
aaNtp15866
(S'data'
p15867
(lp15868
S'bool32'
p15869
ag19
aNtp15870
tp15871
tp15872
sS'DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth'
p15873
((lp15874
S'int32'
p15875
ag11
a((S'taskHandle'
p15876
(lp15877
S'TaskHandle'
p15878
aNtp15879
(S'channel'
p15880
(lp15881
S'char'
p15882
a(lp15883
I-1
aaNtp15884
(S'data'
p15885
(lp15886
S'float64'
p15887
aNtp15888
tp15889
tp15890
sS'DAQmxResetAIChanCalEnableCal'
p15891
((lp15892
S'int32'
p15893
ag11
a((S'taskHandle'
p15894
(lp15895
S'TaskHandle'
p15896
aNtp15897
(S'channel'
p15898
(lp15899
S'char'
p15900
a(lp15901
I-1
aaNtp15902
tp15903
tp15904
sS'DAQmxResetAILVDTSensitivity'
p15905
((lp15906
S'int32'
p15907
ag11
a((S'taskHandle'
p15908
(lp15909
S'TaskHandle'
p15910
aNtp15911
(S'channel'
p15912
(lp15913
S'char'
p15914
a(lp15915
I-1
aaNtp15916
tp15917
tp15918
sS'DAQmxGetAIThrmstrB'
p15919
((lp15920
S'int32'
p15921
ag11
a((S'taskHandle'
p15922
(lp15923
S'TaskHandle'
p15924
aNtp15925
(S'channel'
p15926
(lp15927
S'char'
p15928
a(lp15929
I-1
aaNtp15930
(S'data'
p15931
(lp15932
S'float64'
p15933
ag19
aNtp15934
tp15935
tp15936
sS'DAQmxGetAIThrmstrA'
p15937
((lp15938
S'int32'
p15939
ag11
a((S'taskHandle'
p15940
(lp15941
S'TaskHandle'
p15942
aNtp15943
(S'channel'
p15944
(lp15945
S'char'
p15946
a(lp15947
I-1
aaNtp15948
(S'data'
p15949
(lp15950
S'float64'
p15951
ag19
aNtp15952
tp15953
tp15954
sS'DAQmxGetSyncPulseSrc'
p15955
((lp15956
S'int32'
p15957
ag11
a((S'taskHandle'
p15958
(lp15959
S'TaskHandle'
p15960
aNtp15961
(S'data'
p15962
(lp15963
S'char'
p15964
ag19
aNtp15965
(S'bufferSize'
p15966
(lp15967
S'uInt32'
p15968
aNtp15969
tp15970
tp15971
sS'DAQmxGetDelayFromSampClkDelay'
p15972
((lp15973
S'int32'
p15974
ag11
a((S'taskHandle'
p15975
(lp15976
S'TaskHandle'
p15977
aNtp15978
(S'data'
p15979
(lp15980
S'float64'
p15981
ag19
aNtp15982
tp15983
tp15984
sS'DAQmxSetAIRVDTSensitivityUnits'
p15985
((lp15986
S'int32'
p15987
ag11
a((S'taskHandle'
p15988
(lp15989
S'TaskHandle'
p15990
aNtp15991
(S'channel'
p15992
(lp15993
S'char'
p15994
a(lp15995
I-1
aaNtp15996
(S'data'
p15997
(lp15998
S'int32'
p15999
aNtp16000
tp16001
tp16002
sS'DAQmxSetAnlgWinPauseTrigWhen'
p16003
((lp16004
S'int32'
p16005
ag11
a((S'taskHandle'
p16006
(lp16007
S'TaskHandle'
p16008
aNtp16009
(S'data'
p16010
(lp16011
S'int32'
p16012
aNtp16013
tp16014
tp16015
sS'DAQmxSetDigLvlPauseTrigDigSyncEnable'
p16016
((lp16017
S'int32'
p16018
ag11
a((S'taskHandle'
p16019
(lp16020
S'TaskHandle'
p16021
aNtp16022
(S'data'
p16023
(lp16024
S'bool32'
p16025
aNtp16026
tp16027
tp16028
sS'DAQmxSetWatchdogExpirTrigType'
p16029
((lp16030
S'int32'
p16031
ag11
a((S'taskHandle'
p16032
(lp16033
S'TaskHandle'
p16034
aNtp16035
(S'data'
p16036
(lp16037
S'int32'
p16038
aNtp16039
tp16040
tp16041
sS'DAQmxResetCIEncoderZInputDigFltrTimebaseSrc'
p16042
((lp16043
S'int32'
p16044
ag11
a((S'taskHandle'
p16045
(lp16046
S'TaskHandle'
p16047
aNtp16048
(S'channel'
p16049
(lp16050
S'char'
p16051
a(lp16052
I-1
aaNtp16053
tp16054
tp16055
sS'DAQmxResetAODACRefVal'
p16056
((lp16057
S'int32'
p16058
ag11
a((S'taskHandle'
p16059
(lp16060
S'TaskHandle'
p16061
aNtp16062
(S'channel'
p16063
(lp16064
S'char'
p16065
a(lp16066
I-1
aaNtp16067
tp16068
tp16069
sS'DAQmxResetAIACExcitFreq'
p16070
((lp16071
S'int32'
p16072
ag11
a((S'taskHandle'
p16073
(lp16074
S'TaskHandle'
p16075
aNtp16076
(S'channel'
p16077
(lp16078
S'char'
p16079
a(lp16080
I-1
aaNtp16081
tp16082
tp16083
sS'DAQmxGetAIAccelSensitivity'
p16084
((lp16085
S'int32'
p16086
ag11
a((S'taskHandle'
p16087
(lp16088
S'TaskHandle'
p16089
aNtp16090
(S'channel'
p16091
(lp16092
S'char'
p16093
a(lp16094
I-1
aaNtp16095
(S'data'
p16096
(lp16097
S'float64'
p16098
ag19
aNtp16099
tp16100
tp16101
sS'DAQmxSetCIDupCountPrevent'
p16102
((lp16103
S'int32'
p16104
ag11
a((S'taskHandle'
p16105
(lp16106
S'TaskHandle'
p16107
aNtp16108
(S'channel'
p16109
(lp16110
S'char'
p16111
a(lp16112
I-1
aaNtp16113
(S'data'
p16114
(lp16115
S'bool32'
p16116
aNtp16117
tp16118
tp16119
sS'DAQmxResetAOMin'
p16120
((lp16121
S'int32'
p16122
ag11
a((S'taskHandle'
p16123
(lp16124
S'TaskHandle'
p16125
aNtp16126
(S'channel'
p16127
(lp16128
S'char'
p16129
a(lp16130
I-1
aaNtp16131
tp16132
tp16133
sS'DAQmxSwitchOpenRelays'
p16134
((lp16135
S'int32'
p16136
ag11
a((S'relayList'
p16137
(lp16138
S'char'
p16139
a(lp16140
I-1
aaNtp16141
(S'waitForSettling'
p16142
(lp16143
S'bool32'
p16144
aNtp16145
tp16146
tp16147
sS'DAQmxGetRefTrigPretrigSamples'
p16148
((lp16149
S'int32'
p16150
ag11
a((S'taskHandle'
p16151
(lp16152
S'TaskHandle'
p16153
aNtp16154
(S'data'
p16155
(lp16156
S'uInt32'
p16157
ag19
aNtp16158
tp16159
tp16160
sS'DAQmxWriteRaw'
p16161
((lp16162
S'int32'
p16163
ag11
a((S'taskHandle'
p16164
(lp16165
S'TaskHandle'
p16166
aNtp16167
(S'numSamps'
p16168
(lp16169
S'int32'
p16170
aNtp16171
(S'autoStart'
p16172
(lp16173
S'bool32'
p16174
aNtp16175
(S'timeout'
p16176
(lp16177
S'float64'
p16178
aNtp16179
(S'writeArray'
p16180
(lp16181
S'void'
p16182
ag19
aNtp16183
(S'sampsPerChanWritten'
p16184
(lp16185
S'int32'
p16186
ag19
aNtp16187
(S'reserved'
p16188
(lp16189
S'bool32'
p16190
ag19
aNtp16191
tp16192
tp16193
sS'DAQmxResetAIMax'
p16194
((lp16195
S'int32'
p16196
ag11
a((S'taskHandle'
p16197
(lp16198
S'TaskHandle'
p16199
aNtp16200
(S'channel'
p16201
(lp16202
S'char'
p16203
a(lp16204
I-1
aaNtp16205
tp16206
tp16207
sS'DAQmxResetAOOutputImpedance'
p16208
((lp16209
S'int32'
p16210
ag11
a((S'taskHandle'
p16211
(lp16212
S'TaskHandle'
p16213
aNtp16214
(S'channel'
p16215
(lp16216
S'char'
p16217
a(lp16218
I-1
aaNtp16219
tp16220
tp16221
sS'DAQmxSetExportedHshkEventDelay'
p16222
((lp16223
S'int32'
p16224
ag11
a((S'taskHandle'
p16225
(lp16226
S'TaskHandle'
p16227
aNtp16228
(S'data'
p16229
(lp16230
S'float64'
p16231
aNtp16232
tp16233
tp16234
sS'DAQmxGetMasterTimebaseSrc'
p16235
((lp16236
S'int32'
p16237
ag11
a((S'taskHandle'
p16238
(lp16239
S'TaskHandle'
p16240
aNtp16241
(S'data'
p16242
(lp16243
S'char'
p16244
ag19
aNtp16245
(S'bufferSize'
p16246
(lp16247
S'uInt32'
p16248
aNtp16249
tp16250
tp16251
sS'DAQmxGetCICtrTimebaseSrc'
p16252
((lp16253
S'int32'
p16254
ag11
a((S'taskHandle'
p16255
(lp16256
S'TaskHandle'
p16257
aNtp16258
(S'channel'
p16259
(lp16260
S'char'
p16261
a(lp16262
I-1
aaNtp16263
(S'data'
p16264
(lp16265
S'char'
p16266
ag19
aNtp16267
(S'bufferSize'
p16268
(lp16269
S'uInt32'
p16270
aNtp16271
tp16272
tp16273
sS'DAQmxResetAILossyLSBRemovalCompressedSampSize'
p16274
((lp16275
S'int32'
p16276
ag11
a((S'taskHandle'
p16277
(lp16278
S'TaskHandle'
p16279
aNtp16280
(S'channel'
p16281
(lp16282
S'char'
p16283
a(lp16284
I-1
aaNtp16285
tp16286
tp16287
sS'DAQmxResetMasterTimebaseRate'
p16288
((lp16289
S'int32'
p16290
ag11
a((S'taskHandle'
p16291
(lp16292
S'TaskHandle'
p16293
aNtp16294
tp16295
tp16296
sS'DAQmxGetCIFreqDigFltrTimebaseSrc'
p16297
((lp16298
S'int32'
p16299
ag11
a((S'taskHandle'
p16300
(lp16301
S'TaskHandle'
p16302
aNtp16303
(S'channel'
p16304
(lp16305
S'char'
p16306
a(lp16307
I-1
aaNtp16308
(S'data'
p16309
(lp16310
S'char'
p16311
ag19
aNtp16312
(S'bufferSize'
p16313
(lp16314
S'uInt32'
p16315
aNtp16316
tp16317
tp16318
sS'DAQmxResetWriteRegenMode'
p16319
((lp16320
S'int32'
p16321
ag11
a((S'taskHandle'
p16322
(lp16323
S'TaskHandle'
p16324
aNtp16325
tp16326
tp16327
sS'DAQmxGetExportedDividedSampClkTimebaseOutputTerm'
p16328
((lp16329
S'int32'
p16330
ag11
a((S'taskHandle'
p16331
(lp16332
S'TaskHandle'
p16333
aNtp16334
(S'data'
p16335
(lp16336
S'char'
p16337
ag19
aNtp16338
(S'bufferSize'
p16339
(lp16340
S'uInt32'
p16341
aNtp16342
tp16343
tp16344
sS'DAQmxGetAnlgLvlPauseTrigSrc'
p16345
((lp16346
S'int32'
p16347
ag11
a((S'taskHandle'
p16348
(lp16349
S'TaskHandle'
p16350
aNtp16351
(S'data'
p16352
(lp16353
S'char'
p16354
ag19
aNtp16355
(S'bufferSize'
p16356
(lp16357
S'uInt32'
p16358
aNtp16359
tp16360
tp16361
sS'DAQmxGetAIChanCalScaleType'
p16362
((lp16363
S'int32'
p16364
ag11
a((S'taskHandle'
p16365
(lp16366
S'TaskHandle'
p16367
aNtp16368
(S'channel'
p16369
(lp16370
S'char'
p16371
a(lp16372
I-1
aaNtp16373
(S'data'
p16374
(lp16375
S'int32'
p16376
ag19
aNtp16377
tp16378
tp16379
sS'DAQmxSetDOInvertLines'
p16380
((lp16381
S'int32'
p16382
ag11
a((S'taskHandle'
p16383
(lp16384
S'TaskHandle'
p16385
aNtp16386
(S'channel'
p16387
(lp16388
S'char'
p16389
a(lp16390
I-1
aaNtp16391
(S'data'
p16392
(lp16393
S'bool32'
p16394
aNtp16395
tp16396
tp16397
sS'DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth'
p16398
((lp16399
S'int32'
p16400
ag11
a((S'taskHandle'
p16401
(lp16402
S'TaskHandle'
p16403
aNtp16404
(S'channel'
p16405
(lp16406
S'char'
p16407
a(lp16408
I-1
aaNtp16409
(S'data'
p16410
(lp16411
S'float64'
p16412
ag19
aNtp16413
tp16414
tp16415
sS'DAQmxSetExportedSyncPulseEventOutputTerm'
p16416
((lp16417
S'int32'
p16418
ag11
a((S'taskHandle'
p16419
(lp16420
S'TaskHandle'
p16421
aNtp16422
(S'data'
p16423
(lp16424
S'char'
p16425
ag19
aNtp16426
tp16427
tp16428
sS'DAQmxResetSyncPulseMinDelayToStart'
p16429
((lp16430
S'int32'
p16431
ag11
a((S'taskHandle'
p16432
(lp16433
S'TaskHandle'
p16434
aNtp16435
tp16436
tp16437
sS'DAQmxGetCIFreqDigFltrEnable'
p16438
((lp16439
S'int32'
p16440
ag11
a((S'taskHandle'
p16441
(lp16442
S'TaskHandle'
p16443
aNtp16444
(S'channel'
p16445
(lp16446
S'char'
p16447
a(lp16448
I-1
aaNtp16449
(S'data'
p16450
(lp16451
S'bool32'
p16452
ag19
aNtp16453
tp16454
tp16455
sS'DAQmxSetCIPulseWidthStartingEdge'
p16456
((lp16457
S'int32'
p16458
ag11
a((S'taskHandle'
p16459
(lp16460
S'TaskHandle'
p16461
aNtp16462
(S'channel'
p16463
(lp16464
S'char'
p16465
a(lp16466
I-1
aaNtp16467
(S'data'
p16468
(lp16469
S'int32'
p16470
aNtp16471
tp16472
tp16473
sS'DAQmxSetAIExcitUseForScaling'
p16474
((lp16475
S'int32'
p16476
ag11
a((S'taskHandle'
p16477
(lp16478
S'TaskHandle'
p16479
aNtp16480
(S'channel'
p16481
(lp16482
S'char'
p16483
a(lp16484
I-1
aaNtp16485
(S'data'
p16486
(lp16487
S'bool32'
p16488
aNtp16489
tp16490
tp16491
sS'DAQmxGetDOUseOnlyOnBrdMem'
p16492
((lp16493
S'int32'
p16494
ag11
a((S'taskHandle'
p16495
(lp16496
S'TaskHandle'
p16497
aNtp16498
(S'channel'
p16499
(lp16500
S'char'
p16501
a(lp16502
I-1
aaNtp16503
(S'data'
p16504
(lp16505
S'bool32'
p16506
ag19
aNtp16507
tp16508
tp16509
sS'DAQmxSetScaleDescr'
p16510
((lp16511
S'int32'
p16512
ag11
a((S'scaleName'
p16513
(lp16514
S'char'
p16515
a(lp16516
I-1
aaNtp16517
(S'data'
p16518
(lp16519
S'char'
p16520
ag19
aNtp16521
tp16522
tp16523
sS'DAQmxGetPhysicalChanTEDSTemplateIDs'
p16524
((lp16525
S'int32'
p16526
ag11
a((S'physicalChannel'
p16527
(lp16528
S'char'
p16529
a(lp16530
I-1
aaNtp16531
(S'data'
p16532
(lp16533
S'uInt32'
p16534
ag19
aNtp16535
(S'arraySizeInSamples'
p16536
(lp16537
S'uInt32'
p16538
aNtp16539
tp16540
tp16541
sS'DAQmxResetAIAccelSensitivityUnits'
p16542
((lp16543
S'int32'
p16544
ag11
a((S'taskHandle'
p16545
(lp16546
S'TaskHandle'
p16547
aNtp16548
(S'channel'
p16549
(lp16550
S'char'
p16551
a(lp16552
I-1
aaNtp16553
tp16554
tp16555
sS'DAQmxSaveTask'
p16556
((lp16557
S'int32'
p16558
ag11
a((S'taskHandle'
p16559
(lp16560
S'TaskHandle'
p16561
aNtp16562
(S'saveAs'
p16563
(lp16564
S'char'
p16565
a(lp16566
I-1
aaNtp16567
(S'author'
p16568
(lp16569
S'char'
p16570
a(lp16571
I-1
aaNtp16572
(S'options'
p16573
(lp16574
S'uInt32'
p16575
aNtp16576
tp16577
tp16578
sS'DAQmxGetScaleMapPreScaledMax'
p16579
((lp16580
S'int32'
p16581
ag11
a((S'scaleName'
p16582
(lp16583
S'char'
p16584
a(lp16585
I-1
aaNtp16586
(S'data'
p16587
(lp16588
S'float64'
p16589
ag19
aNtp16590
tp16591
tp16592
sS'DAQmxAdjust1125Cal'
p16593
((lp16594
S'int32'
p16595
ag11
a((S'calHandle'
p16596
(lp16597
S'uInt32'
p16598
aNtp16599
(S'refVoltage'
p16600
(lp16601
S'float64'
p16602
aNtp16603
(S'measOutput'
p16604
(lp16605
S'float64'
p16606
aNtp16607
tp16608
tp16609
sS'DAQmxSetCICtrTimebaseDigFltrEnable'
p16610
((lp16611
S'int32'
p16612
ag11
a((S'taskHandle'
p16613
(lp16614
S'TaskHandle'
p16615
aNtp16616
(S'channel'
p16617
(lp16618
S'char'
p16619
a(lp16620
I-1
aaNtp16621
(S'data'
p16622
(lp16623
S'bool32'
p16624
aNtp16625
tp16626
tp16627
sS'DAQmxGetPersistedTaskAllowInteractiveEditing'
p16628
((lp16629
S'int32'
p16630
ag11
a((S'taskName'
p16631
(lp16632
S'char'
p16633
a(lp16634
I-1
aaNtp16635
(S'data'
p16636
(lp16637
S'bool32'
p16638
ag19
aNtp16639
tp16640
tp16641
sS'DAQmxResetAOResolutionUnits'
p16642
((lp16643
S'int32'
p16644
ag11
a((S'taskHandle'
p16645
(lp16646
S'TaskHandle'
p16647
aNtp16648
(S'channel'
p16649
(lp16650
S'char'
p16651
a(lp16652
I-1
aaNtp16653
tp16654
tp16655
sS'DAQmxSetExportedAIConvClkOutputTerm'
p16656
((lp16657
S'int32'
p16658
ag11
a((S'taskHandle'
p16659
(lp16660
S'TaskHandle'
p16661
aNtp16662
(S'data'
p16663
(lp16664
S'char'
p16665
ag19
aNtp16666
tp16667
tp16668
sS'DAQmxSetAIChanCalApplyCalIfExp'
p16669
((lp16670
S'int32'
p16671
ag11
a((S'taskHandle'
p16672
(lp16673
S'TaskHandle'
p16674
aNtp16675
(S'channel'
p16676
(lp16677
S'char'
p16678
a(lp16679
I-1
aaNtp16680
(S'data'
p16681
(lp16682
S'bool32'
p16683
aNtp16684
tp16685
tp16686
sS'DAQmxSetCITwoEdgeSepFirstDigFltrEnable'
p16687
((lp16688
S'int32'
p16689
ag11
a((S'taskHandle'
p16690
(lp16691
S'TaskHandle'
p16692
aNtp16693
(S'channel'
p16694
(lp16695
S'char'
p16696
a(lp16697
I-1
aaNtp16698
(S'data'
p16699
(lp16700
S'bool32'
p16701
aNtp16702
tp16703
tp16704
sS'DAQmxGetCIPeriodDigSyncEnable'
p16705
((lp16706
S'int32'
p16707
ag11
a((S'taskHandle'
p16708
(lp16709
S'TaskHandle'
p16710
aNtp16711
(S'channel'
p16712
(lp16713
S'char'
p16714
a(lp16715
I-1
aaNtp16716
(S'data'
p16717
(lp16718
S'bool32'
p16719
ag19
aNtp16720
tp16721
tp16722
sS'DAQmxSetAOCustomScaleName'
p16723
((lp16724
S'int32'
p16725
ag11
a((S'taskHandle'
p16726
(lp16727
S'TaskHandle'
p16728
aNtp16729
(S'channel'
p16730
(lp16731
S'char'
p16732
a(lp16733
I-1
aaNtp16734
(S'data'
p16735
(lp16736
S'char'
p16737
ag19
aNtp16738
tp16739
tp16740
sS'DAQmxGetSampClkTimebaseDiv'
p16741
((lp16742
S'int32'
p16743
ag11
a((S'taskHandle'
p16744
(lp16745
S'TaskHandle'
p16746
aNtp16747
(S'data'
p16748
(lp16749
S'uInt32'
p16750
ag19
aNtp16751
tp16752
tp16753
sS'DAQmxSetAIBridgeShuntCalGainAdjust'
p16754
((lp16755
S'int32'
p16756
ag11
a((S'taskHandle'
p16757
(lp16758
S'TaskHandle'
p16759
aNtp16760
(S'channel'
p16761
(lp16762
S'char'
p16763
a(lp16764
I-1
aaNtp16765
(S'data'
p16766
(lp16767
S'float64'
p16768
aNtp16769
tp16770
tp16771
sS'DAQmxGetAILowpassSwitchCapOutClkDiv'
p16772
((lp16773
S'int32'
p16774
ag11
a((S'taskHandle'
p16775
(lp16776
S'TaskHandle'
p16777
aNtp16778
(S'channel'
p16779
(lp16780
S'char'
p16781
a(lp16782
I-1
aaNtp16783
(S'data'
p16784
(lp16785
S'uInt32'
p16786
ag19
aNtp16787
tp16788
tp16789
sS'DAQmxGetAIResistanceCfg'
p16790
((lp16791
S'int32'
p16792
ag11
a((S'taskHandle'
p16793
(lp16794
S'TaskHandle'
p16795
aNtp16796
(S'channel'
p16797
(lp16798
S'char'
p16799
a(lp16800
I-1
aaNtp16801
(S'data'
p16802
(lp16803
S'int32'
p16804
ag19
aNtp16805
tp16806
tp16807
sS'DAQmxGetAnlgWinRefTrigSrc'
p16808
((lp16809
S'int32'
p16810
ag11
a((S'taskHandle'
p16811
(lp16812
S'TaskHandle'
p16813
aNtp16814
(S'data'
p16815
(lp16816
S'char'
p16817
ag19
aNtp16818
(S'bufferSize'
p16819
(lp16820
S'uInt32'
p16821
aNtp16822
tp16823
tp16824
sS'DAQmxGetSampClkDigFltrTimebaseRate'
p16825
((lp16826
S'int32'
p16827
ag11
a((S'taskHandle'
p16828
(lp16829
S'TaskHandle'
p16830
aNtp16831
(S'data'
p16832
(lp16833
S'float64'
p16834
ag19
aNtp16835
tp16836
tp16837
sS'DAQmxResetCITwoEdgeSepFirstEdge'
p16838
((lp16839
S'int32'
p16840
ag11
a((S'taskHandle'
p16841
(lp16842
S'TaskHandle'
p16843
aNtp16844
(S'channel'
p16845
(lp16846
S'char'
p16847
a(lp16848
I-1
aaNtp16849
tp16850
tp16851
sS'DAQmxSetCITwoEdgeSepFirstEdge'
p16852
((lp16853
S'int32'
p16854
ag11
a((S'taskHandle'
p16855
(lp16856
S'TaskHandle'
p16857
aNtp16858
(S'channel'
p16859
(lp16860
S'char'
p16861
a(lp16862
I-1
aaNtp16863
(S'data'
p16864
(lp16865
S'int32'
p16866
aNtp16867
tp16868
tp16869
sS'DAQmxSetCIEncoderAInputDigFltrTimebaseRate'
p16870
((lp16871
S'int32'
p16872
ag11
a((S'taskHandle'
p16873
(lp16874
S'TaskHandle'
p16875
aNtp16876
(S'channel'
p16877
(lp16878
S'char'
p16879
a(lp16880
I-1
aaNtp16881
(S'data'
p16882
(lp16883
S'float64'
p16884
aNtp16885
tp16886
tp16887
sS'DAQmxGetDevSerialNum'
p16888
((lp16889
S'int32'
p16890
ag11
a((S'device'
p16891
(lp16892
S'char'
p16893
a(lp16894
I-1
aaNtp16895
(S'data'
p16896
(lp16897
S'uInt32'
p16898
ag19
aNtp16899
tp16900
tp16901
sS'DAQmxGetAODACRngHigh'
p16902
((lp16903
S'int32'
p16904
ag11
a((S'taskHandle'
p16905
(lp16906
S'TaskHandle'
p16907
aNtp16908
(S'channel'
p16909
(lp16910
S'char'
p16911
a(lp16912
I-1
aaNtp16913
(S'data'
p16914
(lp16915
S'float64'
p16916
ag19
aNtp16917
tp16918
tp16919
sS'DAQmxGetCIPulseWidthStartingEdge'
p16920
((lp16921
S'int32'
p16922
ag11
a((S'taskHandle'
p16923
(lp16924
S'TaskHandle'
p16925
aNtp16926
(S'channel'
p16927
(lp16928
S'char'
p16929
a(lp16930
I-1
aaNtp16931
(S'data'
p16932
(lp16933
S'int32'
p16934
ag19
aNtp16935
tp16936
tp16937
sS'DAQmxGetReadRelativeTo'
p16938
((lp16939
S'int32'
p16940
ag11
a((S'taskHandle'
p16941
(lp16942
S'TaskHandle'
p16943
aNtp16944
(S'data'
p16945
(lp16946
S'int32'
p16947
ag19
aNtp16948
tp16949
tp16950
sS'DAQmxCreateTEDSAIAccelChan'
p16951
((lp16952
S'int32'
p16953
ag11
a((S'taskHandle'
p16954
(lp16955
S'TaskHandle'
p16956
aNtp16957
(S'physicalChannel'
p16958
(lp16959
S'char'
p16960
a(lp16961
I-1
aaNtp16962
(S'nameToAssignToChannel'
p16963
(lp16964
S'char'
p16965
a(lp16966
I-1
aaNtp16967
(S'terminalConfig'
p16968
(lp16969
S'int32'
p16970
aNtp16971
(S'minVal'
p16972
(lp16973
S'float64'
p16974
aNtp16975
(S'maxVal'
p16976
(lp16977
S'float64'
p16978
aNtp16979
(S'units'
p16980
(lp16981
S'int32'
p16982
aNtp16983
(S'currentExcitSource'
p16984
(lp16985
S'int32'
p16986
aNtp16987
(S'currentExcitVal'
p16988
(lp16989
S'float64'
p16990
aNtp16991
(S'customScaleName'
p16992
(lp16993
S'char'
p16994
a(lp16995
I-1
aaNtp16996
tp16997
tp16998
sS'DAQmxGetCIEncoderBInputDigFltrTimebaseSrc'
p16999
((lp17000
S'int32'
p17001
ag11
a((S'taskHandle'
p17002
(lp17003
S'TaskHandle'
p17004
aNtp17005
(S'channel'
p17006
(lp17007
S'char'
p17008
a(lp17009
I-1
aaNtp17010
(S'data'
p17011
(lp17012
S'char'
p17013
ag19
aNtp17014
(S'bufferSize'
p17015
(lp17016
S'uInt32'
p17017
aNtp17018
tp17019
tp17020
sS'DAQmxResetAIThrmcplType'
p17021
((lp17022
S'int32'
p17023
ag11
a((S'taskHandle'
p17024
(lp17025
S'TaskHandle'
p17026
aNtp17027
(S'channel'
p17028
(lp17029
S'char'
p17030
a(lp17031
I-1
aaNtp17032
tp17033
tp17034
sS'DAQmxGetWatchdogDOExpirState'
p17035
((lp17036
S'int32'
p17037
ag11
a((S'taskHandle'
p17038
(lp17039
S'TaskHandle'
p17040
aNtp17041
(S'channel'
p17042
(lp17043
S'char'
p17044
a(lp17045
I-1
aaNtp17046
(S'data'
p17047
(lp17048
S'int32'
p17049
ag19
aNtp17050
tp17051
tp17052
sS'DAQmxGetDigLvlPauseTrigWhen'
p17053
((lp17054
S'int32'
p17055
ag11
a((S'taskHandle'
p17056
(lp17057
S'TaskHandle'
p17058
aNtp17059
(S'data'
p17060
(lp17061
S'int32'
p17062
ag19
aNtp17063
tp17064
tp17065
sS'DAQmxSetExportedAdvTrigPulseWidth'
p17066
((lp17067
S'int32'
p17068
ag11
a((S'taskHandle'
p17069
(lp17070
S'TaskHandle'
p17071
aNtp17072
(S'data'
p17073
(lp17074
S'float64'
p17075
aNtp17076
tp17077
tp17078
sS'DAQmxGetDelayFromSampClkDelayUnits'
p17079
((lp17080
S'int32'
p17081
ag11
a((S'taskHandle'
p17082
(lp17083
S'TaskHandle'
p17084
aNtp17085
(S'data'
p17086
(lp17087
S'int32'
p17088
ag19
aNtp17089
tp17090
tp17091
sS'DAQmxSetCIFreqUnits'
p17092
((lp17093
S'int32'
p17094
ag11
a((S'taskHandle'
p17095
(lp17096
S'TaskHandle'
p17097
aNtp17098
(S'channel'
p17099
(lp17100
S'char'
p17101
a(lp17102
I-1
aaNtp17103
(S'data'
p17104
(lp17105
S'int32'
p17106
aNtp17107
tp17108
tp17109
sS'DAQmxResetExportedAdvTrigOutputTerm'
p17110
((lp17111
S'int32'
p17112
ag11
a((S'taskHandle'
p17113
(lp17114
S'TaskHandle'
p17115
aNtp17116
tp17117
tp17118
sS'DAQmxSetSampClkDigFltrMinPulseWidth'
p17119
((lp17120
S'int32'
p17121
ag11
a((S'taskHandle'
p17122
(lp17123
S'TaskHandle'
p17124
aNtp17125
(S'data'
p17126
(lp17127
S'float64'
p17128
aNtp17129
tp17130
tp17131
sS'DAQmxGetAdvTrigType'
p17132
((lp17133
S'int32'
p17134
ag11
a((S'taskHandle'
p17135
(lp17136
S'TaskHandle'
p17137
aNtp17138
(S'data'
p17139
(lp17140
S'int32'
p17141
ag19
aNtp17142
tp17143
tp17144
sS'DAQmxGetAnlgWinStartTrigSrc'
p17145
((lp17146
S'int32'
p17147
ag11
a((S'taskHandle'
p17148
(lp17149
S'TaskHandle'
p17150
aNtp17151
(S'data'
p17152
(lp17153
S'char'
p17154
ag19
aNtp17155
(S'bufferSize'
p17156
(lp17157
S'uInt32'
p17158
aNtp17159
tp17160
tp17161
sS'DAQmxGetDOTristate'
p17162
((lp17163
S'int32'
p17164
ag11
a((S'taskHandle'
p17165
(lp17166
S'TaskHandle'
p17167
aNtp17168
(S'channel'
p17169
(lp17170
S'char'
p17171
a(lp17172
I-1
aaNtp17173
(S'data'
p17174
(lp17175
S'bool32'
p17176
ag19
aNtp17177
tp17178
tp17179
sS'DAQmxGetAILVDTSensitivityUnits'
p17180
((lp17181
S'int32'
p17182
ag11
a((S'taskHandle'
p17183
(lp17184
S'TaskHandle'
p17185
aNtp17186
(S'channel'
p17187
(lp17188
S'char'
p17189
a(lp17190
I-1
aaNtp17191
(S'data'
p17192
(lp17193
S'int32'
p17194
ag19
aNtp17195
tp17196
tp17197
sS'DAQmxSetAIThrmstrR1'
p17198
((lp17199
S'int32'
p17200
ag11
a((S'taskHandle'
p17201
(lp17202
S'TaskHandle'
p17203
aNtp17204
(S'channel'
p17205
(lp17206
S'char'
p17207
a(lp17208
I-1
aaNtp17209
(S'data'
p17210
(lp17211
S'float64'
p17212
aNtp17213
tp17214
tp17215
sS'DAQmxSetCOPulseHighTime'
p17216
((lp17217
S'int32'
p17218
ag11
a((S'taskHandle'
p17219
(lp17220
S'TaskHandle'
p17221
aNtp17222
(S'channel'
p17223
(lp17224
S'char'
p17225
a(lp17226
I-1
aaNtp17227
(S'data'
p17228
(lp17229
S'float64'
p17230
aNtp17231
tp17232
tp17233
sS'DAQmxSetChangeDetectDIFallingEdgePhysicalChans'
p17234
((lp17235
S'int32'
p17236
ag11
a((S'taskHandle'
p17237
(lp17238
S'TaskHandle'
p17239
aNtp17240
(S'data'
p17241
(lp17242
S'char'
p17243
ag19
aNtp17244
tp17245
tp17246
sS'DAQmxGetCOCtrTimebaseDigFltrEnable'
p17247
((lp17248
S'int32'
p17249
ag11
a((S'taskHandle'
p17250
(lp17251
S'TaskHandle'
p17252
aNtp17253
(S'channel'
p17254
(lp17255
S'char'
p17256
a(lp17257
I-1
aaNtp17258
(S'data'
p17259
(lp17260
S'bool32'
p17261
ag19
aNtp17262
tp17263
tp17264
sS'DAQmxSetAIStrainUnits'
p17265
((lp17266
S'int32'
p17267
ag11
a((S'taskHandle'
p17268
(lp17269
S'TaskHandle'
p17270
aNtp17271
(S'channel'
p17272
(lp17273
S'char'
p17274
a(lp17275
I-1
aaNtp17276
(S'data'
p17277
(lp17278
S'int32'
p17279
aNtp17280
tp17281
tp17282
sS'DAQmxResetHshkSampleInputDataWhen'
p17283
((lp17284
S'int32'
p17285
ag11
a((S'taskHandle'
p17286
(lp17287
S'TaskHandle'
p17288
aNtp17289
tp17290
tp17291
sS'DAQmxSetScaleScaledUnits'
p17292
((lp17293
S'int32'
p17294
ag11
a((S'scaleName'
p17295
(lp17296
S'char'
p17297
a(lp17298
I-1
aaNtp17299
(S'data'
p17300
(lp17301
S'char'
p17302
ag19
aNtp17303
tp17304
tp17305
sS'DAQmxGetSwitchChanUsage'
p17306
((lp17307
S'int32'
p17308
ag11
a((S'switchChannelName'
p17309
(lp17310
S'char'
p17311
a(lp17312
I-1
aaNtp17313
(S'data'
p17314
(lp17315
S'int32'
p17316
ag19
aNtp17317
tp17318
tp17319
sS'DAQmxResetExportedAIHoldCmpltEventPulsePolarity'
p17320
((lp17321
S'int32'
p17322
ag11
a((S'taskHandle'
p17323
(lp17324
S'TaskHandle'
p17325
aNtp17326
tp17327
tp17328
sS'DAQmxSetCIEncoderZIndexPhase'
p17329
((lp17330
S'int32'
p17331
ag11
a((S'taskHandle'
p17332
(lp17333
S'TaskHandle'
p17334
aNtp17335
(S'channel'
p17336
(lp17337
S'char'
p17338
a(lp17339
I-1
aaNtp17340
(S'data'
p17341
(lp17342
S'int32'
p17343
aNtp17344
tp17345
tp17346
sS'DAQmxGetExportedCtrOutEventToggleIdleState'
p17347
((lp17348
S'int32'
p17349
ag11
a((S'taskHandle'
p17350
(lp17351
S'TaskHandle'
p17352
aNtp17353
(S'data'
p17354
(lp17355
S'int32'
p17356
ag19
aNtp17357
tp17358
tp17359
sS'DAQmxGetAILowpassSwitchCapExtClkDiv'
p17360
((lp17361
S'int32'
p17362
ag11
a((S'taskHandle'
p17363
(lp17364
S'TaskHandle'
p17365
aNtp17366
(S'channel'
p17367
(lp17368
S'char'
p17369
a(lp17370
I-1
aaNtp17371
(S'data'
p17372
(lp17373
S'uInt32'
p17374
ag19
aNtp17375
tp17376
tp17377
sS'DAQmxResetCIMax'
p17378
((lp17379
S'int32'
p17380
ag11
a((S'taskHandle'
p17381
(lp17382
S'TaskHandle'
p17383
aNtp17384
(S'channel'
p17385
(lp17386
S'char'
p17387
a(lp17388
I-1
aaNtp17389
tp17390
tp17391
sS'DAQmxSetExported10MHzRefClkOutputTerm'
p17392
((lp17393
S'int32'
p17394
ag11
a((S'taskHandle'
p17395
(lp17396
S'TaskHandle'
p17397
aNtp17398
(S'data'
p17399
(lp17400
S'char'
p17401
ag19
aNtp17402
tp17403
tp17404
sS'DAQmxSetCIFreqDigFltrEnable'
p17405
((lp17406
S'int32'
p17407
ag11
a((S'taskHandle'
p17408
(lp17409
S'TaskHandle'
p17410
aNtp17411
(S'channel'
p17412
(lp17413
S'char'
p17414
a(lp17415
I-1
aaNtp17416
(S'data'
p17417
(lp17418
S'bool32'
p17419
aNtp17420
tp17421
tp17422
sS'DAQmxGetCIPulseWidthDigFltrTimebaseRate'
p17423
((lp17424
S'int32'
p17425
ag11
a((S'taskHandle'
p17426
(lp17427
S'TaskHandle'
p17428
aNtp17429
(S'channel'
p17430
(lp17431
S'char'
p17432
a(lp17433
I-1
aaNtp17434
(S'data'
p17435
(lp17436
S'float64'
p17437
ag19
aNtp17438
tp17439
tp17440
sS'DAQmxResetAIThrmstrA'
p17441
((lp17442
S'int32'
p17443
ag11
a((S'taskHandle'
p17444
(lp17445
S'TaskHandle'
p17446
aNtp17447
(S'channel'
p17448
(lp17449
S'char'
p17450
a(lp17451
I-1
aaNtp17452
tp17453
tp17454
sS'DAQmxResetAIThrmstrB'
p17455
((lp17456
S'int32'
p17457
ag11
a((S'taskHandle'
p17458
(lp17459
S'TaskHandle'
p17460
aNtp17461
(S'channel'
p17462
(lp17463
S'char'
p17464
a(lp17465
I-1
aaNtp17466
tp17467
tp17468
sS'DAQmxResetAIThrmstrC'
p17469
((lp17470
S'int32'
p17471
ag11
a((S'taskHandle'
p17472
(lp17473
S'TaskHandle'
p17474
aNtp17475
(S'channel'
p17476
(lp17477
S'char'
p17478
a(lp17479
I-1
aaNtp17480
tp17481
tp17482
sS'DAQmxGetCIEncoderZIndexPhase'
p17483
((lp17484
S'int32'
p17485
ag11
a((S'taskHandle'
p17486
(lp17487
S'TaskHandle'
p17488
aNtp17489
(S'channel'
p17490
(lp17491
S'char'
p17492
a(lp17493
I-1
aaNtp17494
(S'data'
p17495
(lp17496
S'int32'
p17497
ag19
aNtp17498
tp17499
tp17500
sS'DAQmxSetAIACExcitFreq'
p17501
((lp17502
S'int32'
p17503
ag11
a((S'taskHandle'
p17504
(lp17505
S'TaskHandle'
p17506
aNtp17507
(S'channel'
p17508
(lp17509
S'char'
p17510
a(lp17511
I-1
aaNtp17512
(S'data'
p17513
(lp17514
S'float64'
p17515
aNtp17516
tp17517
tp17518
sS'DAQmxGetDIDigFltrEnable'
p17519
((lp17520
S'int32'
p17521
ag11
a((S'taskHandle'
p17522
(lp17523
S'TaskHandle'
p17524
aNtp17525
(S'channel'
p17526
(lp17527
S'char'
p17528
a(lp17529
I-1
aaNtp17530
(S'data'
p17531
(lp17532
S'bool32'
p17533
ag19
aNtp17534
tp17535
tp17536
sS'DAQmxSetAIChanCalExpDate'
p17537
((lp17538
S'int32'
p17539
ag11
a((S'taskHandle'
p17540
(lp17541
S'TaskHandle'
p17542
aNtp17543
(S'channelName'
p17544
(lp17545
S'char'
p17546
a(lp17547
I-1
aaNtp17548
(S'year'
p17549
(lp17550
S'uInt32'
p17551
aNtp17552
(S'month'
p17553
(lp17554
S'uInt32'
p17555
aNtp17556
(S'day'
p17557
(lp17558
S'uInt32'
p17559
aNtp17560
(S'hour'
p17561
(lp17562
S'uInt32'
p17563
aNtp17564
(S'minute'
p17565
(lp17566
S'uInt32'
p17567
aNtp17568
tp17569
tp17570
sS'DAQmxGetPersistedChanAuthor'
p17571
((lp17572
S'int32'
p17573
ag11
a((S'channel'
p17574
(lp17575
S'char'
p17576
a(lp17577
I-1
aaNtp17578
(S'data'
p17579
(lp17580
S'char'
p17581
ag19
aNtp17582
(S'bufferSize'
p17583
(lp17584
S'uInt32'
p17585
aNtp17586
tp17587
tp17588
sS'DAQmxSwitchGetSingleRelayPos'
p17589
((lp17590
S'int32'
p17591
ag11
a((S'relayName'
p17592
(lp17593
S'char'
p17594
a(lp17595
I-1
aaNtp17596
(S'relayPos'
p17597
(lp17598
S'uInt32'
p17599
ag19
aNtp17600
tp17601
tp17602
sS'DAQmxResetDigPatternStartTrigSrc'
p17603
((lp17604
S'int32'
p17605
ag11
a((S'taskHandle'
p17606
(lp17607
S'TaskHandle'
p17608
aNtp17609
tp17610
tp17611
sS'DAQmxSetCIPeriodDiv'
p17612
((lp17613
S'int32'
p17614
ag11
a((S'taskHandle'
p17615
(lp17616
S'TaskHandle'
p17617
aNtp17618
(S'channel'
p17619
(lp17620
S'char'
p17621
a(lp17622
I-1
aaNtp17623
(S'data'
p17624
(lp17625
S'uInt32'
p17626
aNtp17627
tp17628
tp17629
sS'DAQmxWriteDigitalU32'
p17630
((lp17631
S'int32'
p17632
ag11
a((S'taskHandle'
p17633
(lp17634
S'TaskHandle'
p17635
aNtp17636
(S'numSampsPerChan'
p17637
(lp17638
S'int32'
p17639
aNtp17640
(S'autoStart'
p17641
(lp17642
S'bool32'
p17643
aNtp17644
(S'timeout'
p17645
(lp17646
S'float64'
p17647
aNtp17648
(S'dataLayout'
p17649
(lp17650
S'bool32'
p17651
aNtp17652
(S'writeArray'
p17653
(lp17654
S'uInt32'
p17655
a(lp17656
I-1
aaNtp17657
(S'sampsPerChanWritten'
p17658
(lp17659
S'int32'
p17660
ag19
aNtp17661
(S'reserved'
p17662
(lp17663
S'bool32'
p17664
ag19
aNtp17665
tp17666
tp17667
sS'DAQmxGetSwitchScanRepeatMode'
p17668
((lp17669
S'int32'
p17670
ag11
a((S'taskHandle'
p17671
(lp17672
S'TaskHandle'
p17673
aNtp17674
(S'data'
p17675
(lp17676
S'int32'
p17677
ag19
aNtp17678
tp17679
tp17680
sS'DAQmxResetCILinEncoderUnits'
p17681
((lp17682
S'int32'
p17683
ag11
a((S'taskHandle'
p17684
(lp17685
S'TaskHandle'
p17686
aNtp17687
(S'channel'
p17688
(lp17689
S'char'
p17690
a(lp17691
I-1
aaNtp17692
tp17693
tp17694
sS'DAQmxSetCIPulseWidthDigFltrTimebaseRate'
p17695
((lp17696
S'int32'
p17697
ag11
a((S'taskHandle'
p17698
(lp17699
S'TaskHandle'
p17700
aNtp17701
(S'channel'
p17702
(lp17703
S'char'
p17704
a(lp17705
I-1
aaNtp17706
(S'data'
p17707
(lp17708
S'float64'
p17709
aNtp17710
tp17711
tp17712
sS'DAQmxSetChanDescr'
p17713
((lp17714
S'int32'
p17715
ag11
a((S'taskHandle'
p17716
(lp17717
S'TaskHandle'
p17718
aNtp17719
(S'channel'
p17720
(lp17721
S'char'
p17722
a(lp17723
I-1
aaNtp17724
(S'data'
p17725
(lp17726
S'char'
p17727
ag19
aNtp17728
tp17729
tp17730
sS'DAQmxGetRefClkSrc'
p17731
((lp17732
S'int32'
p17733
ag11
a((S'taskHandle'
p17734
(lp17735
S'TaskHandle'
p17736
aNtp17737
(S'data'
p17738
(lp17739
S'char'
p17740
ag19
aNtp17741
(S'bufferSize'
p17742
(lp17743
S'uInt32'
p17744
aNtp17745
tp17746
tp17747
sS'DAQmxResetDigEdgeAdvTrigEdge'
p17748
((lp17749
S'int32'
p17750
ag11
a((S'taskHandle'
p17751
(lp17752
S'TaskHandle'
p17753
aNtp17754
tp17755
tp17756
sS'DAQmxResetAIExcitVoltageOrCurrent'
p17757
((lp17758
S'int32'
p17759
ag11
a((S'taskHandle'
p17760
(lp17761
S'TaskHandle'
p17762
aNtp17763
(S'channel'
p17764
(lp17765
S'char'
p17766
a(lp17767
I-1
aaNtp17768
tp17769
tp17770
sS'DAQmxSetDigPatternRefTrigWhen'
p17771
((lp17772
S'int32'
p17773
ag11
a((S'taskHandle'
p17774
(lp17775
S'TaskHandle'
p17776
aNtp17777
(S'data'
p17778
(lp17779
S'int32'
p17780
aNtp17781
tp17782
tp17783
sS'DAQmxGetAnlgWinRefTrigCoupling'
p17784
((lp17785
S'int32'
p17786
ag11
a((S'taskHandle'
p17787
(lp17788
S'TaskHandle'
p17789
aNtp17790
(S'data'
p17791
(lp17792
S'int32'
p17793
ag19
aNtp17794
tp17795
tp17796
sS'DAQmxGetBufOutputBufSize'
p17797
((lp17798
S'int32'
p17799
ag11
a((S'taskHandle'
p17800
(lp17801
S'TaskHandle'
p17802
aNtp17803
(S'data'
p17804
(lp17805
S'uInt32'
p17806
ag19
aNtp17807
tp17808
tp17809
sS'DAQmxSetCIEncoderZIndexVal'
p17810
((lp17811
S'int32'
p17812
ag11
a((S'taskHandle'
p17813
(lp17814
S'TaskHandle'
p17815
aNtp17816
(S'channel'
p17817
(lp17818
S'char'
p17819
a(lp17820
I-1
aaNtp17821
(S'data'
p17822
(lp17823
S'float64'
p17824
aNtp17825
tp17826
tp17827
sS'DAQmxResetAIAccelUnits'
p17828
((lp17829
S'int32'
p17830
ag11
a((S'taskHandle'
p17831
(lp17832
S'TaskHandle'
p17833
aNtp17834
(S'channel'
p17835
(lp17836
S'char'
p17837
a(lp17838
I-1
aaNtp17839
tp17840
tp17841
sS'DAQmxGetExportedAIHoldCmpltEventOutputTerm'
p17842
((lp17843
S'int32'
p17844
ag11
a((S'taskHandle'
p17845
(lp17846
S'TaskHandle'
p17847
aNtp17848
(S'data'
p17849
(lp17850
S'char'
p17851
ag19
aNtp17852
(S'bufferSize'
p17853
(lp17854
S'uInt32'
p17855
aNtp17856
tp17857
tp17858
sS'DAQmxResetInterlockedHshkTrigSrc'
p17859
((lp17860
S'int32'
p17861
ag11
a((S'taskHandle'
p17862
(lp17863
S'TaskHandle'
p17864
aNtp17865
tp17866
tp17867
sS'DAQmxCreateAIPosRVDTChan'
p17868
((lp17869
S'int32'
p17870
ag11
a((S'taskHandle'
p17871
(lp17872
S'TaskHandle'
p17873
aNtp17874
(S'physicalChannel'
p17875
(lp17876
S'char'
p17877
a(lp17878
I-1
aaNtp17879
(S'nameToAssignToChannel'
p17880
(lp17881
S'char'
p17882
a(lp17883
I-1
aaNtp17884
(S'minVal'
p17885
(lp17886
S'float64'
p17887
aNtp17888
(S'maxVal'
p17889
(lp17890
S'float64'
p17891
aNtp17892
(S'units'
p17893
(lp17894
S'int32'
p17895
aNtp17896
(S'sensitivity'
p17897
(lp17898
S'float64'
p17899
aNtp17900
(S'sensitivityUnits'
p17901
(lp17902
S'int32'
p17903
aNtp17904
(S'voltageExcitSource'
p17905
(lp17906
S'int32'
p17907
aNtp17908
(S'voltageExcitVal'
p17909
(lp17910
S'float64'
p17911
aNtp17912
(S'voltageExcitFreq'
p17913
(lp17914
S'float64'
p17915
aNtp17916
(S'ACExcitWireMode'
p17917
(lp17918
S'int32'
p17919
aNtp17920
(S'customScaleName'
p17921
(lp17922
S'char'
p17923
a(lp17924
I-1
aaNtp17925
tp17926
tp17927
sS'DAQmxResetCICtrTimebaseDigFltrTimebaseSrc'
p17928
((lp17929
S'int32'
p17930
ag11
a((S'taskHandle'
p17931
(lp17932
S'TaskHandle'
p17933
aNtp17934
(S'channel'
p17935
(lp17936
S'char'
p17937
a(lp17938
I-1
aaNtp17939
tp17940
tp17941
sS'DAQmxResetCIFreqDigFltrMinPulseWidth'
p17942
((lp17943
S'int32'
p17944
ag11
a((S'taskHandle'
p17945
(lp17946
S'TaskHandle'
p17947
aNtp17948
(S'channel'
p17949
(lp17950
S'char'
p17951
a(lp17952
I-1
aaNtp17953
tp17954
tp17955
sS'DAQmxGetAIChanCalPolyForwardCoeff'
p17956
((lp17957
S'int32'
p17958
ag11
a((S'taskHandle'
p17959
(lp17960
S'TaskHandle'
p17961
aNtp17962
(S'channel'
p17963
(lp17964
S'char'
p17965
a(lp17966
I-1
aaNtp17967
(S'data'
p17968
(lp17969
S'float64'
p17970
ag19
aNtp17971
(S'arraySizeInSamples'
p17972
(lp17973
S'uInt32'
p17974
aNtp17975
tp17976
tp17977
sS'DAQmxCreateCOPulseChanTime'
p17978
((lp17979
S'int32'
p17980
ag11
a((S'taskHandle'
p17981
(lp17982
S'TaskHandle'
p17983
aNtp17984
(S'counter'
p17985
(lp17986
S'char'
p17987
a(lp17988
I-1
aaNtp17989
(S'nameToAssignToChannel'
p17990
(lp17991
S'char'
p17992
a(lp17993
I-1
aaNtp17994
(S'units'
p17995
(lp17996
S'int32'
p17997
aNtp17998
(S'idleState'
p17999
(lp18000
S'int32'
p18001
aNtp18002
(S'initialDelay'
p18003
(lp18004
S'float64'
p18005
aNtp18006
(S'lowTime'
p18007
(lp18008
S'float64'
p18009
aNtp18010
(S'highTime'
p18011
(lp18012
S'float64'
p18013
aNtp18014
tp18015
tp18016
sS'DAQmxSetExported20MHzTimebaseOutputTerm'
p18017
((lp18018
S'int32'
p18019
ag11
a((S'taskHandle'
p18020
(lp18021
S'TaskHandle'
p18022
aNtp18023
(S'data'
p18024
(lp18025
S'char'
p18026
ag19
aNtp18027
tp18028
tp18029
sS'DAQmxSetCITwoEdgeSepSecondEdge'
p18030
((lp18031
S'int32'
p18032
ag11
a((S'taskHandle'
p18033
(lp18034
S'TaskHandle'
p18035
aNtp18036
(S'channel'
p18037
(lp18038
S'char'
p18039
a(lp18040
I-1
aaNtp18041
(S'data'
p18042
(lp18043
S'int32'
p18044
aNtp18045
tp18046
tp18047
sS'DAQmxResetAIRTDR0'
p18048
((lp18049
S'int32'
p18050
ag11
a((S'taskHandle'
p18051
(lp18052
S'TaskHandle'
p18053
aNtp18054
(S'channel'
p18055
(lp18056
S'char'
p18057
a(lp18058
I-1
aaNtp18059
tp18060
tp18061
sS'DAQmxResetCIPulseWidthUnits'
p18062
((lp18063
S'int32'
p18064
ag11
a((S'taskHandle'
p18065
(lp18066
S'TaskHandle'
p18067
aNtp18068
(S'channel'
p18069
(lp18070
S'char'
p18071
a(lp18072
I-1
aaNtp18073
tp18074
tp18075
sS'DAQmxSetAIBridgeShuntCalSelect'
p18076
((lp18077
S'int32'
p18078
ag11
a((S'taskHandle'
p18079
(lp18080
S'TaskHandle'
p18081
aNtp18082
(S'channel'
p18083
(lp18084
S'char'
p18085
a(lp18086
I-1
aaNtp18087
(S'data'
p18088
(lp18089
S'int32'
p18090
aNtp18091
tp18092
tp18093
sS'DAQmxGetHshkTrigType'
p18094
((lp18095
S'int32'
p18096
ag11
a((S'taskHandle'
p18097
(lp18098
S'TaskHandle'
p18099
aNtp18100
(S'data'
p18101
(lp18102
S'int32'
p18103
ag19
aNtp18104
tp18105
tp18106
sS'DAQmxGetAIGain'
p18107
((lp18108
S'int32'
p18109
ag11
a((S'taskHandle'
p18110
(lp18111
S'TaskHandle'
p18112
aNtp18113
(S'channel'
p18114
(lp18115
S'char'
p18116
a(lp18117
I-1
aaNtp18118
(S'data'
p18119
(lp18120
S'float64'
p18121
ag19
aNtp18122
tp18123
tp18124
sS'DAQmxSetAnlgWinPauseTrigSrc'
p18125
((lp18126
S'int32'
p18127
ag11
a((S'taskHandle'
p18128
(lp18129
S'TaskHandle'
p18130
aNtp18131
(S'data'
p18132
(lp18133
S'char'
p18134
ag19
aNtp18135
tp18136
tp18137
sS'DAQmxGetCICountEdgesCountDirDigFltrEnable'
p18138
((lp18139
S'int32'
p18140
ag11
a((S'taskHandle'
p18141
(lp18142
S'TaskHandle'
p18143
aNtp18144
(S'channel'
p18145
(lp18146
S'char'
p18147
a(lp18148
I-1
aaNtp18149
(S'data'
p18150
(lp18151
S'bool32'
p18152
ag19
aNtp18153
tp18154
tp18155
sS'DAQmxResetAIStrainGagePoissonRatio'
p18156
((lp18157
S'int32'
p18158
ag11
a((S'taskHandle'
p18159
(lp18160
S'TaskHandle'
p18161
aNtp18162
(S'channel'
p18163
(lp18164
S'char'
p18165
a(lp18166
I-1
aaNtp18167
tp18168
tp18169
sS'DAQmxGetAOTermCfg'
p18170
((lp18171
S'int32'
p18172
ag11
a((S'taskHandle'
p18173
(lp18174
S'TaskHandle'
p18175
aNtp18176
(S'channel'
p18177
(lp18178
S'char'
p18179
a(lp18180
I-1
aaNtp18181
(S'data'
p18182
(lp18183
S'int32'
p18184
ag19
aNtp18185
tp18186
tp18187
sS'DAQmxGetAODACRefVal'
p18188
((lp18189
S'int32'
p18190
ag11
a((S'taskHandle'
p18191
(lp18192
S'TaskHandle'
p18193
aNtp18194
(S'channel'
p18195
(lp18196
S'char'
p18197
a(lp18198
I-1
aaNtp18199
(S'data'
p18200
(lp18201
S'float64'
p18202
ag19
aNtp18203
tp18204
tp18205
sS'DAQmxSetExportedHshkEventPulseWidth'
p18206
((lp18207
S'int32'
p18208
ag11
a((S'taskHandle'
p18209
(lp18210
S'TaskHandle'
p18211
aNtp18212
(S'data'
p18213
(lp18214
S'float64'
p18215
aNtp18216
tp18217
tp18218
sS'DAQmxGetCISemiPeriodDigFltrTimebaseSrc'
p18219
((lp18220
S'int32'
p18221
ag11
a((S'taskHandle'
p18222
(lp18223
S'TaskHandle'
p18224
aNtp18225
(S'channel'
p18226
(lp18227
S'char'
p18228
a(lp18229
I-1
aaNtp18230
(S'data'
p18231
(lp18232
S'char'
p18233
ag19
aNtp18234
(S'bufferSize'
p18235
(lp18236
S'uInt32'
p18237
aNtp18238
tp18239
tp18240
sS'DAQmxWriteDigitalU8'
p18241
((lp18242
S'int32'
p18243
ag11
a((S'taskHandle'
p18244
(lp18245
S'TaskHandle'
p18246
aNtp18247
(S'numSampsPerChan'
p18248
(lp18249
S'int32'
p18250
aNtp18251
(S'autoStart'
p18252
(lp18253
S'bool32'
p18254
aNtp18255
(S'timeout'
p18256
(lp18257
S'float64'
p18258
aNtp18259
(S'dataLayout'
p18260
(lp18261
S'bool32'
p18262
aNtp18263
(S'writeArray'
p18264
(lp18265
S'uInt8'
p18266
a(lp18267
I-1
aaNtp18268
(S'sampsPerChanWritten'
p18269
(lp18270
S'int32'
p18271
ag19
aNtp18272
(S'reserved'
p18273
(lp18274
S'bool32'
p18275
ag19
aNtp18276
tp18277
tp18278
sS'DAQmxSetDigPatternRefTrigSrc'
p18279
((lp18280
S'int32'
p18281
ag11
a((S'taskHandle'
p18282
(lp18283
S'TaskHandle'
p18284
aNtp18285
(S'data'
p18286
(lp18287
S'char'
p18288
ag19
aNtp18289
tp18290
tp18291
sS'DAQmxWriteDigitalScalarU32'
p18292
((lp18293
S'int32'
p18294
ag11
a((S'taskHandle'
p18295
(lp18296
S'TaskHandle'
p18297
aNtp18298
(S'autoStart'
p18299
(lp18300
S'bool32'
p18301
aNtp18302
(S'timeout'
p18303
(lp18304
S'float64'
p18305
aNtp18306
(S'value'
p18307
(lp18308
S'uInt32'
p18309
aNtp18310
(S'reserved'
p18311
(lp18312
S'bool32'
p18313
ag19
aNtp18314
tp18315
tp18316
sS'DAQmxGetExportedAdvCmpltEventDelay'
p18317
((lp18318
S'int32'
p18319
ag11
a((S'taskHandle'
p18320
(lp18321
S'TaskHandle'
p18322
aNtp18323
(S'data'
p18324
(lp18325
S'float64'
p18326
ag19
aNtp18327
tp18328
tp18329
sS'DAQmxGetAIAutoZeroMode'
p18330
((lp18331
S'int32'
p18332
ag11
a((S'taskHandle'
p18333
(lp18334
S'TaskHandle'
p18335
aNtp18336
(S'channel'
p18337
(lp18338
S'char'
p18339
a(lp18340
I-1
aaNtp18341
(S'data'
p18342
(lp18343
S'int32'
p18344
ag19
aNtp18345
tp18346
tp18347
sS'DAQmxCreateAIThrmstrChanVex'
p18348
((lp18349
S'int32'
p18350
ag11
a((S'taskHandle'
p18351
(lp18352
S'TaskHandle'
p18353
aNtp18354
(S'physicalChannel'
p18355
(lp18356
S'char'
p18357
a(lp18358
I-1
aaNtp18359
(S'nameToAssignToChannel'
p18360
(lp18361
S'char'
p18362
a(lp18363
I-1
aaNtp18364
(S'minVal'
p18365
(lp18366
S'float64'
p18367
aNtp18368
(S'maxVal'
p18369
(lp18370
S'float64'
p18371
aNtp18372
(S'units'
p18373
(lp18374
S'int32'
p18375
aNtp18376
(S'resistanceConfig'
p18377
(lp18378
S'int32'
p18379
aNtp18380
(S'voltageExcitSource'
p18381
(lp18382
S'int32'
p18383
aNtp18384
(S'voltageExcitVal'
p18385
(lp18386
S'float64'
p18387
aNtp18388
(S'a'
p18389
(lp18390
S'float64'
p18391
aNtp18392
(S'b'
p18393
(lp18394
S'float64'
p18395
aNtp18396
(S'c'
p18397
(lp18398
S'float64'
p18399
aNtp18400
(S'r1'
p18401
(lp18402
S'float64'
p18403
aNtp18404
tp18405
tp18406
sS'DAQmxResetSampTimingType'
p18407
((lp18408
S'int32'
p18409
ag11
a((S'taskHandle'
p18410
(lp18411
S'TaskHandle'
p18412
aNtp18413
tp18414
tp18415
sS'DAQmxSetCILinEncoderDistPerPulse'
p18416
((lp18417
S'int32'
p18418
ag11
a((S'taskHandle'
p18419
(lp18420
S'TaskHandle'
p18421
aNtp18422
(S'channel'
p18423
(lp18424
S'char'
p18425
a(lp18426
I-1
aaNtp18427
(S'data'
p18428
(lp18429
S'float64'
p18430
aNtp18431
tp18432
tp18433
sS'DAQmxGetCIMin'
p18434
((lp18435
S'int32'
p18436
ag11
a((S'taskHandle'
p18437
(lp18438
S'TaskHandle'
p18439
aNtp18440
(S'channel'
p18441
(lp18442
S'char'
p18443
a(lp18444
I-1
aaNtp18445
(S'data'
p18446
(lp18447
S'float64'
p18448
ag19
aNtp18449
tp18450
tp18451
sS'DAQmxSetCIPeriodDigFltrMinPulseWidth'
p18452
((lp18453
S'int32'
p18454
ag11
a((S'taskHandle'
p18455
(lp18456
S'TaskHandle'
p18457
aNtp18458
(S'channel'
p18459
(lp18460
S'char'
p18461
a(lp18462
I-1
aaNtp18463
(S'data'
p18464
(lp18465
S'float64'
p18466
aNtp18467
tp18468
tp18469
sS'DAQmxGetAIVoltageUnits'
p18470
((lp18471
S'int32'
p18472
ag11
a((S'taskHandle'
p18473
(lp18474
S'TaskHandle'
p18475
aNtp18476
(S'channel'
p18477
(lp18478
S'char'
p18479
a(lp18480
I-1
aaNtp18481
(S'data'
p18482
(lp18483
S'int32'
p18484
ag19
aNtp18485
tp18486
tp18487
sS'DAQmxReadAnalogF64'
p18488
((lp18489
S'int32'
p18490
ag11
a((S'taskHandle'
p18491
(lp18492
S'TaskHandle'
p18493
aNtp18494
(S'numSampsPerChan'
p18495
(lp18496
S'int32'
p18497
aNtp18498
(S'timeout'
p18499
(lp18500
S'float64'
p18501
aNtp18502
(S'fillMode'
p18503
(lp18504
S'bool32'
p18505
aNtp18506
(S'readArray'
p18507
(lp18508
S'float64'
p18509
a(lp18510
I-1
aaNtp18511
(S'arraySizeInSamps'
p18512
(lp18513
S'uInt32'
p18514
aNtp18515
(S'sampsPerChanRead'
p18516
(lp18517
S'int32'
p18518
ag19
aNtp18519
(S'reserved'
p18520
(lp18521
S'bool32'
p18522
ag19
aNtp18523
tp18524
tp18525
sS'DAQmxGetCIEncoderZInputDigFltrMinPulseWidth'
p18526
((lp18527
S'int32'
p18528
ag11
a((S'taskHandle'
p18529
(lp18530
S'TaskHandle'
p18531
aNtp18532
(S'channel'
p18533
(lp18534
S'char'
p18535
a(lp18536
I-1
aaNtp18537
(S'data'
p18538
(lp18539
S'float64'
p18540
ag19
aNtp18541
tp18542
tp18543
sS'DAQmxSetCICountEdgesDigFltrTimebaseRate'
p18544
((lp18545
S'int32'
p18546
ag11
a((S'taskHandle'
p18547
(lp18548
S'TaskHandle'
p18549
aNtp18550
(S'channel'
p18551
(lp18552
S'char'
p18553
a(lp18554
I-1
aaNtp18555
(S'data'
p18556
(lp18557
S'float64'
p18558
aNtp18559
tp18560
tp18561
sS'DAQmxSetCICtrTimebaseDigFltrMinPulseWidth'
p18562
((lp18563
S'int32'
p18564
ag11
a((S'taskHandle'
p18565
(lp18566
S'TaskHandle'
p18567
aNtp18568
(S'channel'
p18569
(lp18570
S'char'
p18571
a(lp18572
I-1
aaNtp18573
(S'data'
p18574
(lp18575
S'float64'
p18576
aNtp18577
tp18578
tp18579
sS'DAQmxGetDigLvlPauseTrigDigSyncEnable'
p18580
((lp18581
S'int32'
p18582
ag11
a((S'taskHandle'
p18583
(lp18584
S'TaskHandle'
p18585
aNtp18586
(S'data'
p18587
(lp18588
S'bool32'
p18589
ag19
aNtp18590
tp18591
tp18592
sS'DAQmxGetAnlgWinStartTrigBtm'
p18593
((lp18594
S'int32'
p18595
ag11
a((S'taskHandle'
p18596
(lp18597
S'TaskHandle'
p18598
aNtp18599
(S'data'
p18600
(lp18601
S'float64'
p18602
ag19
aNtp18603
tp18604
tp18605
sS'DAQmxSetCILinEncoderUnits'
p18606
((lp18607
S'int32'
p18608
ag11
a((S'taskHandle'
p18609
(lp18610
S'TaskHandle'
p18611
aNtp18612
(S'channel'
p18613
(lp18614
S'char'
p18615
a(lp18616
I-1
aaNtp18617
(S'data'
p18618
(lp18619
S'int32'
p18620
aNtp18621
tp18622
tp18623
sS'DAQmxGetCIPeriodStartingEdge'
p18624
((lp18625
S'int32'
p18626
ag11
a((S'taskHandle'
p18627
(lp18628
S'TaskHandle'
p18629
aNtp18630
(S'channel'
p18631
(lp18632
S'char'
p18633
a(lp18634
I-1
aaNtp18635
(S'data'
p18636
(lp18637
S'int32'
p18638
ag19
aNtp18639
tp18640
tp18641
sS'DAQmxGetCICtrTimebaseDigFltrEnable'
p18642
((lp18643
S'int32'
p18644
ag11
a((S'taskHandle'
p18645
(lp18646
S'TaskHandle'
p18647
aNtp18648
(S'channel'
p18649
(lp18650
S'char'
p18651
a(lp18652
I-1
aaNtp18653
(S'data'
p18654
(lp18655
S'bool32'
p18656
ag19
aNtp18657
tp18658
tp18659
sS'DAQmxSetCOPulseTerm'
p18660
((lp18661
S'int32'
p18662
ag11
a((S'taskHandle'
p18663
(lp18664
S'TaskHandle'
p18665
aNtp18666
(S'channel'
p18667
(lp18668
S'char'
p18669
a(lp18670
I-1
aaNtp18671
(S'data'
p18672
(lp18673
S'char'
p18674
ag19
aNtp18675
tp18676
tp18677
sS'DAQmxGetAIThrmcplType'
p18678
((lp18679
S'int32'
p18680
ag11
a((S'taskHandle'
p18681
(lp18682
S'TaskHandle'
p18683
aNtp18684
(S'channel'
p18685
(lp18686
S'char'
p18687
a(lp18688
I-1
aaNtp18689
(S'data'
p18690
(lp18691
S'int32'
p18692
ag19
aNtp18693
tp18694
tp18695
sS'DAQmxGetSwitchDevAutoConnAnlgBus'
p18696
((lp18697
S'int32'
p18698
ag11
a((S'deviceName'
p18699
(lp18700
S'char'
p18701
a(lp18702
I-1
aaNtp18703
(S'data'
p18704
(lp18705
S'bool32'
p18706
ag19
aNtp18707
tp18708
tp18709
sS'DAQmxGetAISoundPressureUnits'
p18710
((lp18711
S'int32'
p18712
ag11
a((S'taskHandle'
p18713
(lp18714
S'TaskHandle'
p18715
aNtp18716
(S'channel'
p18717
(lp18718
S'char'
p18719
a(lp18720
I-1
aaNtp18721
(S'data'
p18722
(lp18723
S'int32'
p18724
ag19
aNtp18725
tp18726
tp18727
sS'DAQmxGetAIExcitUseForScaling'
p18728
((lp18729
S'int32'
p18730
ag11
a((S'taskHandle'
p18731
(lp18732
S'TaskHandle'
p18733
aNtp18734
(S'channel'
p18735
(lp18736
S'char'
p18737
a(lp18738
I-1
aaNtp18739
(S'data'
p18740
(lp18741
S'bool32'
p18742
ag19
aNtp18743
tp18744
tp18745
sS'DAQmxReadCounterU32'
p18746
((lp18747
S'int32'
p18748
ag11
a((S'taskHandle'
p18749
(lp18750
S'TaskHandle'
p18751
aNtp18752
(S'numSampsPerChan'
p18753
(lp18754
S'int32'
p18755
aNtp18756
(S'timeout'
p18757
(lp18758
S'float64'
p18759
aNtp18760
(S'readArray'
p18761
(lp18762
S'uInt32'
p18763
a(lp18764
I-1
aaNtp18765
(S'arraySizeInSamps'
p18766
(lp18767
S'uInt32'
p18768
aNtp18769
(S'sampsPerChanRead'
p18770
(lp18771
S'int32'
p18772
ag19
aNtp18773
(S'reserved'
p18774
(lp18775
S'bool32'
p18776
ag19
aNtp18777
tp18778
tp18779
sS'DAQmxSetHshkDelayAfterXfer'
p18780
((lp18781
S'int32'
p18782
ag11
a((S'taskHandle'
p18783
(lp18784
S'TaskHandle'
p18785
aNtp18786
(S'data'
p18787
(lp18788
S'float64'
p18789
aNtp18790
tp18791
tp18792
sS'DAQmxGetDigPatternRefTrigSrc'
p18793
((lp18794
S'int32'
p18795
ag11
a((S'taskHandle'
p18796
(lp18797
S'TaskHandle'
p18798
aNtp18799
(S'data'
p18800
(lp18801
S'char'
p18802
ag19
aNtp18803
(S'bufferSize'
p18804
(lp18805
S'uInt32'
p18806
aNtp18807
tp18808
tp18809
sS'DAQmxResetExportedHshkEventOutputTerm'
p18810
((lp18811
S'int32'
p18812
ag11
a((S'taskHandle'
p18813
(lp18814
S'TaskHandle'
p18815
aNtp18816
tp18817
tp18818
sS'DAQmxGetCISemiPeriodDigFltrTimebaseRate'
p18819
((lp18820
S'int32'
p18821
ag11
a((S'taskHandle'
p18822
(lp18823
S'TaskHandle'
p18824
aNtp18825
(S'channel'
p18826
(lp18827
S'char'
p18828
a(lp18829
I-1
aaNtp18830
(S'data'
p18831
(lp18832
S'float64'
p18833
ag19
aNtp18834
tp18835
tp18836
sS'DAQmxCfgSampClkTiming'
p18837
((lp18838
S'int32'
p18839
ag11
a((S'taskHandle'
p18840
(lp18841
S'TaskHandle'
p18842
aNtp18843
(S'source'
p18844
(lp18845
S'char'
p18846
a(lp18847
I-1
aaNtp18848
(S'rate'
p18849
(lp18850
S'float64'
p18851
aNtp18852
(S'activeEdge'
p18853
(lp18854
S'int32'
p18855
aNtp18856
(S'sampleMode'
p18857
(lp18858
S'int32'
p18859
aNtp18860
(S'sampsPerChan'
p18861
(lp18862
S'uInt64'
p18863
aNtp18864
tp18865
tp18866
sS'DAQmxReadDigitalU8'
p18867
((lp18868
S'int32'
p18869
ag11
a((S'taskHandle'
p18870
(lp18871
S'TaskHandle'
p18872
aNtp18873
(S'numSampsPerChan'
p18874
(lp18875
S'int32'
p18876
aNtp18877
(S'timeout'
p18878
(lp18879
S'float64'
p18880
aNtp18881
(S'fillMode'
p18882
(lp18883
S'bool32'
p18884
aNtp18885
(S'readArray'
p18886
(lp18887
S'uInt8'
p18888
a(lp18889
I-1
aaNtp18890
(S'arraySizeInSamps'
p18891
(lp18892
S'uInt32'
p18893
aNtp18894
(S'sampsPerChanRead'
p18895
(lp18896
S'int32'
p18897
ag19
aNtp18898
(S'reserved'
p18899
(lp18900
S'bool32'
p18901
ag19
aNtp18902
tp18903
tp18904
sS'DAQmxGetAIConvRate'
p18905
((lp18906
S'int32'
p18907
ag11
a((S'taskHandle'
p18908
(lp18909
S'TaskHandle'
p18910
aNtp18911
(S'data'
p18912
(lp18913
S'float64'
p18914
ag19
aNtp18915
tp18916
tp18917
sS'DAQmxSetDIDataXferMech'
p18918
((lp18919
S'int32'
p18920
ag11
a((S'taskHandle'
p18921
(lp18922
S'TaskHandle'
p18923
aNtp18924
(S'channel'
p18925
(lp18926
S'char'
p18927
a(lp18928
I-1
aaNtp18929
(S'data'
p18930
(lp18931
S'int32'
p18932
aNtp18933
tp18934
tp18935
sS'DAQmxGetSampClkTimebaseRate'
p18936
((lp18937
S'int32'
p18938
ag11
a((S'taskHandle'
p18939
(lp18940
S'TaskHandle'
p18941
aNtp18942
(S'data'
p18943
(lp18944
S'float64'
p18945
ag19
aNtp18946
tp18947
tp18948
sS'DAQmxResetCIFreqMeasMeth'
p18949
((lp18950
S'int32'
p18951
ag11
a((S'taskHandle'
p18952
(lp18953
S'TaskHandle'
p18954
aNtp18955
(S'channel'
p18956
(lp18957
S'char'
p18958
a(lp18959
I-1
aaNtp18960
tp18961
tp18962
sS'DAQmxDisableStartTrig'
p18963
((lp18964
S'int32'
p18965
ag11
a((S'taskHandle'
p18966
(lp18967
S'TaskHandle'
p18968
aNtp18969
tp18970
tp18971
sS'DAQmxSetExportedSampClkOutputBehavior'
p18972
((lp18973
S'int32'
p18974
ag11
a((S'taskHandle'
p18975
(lp18976
S'TaskHandle'
p18977
aNtp18978
(S'data'
p18979
(lp18980
S'int32'
p18981
aNtp18982
tp18983
tp18984
sS'DAQmxGetReadOverWrite'
p18985
((lp18986
S'int32'
p18987
ag11
a((S'taskHandle'
p18988
(lp18989
S'TaskHandle'
p18990
aNtp18991
(S'data'
p18992
(lp18993
S'int32'
p18994
ag19
aNtp18995
tp18996
tp18997
sS'DAQmxCreateTEDSAIPosLVDTChan'
p18998
((lp18999
S'int32'
p19000
ag11
a((S'taskHandle'
p19001
(lp19002
S'TaskHandle'
p19003
aNtp19004
(S'physicalChannel'
p19005
(lp19006
S'char'
p19007
a(lp19008
I-1
aaNtp19009
(S'nameToAssignToChannel'
p19010
(lp19011
S'char'
p19012
a(lp19013
I-1
aaNtp19014
(S'minVal'
p19015
(lp19016
S'float64'
p19017
aNtp19018
(S'maxVal'
p19019
(lp19020
S'float64'
p19021
aNtp19022
(S'units'
p19023
(lp19024
S'int32'
p19025
aNtp19026
(S'voltageExcitSource'
p19027
(lp19028
S'int32'
p19029
aNtp19030
(S'voltageExcitVal'
p19031
(lp19032
S'float64'
p19033
aNtp19034
(S'voltageExcitFreq'
p19035
(lp19036
S'float64'
p19037
aNtp19038
(S'ACExcitWireMode'
p19039
(lp19040
S'int32'
p19041
aNtp19042
(S'customScaleName'
p19043
(lp19044
S'char'
p19045
a(lp19046
I-1
aaNtp19047
tp19048
tp19049
sS'DAQmxGetCILinEncoderInitialPos'
p19050
((lp19051
S'int32'
p19052
ag11
a((S'taskHandle'
p19053
(lp19054
S'TaskHandle'
p19055
aNtp19056
(S'channel'
p19057
(lp19058
S'char'
p19059
a(lp19060
I-1
aaNtp19061
(S'data'
p19062
(lp19063
S'float64'
p19064
ag19
aNtp19065
tp19066
tp19067
sS'DAQmxGetAIRngHigh'
p19068
((lp19069
S'int32'
p19070
ag11
a((S'taskHandle'
p19071
(lp19072
S'TaskHandle'
p19073
aNtp19074
(S'channel'
p19075
(lp19076
S'char'
p19077
a(lp19078
I-1
aaNtp19079
(S'data'
p19080
(lp19081
S'float64'
p19082
ag19
aNtp19083
tp19084
tp19085
sS'DAQmxResetCICtrTimebaseDigFltrTimebaseRate'
p19086
((lp19087
S'int32'
p19088
ag11
a((S'taskHandle'
p19089
(lp19090
S'TaskHandle'
p19091
aNtp19092
(S'channel'
p19093
(lp19094
S'char'
p19095
a(lp19096
I-1
aaNtp19097
tp19098
tp19099
sS'DAQmxGetCOPulseTerm'
p19100
((lp19101
S'int32'
p19102
ag11
a((S'taskHandle'
p19103
(lp19104
S'TaskHandle'
p19105
aNtp19106
(S'channel'
p19107
(lp19108
S'char'
p19109
a(lp19110
I-1
aaNtp19111
(S'data'
p19112
(lp19113
S'char'
p19114
ag19
aNtp19115
(S'bufferSize'
p19116
(lp19117
S'uInt32'
p19118
aNtp19119
tp19120
tp19121
sS'DAQmxGetDevPXISlotNum'
p19122
((lp19123
S'int32'
p19124
ag11
a((S'device'
p19125
(lp19126
S'char'
p19127
a(lp19128
I-1
aaNtp19129
(S'data'
p19130
(lp19131
S'uInt32'
p19132
ag19
aNtp19133
tp19134
tp19135
sS'DAQmxGetAIFreqHyst'
p19136
((lp19137
S'int32'
p19138
ag11
a((S'taskHandle'
p19139
(lp19140
S'TaskHandle'
p19141
aNtp19142
(S'channel'
p19143
(lp19144
S'char'
p19145
a(lp19146
I-1
aaNtp19147
(S'data'
p19148
(lp19149
S'float64'
p19150
ag19
aNtp19151
tp19152
tp19153
sS'DAQmxResetCIEncoderZInputDigFltrTimebaseRate'
p19154
((lp19155
S'int32'
p19156
ag11
a((S'taskHandle'
p19157
(lp19158
S'TaskHandle'
p19159
aNtp19160
(S'channel'
p19161
(lp19162
S'char'
p19163
a(lp19164
I-1
aaNtp19165
tp19166
tp19167
sS'DAQmxGetAnlgWinPauseTrigSrc'
p19168
((lp19169
S'int32'
p19170
ag11
a((S'taskHandle'
p19171
(lp19172
S'TaskHandle'
p19173
aNtp19174
(S'data'
p19175
(lp19176
S'char'
p19177
ag19
aNtp19178
(S'bufferSize'
p19179
(lp19180
S'uInt32'
p19181
aNtp19182
tp19183
tp19184
sS'DAQmxGetWriteRegenMode'
p19185
((lp19186
S'int32'
p19187
ag11
a((S'taskHandle'
p19188
(lp19189
S'TaskHandle'
p19190
aNtp19191
(S'data'
p19192
(lp19193
S'int32'
p19194
ag19
aNtp19195
tp19196
tp19197
sS'DAQmxResetDOTristate'
p19198
((lp19199
S'int32'
p19200
ag11
a((S'taskHandle'
p19201
(lp19202
S'TaskHandle'
p19203
aNtp19204
(S'channel'
p19205
(lp19206
S'char'
p19207
a(lp19208
I-1
aaNtp19209
tp19210
tp19211
sS'DAQmxResetCIPulseWidthStartingEdge'
p19212
((lp19213
S'int32'
p19214
ag11
a((S'taskHandle'
p19215
(lp19216
S'TaskHandle'
p19217
aNtp19218
(S'channel'
p19219
(lp19220
S'char'
p19221
a(lp19222
I-1
aaNtp19223
tp19224
tp19225
sS'DAQmxSetAIACExcitWireMode'
p19226
((lp19227
S'int32'
p19228
ag11
a((S'taskHandle'
p19229
(lp19230
S'TaskHandle'
p19231
aNtp19232
(S'channel'
p19233
(lp19234
S'char'
p19235
a(lp19236
I-1
aaNtp19237
(S'data'
p19238
(lp19239
S'int32'
p19240
aNtp19241
tp19242
tp19243
sS'DAQmxSetSwitchDevSettlingTime'
p19244
((lp19245
S'int32'
p19246
ag11
a((S'deviceName'
p19247
(lp19248
S'char'
p19249
a(lp19250
I-1
aaNtp19251
(S'data'
p19252
(lp19253
S'float64'
p19254
aNtp19255
tp19256
tp19257
sS'DAQmxResetAnlgEdgeRefTrigCoupling'
p19258
((lp19259
S'int32'
p19260
ag11
a((S'taskHandle'
p19261
(lp19262
S'TaskHandle'
p19263
aNtp19264
tp19265
tp19266
sS'DAQmxGetTaskName'
p19267
((lp19268
S'int32'
p19269
ag11
a((S'taskHandle'
p19270
(lp19271
S'TaskHandle'
p19272
aNtp19273
(S'data'
p19274
(lp19275
S'char'
p19276
ag19
aNtp19277
(S'bufferSize'
p19278
(lp19279
S'uInt32'
p19280
aNtp19281
tp19282
tp19283
sS'DAQmxSetCISemiPeriodDigSyncEnable'
p19284
((lp19285
S'int32'
p19286
ag11
a((S'taskHandle'
p19287
(lp19288
S'TaskHandle'
p19289
aNtp19290
(S'channel'
p19291
(lp19292
S'char'
p19293
a(lp19294
I-1
aaNtp19295
(S'data'
p19296
(lp19297
S'bool32'
p19298
aNtp19299
tp19300
tp19301
sS'DAQmxGetCIEncoderAInputDigFltrTimebaseRate'
p19302
((lp19303
S'int32'
p19304
ag11
a((S'taskHandle'
p19305
(lp19306
S'TaskHandle'
p19307
aNtp19308
(S'channel'
p19309
(lp19310
S'char'
p19311
a(lp19312
I-1
aaNtp19313
(S'data'
p19314
(lp19315
S'float64'
p19316
ag19
aNtp19317
tp19318
tp19319
sS'DAQmxReadCounterF64'
p19320
((lp19321
S'int32'
p19322
ag11
a((S'taskHandle'
p19323
(lp19324
S'TaskHandle'
p19325
aNtp19326
(S'numSampsPerChan'
p19327
(lp19328
S'int32'
p19329
aNtp19330
(S'timeout'
p19331
(lp19332
S'float64'
p19333
aNtp19334
(S'readArray'
p19335
(lp19336
S'float64'
p19337
a(lp19338
I-1
aaNtp19339
(S'arraySizeInSamps'
p19340
(lp19341
S'uInt32'
p19342
aNtp19343
(S'sampsPerChanRead'
p19344
(lp19345
S'int32'
p19346
ag19
aNtp19347
(S'reserved'
p19348
(lp19349
S'bool32'
p19350
ag19
aNtp19351
tp19352
tp19353
sS'DAQmxSetCICtrTimebaseActiveEdge'
p19354
((lp19355
S'int32'
p19356
ag11
a((S'taskHandle'
p19357
(lp19358
S'TaskHandle'
p19359
aNtp19360
(S'channel'
p19361
(lp19362
S'char'
p19363
a(lp19364
I-1
aaNtp19365
(S'data'
p19366
(lp19367
S'int32'
p19368
aNtp19369
tp19370
tp19371
sS'DAQmxSetDigEdgeArmStartTrigDigFltrEnable'
p19372
((lp19373
S'int32'
p19374
ag11
a((S'taskHandle'
p19375
(lp19376
S'TaskHandle'
p19377
aNtp19378
(S'data'
p19379
(lp19380
S'bool32'
p19381
aNtp19382
tp19383
tp19384
sS'DAQmxSetSampClkDigFltrTimebaseRate'
p19385
((lp19386
S'int32'
p19387
ag11
a((S'taskHandle'
p19388
(lp19389
S'TaskHandle'
p19390
aNtp19391
(S'data'
p19392
(lp19393
S'float64'
p19394
aNtp19395
tp19396
tp19397
sS'DAQmxResetCICountEdgesActiveEdge'
p19398
((lp19399
S'int32'
p19400
ag11
a((S'taskHandle'
p19401
(lp19402
S'TaskHandle'
p19403
aNtp19404
(S'channel'
p19405
(lp19406
S'char'
p19407
a(lp19408
I-1
aaNtp19409
tp19410
tp19411
sS'DAQmxGetHshkDelayAfterXfer'
p19412
((lp19413
S'int32'
p19414
ag11
a((S'taskHandle'
p19415
(lp19416
S'TaskHandle'
p19417
aNtp19418
(S'data'
p19419
(lp19420
S'float64'
p19421
ag19
aNtp19422
tp19423
tp19424
sS'DAQmxSetAODACOffsetExtSrc'
p19425
((lp19426
S'int32'
p19427
ag11
a((S'taskHandle'
p19428
(lp19429
S'TaskHandle'
p19430
aNtp19431
(S'channel'
p19432
(lp19433
S'char'
p19434
a(lp19435
I-1
aaNtp19436
(S'data'
p19437
(lp19438
S'char'
p19439
ag19
aNtp19440
tp19441
tp19442
sS'DAQmxGetReadCurrReadPos'
p19443
((lp19444
S'int32'
p19445
ag11
a((S'taskHandle'
p19446
(lp19447
S'TaskHandle'
p19448
aNtp19449
(S'data'
p19450
(lp19451
S'uInt64'
p19452
ag19
aNtp19453
tp19454
tp19455
sS'DAQmxGetAIThrmcplCJCSrc'
p19456
((lp19457
S'int32'
p19458
ag11
a((S'taskHandle'
p19459
(lp19460
S'TaskHandle'
p19461
aNtp19462
(S'channel'
p19463
(lp19464
S'char'
p19465
a(lp19466
I-1
aaNtp19467
(S'data'
p19468
(lp19469
S'int32'
p19470
ag19
aNtp19471
tp19472
tp19473
sS'DAQmxGetCIGPSSyncMethod'
p19474
((lp19475
S'int32'
p19476
ag11
a((S'taskHandle'
p19477
(lp19478
S'TaskHandle'
p19479
aNtp19480
(S'channel'
p19481
(lp19482
S'char'
p19483
a(lp19484
I-1
aaNtp19485
(S'data'
p19486
(lp19487
S'int32'
p19488
ag19
aNtp19489
tp19490
tp19491
sS'DAQmxGetStartTrigDelayUnits'
p19492
((lp19493
S'int32'
p19494
ag11
a((S'taskHandle'
p19495
(lp19496
S'TaskHandle'
p19497
aNtp19498
(S'data'
p19499
(lp19500
S'int32'
p19501
ag19
aNtp19502
tp19503
tp19504
sS'DAQmxResetAnlgWinStartTrigCoupling'
p19505
((lp19506
S'int32'
p19507
ag11
a((S'taskHandle'
p19508
(lp19509
S'TaskHandle'
p19510
aNtp19511
tp19512
tp19513
sS'DAQmxGetDigLvlPauseTrigDigFltrEnable'
p19514
((lp19515
S'int32'
p19516
ag11
a((S'taskHandle'
p19517
(lp19518
S'TaskHandle'
p19519
aNtp19520
(S'data'
p19521
(lp19522
S'bool32'
p19523
ag19
aNtp19524
tp19525
tp19526
sS'DAQmxWriteCtrTime'
p19527
((lp19528
S'int32'
p19529
ag11
a((S'taskHandle'
p19530
(lp19531
S'TaskHandle'
p19532
aNtp19533
(S'numSampsPerChan'
p19534
(lp19535
S'int32'
p19536
aNtp19537
(S'autoStart'
p19538
(lp19539
S'bool32'
p19540
aNtp19541
(S'timeout'
p19542
(lp19543
S'float64'
p19544
aNtp19545
(S'dataLayout'
p19546
(lp19547
S'bool32'
p19548
aNtp19549
(S'highTime'
p19550
(lp19551
S'float64'
p19552
a(lp19553
I-1
aaNtp19554
(S'lowTime'
p19555
(lp19556
S'float64'
p19557
a(lp19558
I-1
aaNtp19559
(S'numSampsPerChanWritten'
p19560
(lp19561
S'int32'
p19562
ag19
aNtp19563
(S'reserved'
p19564
(lp19565
S'bool32'
p19566
ag19
aNtp19567
tp19568
tp19569
sS'DAQmxResetCOPulseLowTicks'
p19570
((lp19571
S'int32'
p19572
ag11
a((S'taskHandle'
p19573
(lp19574
S'TaskHandle'
p19575
aNtp19576
(S'channel'
p19577
(lp19578
S'char'
p19579
a(lp19580
I-1
aaNtp19581
tp19582
tp19583
sS'DAQmxResetCITwoEdgeSepFirstDigSyncEnable'
p19584
((lp19585
S'int32'
p19586
ag11
a((S'taskHandle'
p19587
(lp19588
S'TaskHandle'
p19589
aNtp19590
(S'channel'
p19591
(lp19592
S'char'
p19593
a(lp19594
I-1
aaNtp19595
tp19596
tp19597
sS'DAQmxSetCOPulseLowTicks'
p19598
((lp19599
S'int32'
p19600
ag11
a((S'taskHandle'
p19601
(lp19602
S'TaskHandle'
p19603
aNtp19604
(S'channel'
p19605
(lp19606
S'char'
p19607
a(lp19608
I-1
aaNtp19609
(S'data'
p19610
(lp19611
S'uInt32'
p19612
aNtp19613
tp19614
tp19615
sS'DAQmxGetReadAvailSampPerChan'
p19616
((lp19617
S'int32'
p19618
ag11
a((S'taskHandle'
p19619
(lp19620
S'TaskHandle'
p19621
aNtp19622
(S'data'
p19623
(lp19624
S'uInt32'
p19625
ag19
aNtp19626
tp19627
tp19628
sS'DAQmxSetExportedStartTrigOutputTerm'
p19629
((lp19630
S'int32'
p19631
ag11
a((S'taskHandle'
p19632
(lp19633
S'TaskHandle'
p19634
aNtp19635
(S'data'
p19636
(lp19637
S'char'
p19638
ag19
aNtp19639
tp19640
tp19641
sS'DAQmxSetSampClkTimebaseMasterTimebaseDiv'
p19642
((lp19643
S'int32'
p19644
ag11
a((S'taskHandle'
p19645
(lp19646
S'TaskHandle'
p19647
aNtp19648
(S'data'
p19649
(lp19650
S'uInt32'
p19651
aNtp19652
tp19653
tp19654
sS'DAQmxGetWriteWaitMode'
p19655
((lp19656
S'int32'
p19657
ag11
a((S'taskHandle'
p19658
(lp19659
S'TaskHandle'
p19660
aNtp19661
(S'data'
p19662
(lp19663
S'int32'
p19664
ag19
aNtp19665
tp19666
tp19667
sS'DAQmxResetCIFreqDigFltrEnable'
p19668
((lp19669
S'int32'
p19670
ag11
a((S'taskHandle'
p19671
(lp19672
S'TaskHandle'
p19673
aNtp19674
(S'channel'
p19675
(lp19676
S'char'
p19677
a(lp19678
I-1
aaNtp19679
tp19680
tp19681
sS'DAQmxGetExportedRdyForXferEventOutputTerm'
p19682
((lp19683
S'int32'
p19684
ag11
a((S'taskHandle'
p19685
(lp19686
S'TaskHandle'
p19687
aNtp19688
(S'data'
p19689
(lp19690
S'char'
p19691
ag19
aNtp19692
(S'bufferSize'
p19693
(lp19694
S'uInt32'
p19695
aNtp19696
tp19697
tp19698
sS'DAQmxGetCITwoEdgeSepSecondTerm'
p19699
((lp19700
S'int32'
p19701
ag11
a((S'taskHandle'
p19702
(lp19703
S'TaskHandle'
p19704
aNtp19705
(S'channel'
p19706
(lp19707
S'char'
p19708
a(lp19709
I-1
aaNtp19710
(S'data'
p19711
(lp19712
S'char'
p19713
ag19
aNtp19714
(S'bufferSize'
p19715
(lp19716
S'uInt32'
p19717
aNtp19718
tp19719
tp19720
sS'DAQmxGetSwitchDevTopology'
p19721
((lp19722
S'int32'
p19723
ag11
a((S'deviceName'
p19724
(lp19725
S'char'
p19726
a(lp19727
I-1
aaNtp19728
(S'data'
p19729
(lp19730
S'char'
p19731
ag19
aNtp19732
(S'bufferSize'
p19733
(lp19734
S'uInt32'
p19735
aNtp19736
tp19737
tp19738
sS'DAQmxGetAOMemMapEnable'
p19739
((lp19740
S'int32'
p19741
ag11
a((S'taskHandle'
p19742
(lp19743
S'TaskHandle'
p19744
aNtp19745
(S'channel'
p19746
(lp19747
S'char'
p19748
a(lp19749
I-1
aaNtp19750
(S'data'
p19751
(lp19752
S'bool32'
p19753
ag19
aNtp19754
tp19755
tp19756
sS'DAQmxSetMasterTimebaseRate'
p19757
((lp19758
S'int32'
p19759
ag11
a((S'taskHandle'
p19760
(lp19761
S'TaskHandle'
p19762
aNtp19763
(S'data'
p19764
(lp19765
S'float64'
p19766
aNtp19767
tp19768
tp19769
sS'DAQmxResetExportedHshkEventDelay'
p19770
((lp19771
S'int32'
p19772
ag11
a((S'taskHandle'
p19773
(lp19774
S'TaskHandle'
p19775
aNtp19776
tp19777
tp19778
sS'DAQmxGetCIFreqDigFltrTimebaseRate'
p19779
((lp19780
S'int32'
p19781
ag11
a((S'taskHandle'
p19782
(lp19783
S'TaskHandle'
p19784
aNtp19785
(S'channel'
p19786
(lp19787
S'char'
p19788
a(lp19789
I-1
aaNtp19790
(S'data'
p19791
(lp19792
S'float64'
p19793
ag19
aNtp19794
tp19795
tp19796
sS'DAQmxGetWriteOffset'
p19797
((lp19798
S'int32'
p19799
ag11
a((S'taskHandle'
p19800
(lp19801
S'TaskHandle'
p19802
aNtp19803
(S'data'
p19804
(lp19805
S'int32'
p19806
ag19
aNtp19807
tp19808
tp19809
sS'DAQmxResetWatchdogExpirTrigType'
p19810
((lp19811
S'int32'
p19812
ag11
a((S'taskHandle'
p19813
(lp19814
S'TaskHandle'
p19815
aNtp19816
tp19817
tp19818
sS'DAQmxGetCIPeriodUnits'
p19819
((lp19820
S'int32'
p19821
ag11
a((S'taskHandle'
p19822
(lp19823
S'TaskHandle'
p19824
aNtp19825
(S'channel'
p19826
(lp19827
S'char'
p19828
a(lp19829
I-1
aaNtp19830
(S'data'
p19831
(lp19832
S'int32'
p19833
ag19
aNtp19834
tp19835
tp19836
sS'DAQmxResetExportedAdvTrigPulseWidth'
p19837
((lp19838
S'int32'
p19839
ag11
a((S'taskHandle'
p19840
(lp19841
S'TaskHandle'
p19842
aNtp19843
tp19844
tp19845
sS'DAQmxSetRealTimeReportMissedSamp'
p19846
((lp19847
S'int32'
p19848
ag11
a((S'taskHandle'
p19849
(lp19850
S'TaskHandle'
p19851
aNtp19852
(S'data'
p19853
(lp19854
S'bool32'
p19855
aNtp19856
tp19857
tp19858
sS'DAQmxSetDigEdgeStartTrigDigFltrMinPulseWidth'
p19859
((lp19860
S'int32'
p19861
ag11
a((S'taskHandle'
p19862
(lp19863
S'TaskHandle'
p19864
aNtp19865
(S'data'
p19866
(lp19867
S'float64'
p19868
aNtp19869
tp19870
tp19871
sS'DAQmxCreateTEDSAIThrmstrChanVex'
p19872
((lp19873
S'int32'
p19874
ag11
a((S'taskHandle'
p19875
(lp19876
S'TaskHandle'
p19877
aNtp19878
(S'physicalChannel'
p19879
(lp19880
S'char'
p19881
a(lp19882
I-1
aaNtp19883
(S'nameToAssignToChannel'
p19884
(lp19885
S'char'
p19886
a(lp19887
I-1
aaNtp19888
(S'minVal'
p19889
(lp19890
S'float64'
p19891
aNtp19892
(S'maxVal'
p19893
(lp19894
S'float64'
p19895
aNtp19896
(S'units'
p19897
(lp19898
S'int32'
p19899
aNtp19900
(S'resistanceConfig'
p19901
(lp19902
S'int32'
p19903
aNtp19904
(S'voltageExcitSource'
p19905
(lp19906
S'int32'
p19907
aNtp19908
(S'voltageExcitVal'
p19909
(lp19910
S'float64'
p19911
aNtp19912
(S'r1'
p19913
(lp19914
S'float64'
p19915
aNtp19916
tp19917
tp19918
sS'DAQmxSetAIConvTimebaseDiv'
p19919
((lp19920
S'int32'
p19921
ag11
a((S'taskHandle'
p19922
(lp19923
S'TaskHandle'
p19924
aNtp19925
(S'data'
p19926
(lp19927
S'uInt32'
p19928
aNtp19929
tp19930
tp19931
sS'DAQmxSetAIRngHigh'
p19932
((lp19933
S'int32'
p19934
ag11
a((S'taskHandle'
p19935
(lp19936
S'TaskHandle'
p19937
aNtp19938
(S'channel'
p19939
(lp19940
S'char'
p19941
a(lp19942
I-1
aaNtp19943
(S'data'
p19944
(lp19945
S'float64'
p19946
aNtp19947
tp19948
tp19949
sS'DAQmxSetDigEdgeAdvTrigSrc'
p19950
((lp19951
S'int32'
p19952
ag11
a((S'taskHandle'
p19953
(lp19954
S'TaskHandle'
p19955
aNtp19956
(S'data'
p19957
(lp19958
S'char'
p19959
ag19
aNtp19960
tp19961
tp19962
sS'DAQmxGetCICtrTimebaseDigSyncEnable'
p19963
((lp19964
S'int32'
p19965
ag11
a((S'taskHandle'
p19966
(lp19967
S'TaskHandle'
p19968
aNtp19969
(S'channel'
p19970
(lp19971
S'char'
p19972
a(lp19973
I-1
aaNtp19974
(S'data'
p19975
(lp19976
S'bool32'
p19977
ag19
aNtp19978
tp19979
tp19980
sS'DAQmxResetExportedHshkEventOutputBehavior'
p19981
((lp19982
S'int32'
p19983
ag11
a((S'taskHandle'
p19984
(lp19985
S'TaskHandle'
p19986
aNtp19987
tp19988
tp19989
sS'DAQmxResetAIFreqUnits'
p19990
((lp19991
S'int32'
p19992
ag11
a((S'taskHandle'
p19993
(lp19994
S'TaskHandle'
p19995
aNtp19996
(S'channel'
p19997
(lp19998
S'char'
p19999
a(lp20000
I-1
aaNtp20001
tp20002
tp20003
sS'DAQmxCfgDigEdgeStartTrig'
p20004
((lp20005
S'int32'
p20006
ag11
a((S'taskHandle'
p20007
(lp20008
S'TaskHandle'
p20009
aNtp20010
(S'triggerSource'
p20011
(lp20012
S'char'
p20013
a(lp20014
I-1
aaNtp20015
(S'triggerEdge'
p20016
(lp20017
S'int32'
p20018
aNtp20019
tp20020
tp20021
sS'DAQmxSetAISoundPressureUnits'
p20022
((lp20023
S'int32'
p20024
ag11
a((S'taskHandle'
p20025
(lp20026
S'TaskHandle'
p20027
aNtp20028
(S'channel'
p20029
(lp20030
S'char'
p20031
a(lp20032
I-1
aaNtp20033
(S'data'
p20034
(lp20035
S'int32'
p20036
aNtp20037
tp20038
tp20039
sS'DAQmxControlWatchdogTask'
p20040
((lp20041
S'int32'
p20042
ag11
a((S'taskHandle'
p20043
(lp20044
S'TaskHandle'
p20045
aNtp20046
(S'action'
p20047
(lp20048
S'int32'
p20049
aNtp20050
tp20051
tp20052
sS'DAQmxGetCICount'
p20053
((lp20054
S'int32'
p20055
ag11
a((S'taskHandle'
p20056
(lp20057
S'TaskHandle'
p20058
aNtp20059
(S'channel'
p20060
(lp20061
S'char'
p20062
a(lp20063
I-1
aaNtp20064
(S'data'
p20065
(lp20066
S'uInt32'
p20067
ag19
aNtp20068
tp20069
tp20070
sS'DAQmxResetCICountEdgesDigFltrMinPulseWidth'
p20071
((lp20072
S'int32'
p20073
ag11
a((S'taskHandle'
p20074
(lp20075
S'TaskHandle'
p20076
aNtp20077
(S'channel'
p20078
(lp20079
S'char'
p20080
a(lp20081
I-1
aaNtp20082
tp20083
tp20084
sS'DAQmxResetExportedHshkEventPulseWidth'
p20085
((lp20086
S'int32'
p20087
ag11
a((S'taskHandle'
p20088
(lp20089
S'TaskHandle'
p20090
aNtp20091
tp20092
tp20093
sS'DAQmxRegisterSignalEvent'
p20094
((lp20095
S'int32'
p20096
ag11
a((S'task'
p20097
(lp20098
S'TaskHandle'
p20099
aNtp20100
(S'signalID'
p20101
(lp20102
S'int32'
p20103
aNtp20104
(S'options'
p20105
(lp20106
S'uInt32'
p20107
aNtp20108
(S'callbackFunction'
p20109
(lp20110
S'DAQmxSignalEventCallbackPtr'
p20111
aNtp20112
(S'callbackData'
p20113
(lp20114
S'void'
p20115
ag19
aNtp20116
tp20117
tp20118
sS'DAQmxSetRealTimeWaitForNextSampClkWaitMode'
p20119
((lp20120
S'int32'
p20121
ag11
a((S'taskHandle'
p20122
(lp20123
S'TaskHandle'
p20124
aNtp20125
(S'data'
p20126
(lp20127
S'int32'
p20128
aNtp20129
tp20130
tp20131
sS'DAQmxCreateCICountEdgesChan'
p20132
((lp20133
S'int32'
p20134
ag11
a((S'taskHandle'
p20135
(lp20136
S'TaskHandle'
p20137
aNtp20138
(S'counter'
p20139
(lp20140
S'char'
p20141
a(lp20142
I-1
aaNtp20143
(S'nameToAssignToChannel'
p20144
(lp20145
S'char'
p20146
a(lp20147
I-1
aaNtp20148
(S'edge'
p20149
(lp20150
S'int32'
p20151
aNtp20152
(S'initialCount'
p20153
(lp20154
S'uInt32'
p20155
aNtp20156
(S'countDirection'
p20157
(lp20158
S'int32'
p20159
aNtp20160
tp20161
tp20162
sS'DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling'
p20163
((lp20164
S'int32'
p20165
ag11
a((S'deviceName'
p20166
(lp20167
S'char'
p20168
a(lp20169
I-1
aaNtp20170
(S'data'
p20171
(lp20172
S'bool32'
p20173
ag19
aNtp20174
tp20175
tp20176
sS'DAQmxGetSampClkDigFltrTimebaseSrc'
p20177
((lp20178
S'int32'
p20179
ag11
a((S'taskHandle'
p20180
(lp20181
S'TaskHandle'
p20182
aNtp20183
(S'data'
p20184
(lp20185
S'char'
p20186
ag19
aNtp20187
(S'bufferSize'
p20188
(lp20189
S'uInt32'
p20190
aNtp20191
tp20192
tp20193
sS'DAQmxGetReadOverloadedChans'
p20194
((lp20195
S'int32'
p20196
ag11
a((S'taskHandle'
p20197
(lp20198
S'TaskHandle'
p20199
aNtp20200
(S'data'
p20201
(lp20202
S'char'
p20203
ag19
aNtp20204
(S'bufferSize'
p20205
(lp20206
S'uInt32'
p20207
aNtp20208
tp20209
tp20210
sS'DAQmxResetAnlgLvlPauseTrigHyst'
p20211
((lp20212
S'int32'
p20213
ag11
a((S'taskHandle'
p20214
(lp20215
S'TaskHandle'
p20216
aNtp20217
tp20218
tp20219
sS'DAQmxSetAODACRefVal'
p20220
((lp20221
S'int32'
p20222
ag11
a((S'taskHandle'
p20223
(lp20224
S'TaskHandle'
p20225
aNtp20226
(S'channel'
p20227
(lp20228
S'char'
p20229
a(lp20230
I-1
aaNtp20231
(S'data'
p20232
(lp20233
S'float64'
p20234
aNtp20235
tp20236
tp20237
sS'DAQmxCreatePolynomialScale'
p20238
((lp20239
S'int32'
p20240
ag11
a((S'name'
p20241
(lp20242
S'char'
p20243
a(lp20244
I-1
aaNtp20245
(S'forwardCoeffs'
p20246
(lp20247
S'float64'
p20248
a(lp20249
I-1
aaNtp20250
(S'numForwardCoeffsIn'
p20251
(lp20252
S'uInt32'
p20253
aNtp20254
(S'reverseCoeffs'
p20255
(lp20256
S'float64'
p20257
a(lp20258
I-1
aaNtp20259
(S'numReverseCoeffsIn'
p20260
(lp20261
S'uInt32'
p20262
aNtp20263
(S'preScaledUnits'
p20264
(lp20265
S'int32'
p20266
aNtp20267
(S'scaledUnits'
p20268
(lp20269
S'char'
p20270
a(lp20271
I-1
aaNtp20272
tp20273
tp20274
sS'DAQmxReadDigitalLines'
p20275
((lp20276
S'int32'
p20277
ag11
a((S'taskHandle'
p20278
(lp20279
S'TaskHandle'
p20280
aNtp20281
(S'numSampsPerChan'
p20282
(lp20283
S'int32'
p20284
aNtp20285
(S'timeout'
p20286
(lp20287
S'float64'
p20288
aNtp20289
(S'fillMode'
p20290
(lp20291
S'bool32'
p20292
aNtp20293
(S'readArray'
p20294
(lp20295
S'uInt8'
p20296
a(lp20297
I-1
aaNtp20298
(S'arraySizeInBytes'
p20299
(lp20300
S'uInt32'
p20301
aNtp20302
(S'sampsPerChanRead'
p20303
(lp20304
S'int32'
p20305
ag19
aNtp20306
(S'numBytesPerSamp'
p20307
(lp20308
S'int32'
p20309
ag19
aNtp20310
(S'reserved'
p20311
(lp20312
S'bool32'
p20313
ag19
aNtp20314
tp20315
tp20316
sS'DAQmxResetAIImpedance'
p20317
((lp20318
S'int32'
p20319
ag11
a((S'taskHandle'
p20320
(lp20321
S'TaskHandle'
p20322
aNtp20323
(S'channel'
p20324
(lp20325
S'char'
p20326
a(lp20327
I-1
aaNtp20328
tp20329
tp20330
sS'DAQmxResetCITwoEdgeSepFirstTerm'
p20331
((lp20332
S'int32'
p20333
ag11
a((S'taskHandle'
p20334
(lp20335
S'TaskHandle'
p20336
aNtp20337
(S'channel'
p20338
(lp20339
S'char'
p20340
a(lp20341
I-1
aaNtp20342
tp20343
tp20344
sS'DAQmxCreateTEDSAICurrentChan'
p20345
((lp20346
S'int32'
p20347
ag11
a((S'taskHandle'
p20348
(lp20349
S'TaskHandle'
p20350
aNtp20351
(S'physicalChannel'
p20352
(lp20353
S'char'
p20354
a(lp20355
I-1
aaNtp20356
(S'nameToAssignToChannel'
p20357
(lp20358
S'char'
p20359
a(lp20360
I-1
aaNtp20361
(S'terminalConfig'
p20362
(lp20363
S'int32'
p20364
aNtp20365
(S'minVal'
p20366
(lp20367
S'float64'
p20368
aNtp20369
(S'maxVal'
p20370
(lp20371
S'float64'
p20372
aNtp20373
(S'units'
p20374
(lp20375
S'int32'
p20376
aNtp20377
(S'shuntResistorLoc'
p20378
(lp20379
S'int32'
p20380
aNtp20381
(S'extShuntResistorVal'
p20382
(lp20383
S'float64'
p20384
aNtp20385
(S'customScaleName'
p20386
(lp20387
S'char'
p20388
a(lp20389
I-1
aaNtp20390
tp20391
tp20392
sS'DAQmxGetExported10MHzRefClkOutputTerm'
p20393
((lp20394
S'int32'
p20395
ag11
a((S'taskHandle'
p20396
(lp20397
S'TaskHandle'
p20398
aNtp20399
(S'data'
p20400
(lp20401
S'char'
p20402
ag19
aNtp20403
(S'bufferSize'
p20404
(lp20405
S'uInt32'
p20406
aNtp20407
tp20408
tp20409
sS'DAQmxSetAODACOffsetVal'
p20410
((lp20411
S'int32'
p20412
ag11
a((S'taskHandle'
p20413
(lp20414
S'TaskHandle'
p20415
aNtp20416
(S'channel'
p20417
(lp20418
S'char'
p20419
a(lp20420
I-1
aaNtp20421
(S'data'
p20422
(lp20423
S'float64'
p20424
aNtp20425
tp20426
tp20427
sS'DAQmxGetSwitchDevNumRelays'
p20428
((lp20429
S'int32'
p20430
ag11
a((S'deviceName'
p20431
(lp20432
S'char'
p20433
a(lp20434
I-1
aaNtp20435
(S'data'
p20436
(lp20437
S'uInt32'
p20438
ag19
aNtp20439
tp20440
tp20441
sS'DAQmxSetCIEncoderBInputDigFltrTimebaseSrc'
p20442
((lp20443
S'int32'
p20444
ag11
a((S'taskHandle'
p20445
(lp20446
S'TaskHandle'
p20447
aNtp20448
(S'channel'
p20449
(lp20450
S'char'
p20451
a(lp20452
I-1
aaNtp20453
(S'data'
p20454
(lp20455
S'char'
p20456
ag19
aNtp20457
tp20458
tp20459
sS'DAQmxGetReadChangeDetectHasOverflowed'
p20460
((lp20461
S'int32'
p20462
ag11
a((S'taskHandle'
p20463
(lp20464
S'TaskHandle'
p20465
aNtp20466
(S'data'
p20467
(lp20468
S'bool32'
p20469
ag19
aNtp20470
tp20471
tp20472
sS'DAQmxSetScaleMapScaledMax'
p20473
((lp20474
S'int32'
p20475
ag11
a((S'scaleName'
p20476
(lp20477
S'char'
p20478
a(lp20479
I-1
aaNtp20480
(S'data'
p20481
(lp20482
S'float64'
p20483
aNtp20484
tp20485
tp20486
sS'DAQmxResetCILinEncoderDistPerPulse'
p20487
((lp20488
S'int32'
p20489
ag11
a((S'taskHandle'
p20490
(lp20491
S'TaskHandle'
p20492
aNtp20493
(S'channel'
p20494
(lp20495
S'char'
p20496
a(lp20497
I-1
aaNtp20498
tp20499
tp20500
sS'DAQmxResetAnlgEdgeRefTrigLvl'
p20501
((lp20502
S'int32'
p20503
ag11
a((S'taskHandle'
p20504
(lp20505
S'TaskHandle'
p20506
aNtp20507
tp20508
tp20509
sS'DAQmxSetAIChanCalPolyReverseCoeff'
p20510
((lp20511
S'int32'
p20512
ag11
a((S'taskHandle'
p20513
(lp20514
S'TaskHandle'
p20515
aNtp20516
(S'channel'
p20517
(lp20518
S'char'
p20519
a(lp20520
I-1
aaNtp20521
(S'data'
p20522
(lp20523
S'float64'
p20524
ag19
aNtp20525
(S'arraySizeInSamples'
p20526
(lp20527
S'uInt32'
p20528
aNtp20529
tp20530
tp20531
sS'DAQmxGetReadOffset'
p20532
((lp20533
S'int32'
p20534
ag11
a((S'taskHandle'
p20535
(lp20536
S'TaskHandle'
p20537
aNtp20538
(S'data'
p20539
(lp20540
S'int32'
p20541
ag19
aNtp20542
tp20543
tp20544
sS'DAQmxResetCIEncoderZInputTerm'
p20545
((lp20546
S'int32'
p20547
ag11
a((S'taskHandle'
p20548
(lp20549
S'TaskHandle'
p20550
aNtp20551
(S'channel'
p20552
(lp20553
S'char'
p20554
a(lp20555
I-1
aaNtp20556
tp20557
tp20558
sS'DAQmxGetCICtrTimebaseMasterTimebaseDiv'
p20559
((lp20560
S'int32'
p20561
ag11
a((S'taskHandle'
p20562
(lp20563
S'TaskHandle'
p20564
aNtp20565
(S'channel'
p20566
(lp20567
S'char'
p20568
a(lp20569
I-1
aaNtp20570
(S'data'
p20571
(lp20572
S'uInt32'
p20573
ag19
aNtp20574
tp20575
tp20576
sS'DAQmxResetCIPrescaler'
p20577
((lp20578
S'int32'
p20579
ag11
a((S'taskHandle'
p20580
(lp20581
S'TaskHandle'
p20582
aNtp20583
(S'channel'
p20584
(lp20585
S'char'
p20586
a(lp20587
I-1
aaNtp20588
tp20589
tp20590
sS'DAQmxDeleteSavedTask'
p20591
((lp20592
S'int32'
p20593
ag11
a((S'taskName'
p20594
(lp20595
S'char'
p20596
a(lp20597
I-1
aaNtp20598
tp20599
tp20600
sS'DAQmxGetAnlgLvlPauseTrigHyst'
p20601
((lp20602
S'int32'
p20603
ag11
a((S'taskHandle'
p20604
(lp20605
S'TaskHandle'
p20606
aNtp20607
(S'data'
p20608
(lp20609
S'float64'
p20610
ag19
aNtp20611
tp20612
tp20613
sS'DAQmxResetExportedSignalAttribute'
p20614
((lp20615
S'int32'
p20616
ag11
a((S'taskHandle'
p20617
(lp20618
S'TaskHandle'
p20619
aNtp20620
(S'attribute'
p20621
(lp20622
S'int32'
p20623
aNtp20624
tp20625
tp20626
sS'DAQmxGetRealTimeWriteRecoveryMode'
p20627
((lp20628
S'int32'
p20629
ag11
a((S'taskHandle'
p20630
(lp20631
S'TaskHandle'
p20632
aNtp20633
(S'data'
p20634
(lp20635
S'int32'
p20636
ag19
aNtp20637
tp20638
tp20639
sS'DAQmxCreateTableScale'
p20640
((lp20641
S'int32'
p20642
ag11
a((S'name'
p20643
(lp20644
S'char'
p20645
a(lp20646
I-1
aaNtp20647
(S'prescaledVals'
p20648
(lp20649
S'float64'
p20650
a(lp20651
I-1
aaNtp20652
(S'numPrescaledValsIn'
p20653
(lp20654
S'uInt32'
p20655
aNtp20656
(S'scaledVals'
p20657
(lp20658
S'float64'
p20659
a(lp20660
I-1
aaNtp20661
(S'numScaledValsIn'
p20662
(lp20663
S'uInt32'
p20664
aNtp20665
(S'preScaledUnits'
p20666
(lp20667
S'int32'
p20668
aNtp20669
(S'scaledUnits'
p20670
(lp20671
S'char'
p20672
a(lp20673
I-1
aaNtp20674
tp20675
tp20676
sS'DAQmxGetCICountEdgesCountDirDigSyncEnable'
p20677
((lp20678
S'int32'
p20679
ag11
a((S'taskHandle'
p20680
(lp20681
S'TaskHandle'
p20682
aNtp20683
(S'channel'
p20684
(lp20685
S'char'
p20686
a(lp20687
I-1
aaNtp20688
(S'data'
p20689
(lp20690
S'bool32'
p20691
ag19
aNtp20692
tp20693
tp20694
sS'DAQmxResetAIGain'
p20695
((lp20696
S'int32'
p20697
ag11
a((S'taskHandle'
p20698
(lp20699
S'TaskHandle'
p20700
aNtp20701
(S'channel'
p20702
(lp20703
S'char'
p20704
a(lp20705
I-1
aaNtp20706
tp20707
tp20708
sS'DAQmxSetAnlgLvlPauseTrigSrc'
p20709
((lp20710
S'int32'
p20711
ag11
a((S'taskHandle'
p20712
(lp20713
S'TaskHandle'
p20714
aNtp20715
(S'data'
p20716
(lp20717
S'char'
p20718
ag19
aNtp20719
tp20720
tp20721
sS'DAQmxAdjust4204Cal'
p20722
((lp20723
S'int32'
p20724
ag11
a((S'calHandle'
p20725
(lp20726
S'uInt32'
p20727
aNtp20728
(S'channelNames'
p20729
(lp20730
S'char'
p20731
a(lp20732
I-1
aaNtp20733
(S'lowPassFreq'
p20734
(lp20735
S'float64'
p20736
aNtp20737
(S'trackHoldEnabled'
p20738
(lp20739
S'bool32'
p20740
aNtp20741
(S'inputVal'
p20742
(lp20743
S'float64'
p20744
aNtp20745
tp20746
tp20747
sS'DAQmxSetRefClkSrc'
p20748
((lp20749
S'int32'
p20750
ag11
a((S'taskHandle'
p20751
(lp20752
S'TaskHandle'
p20753
aNtp20754
(S'data'
p20755
(lp20756
S'char'
p20757
ag19
aNtp20758
tp20759
tp20760
sS'DAQmxSetCOPulseFreqUnits'
p20761
((lp20762
S'int32'
p20763
ag11
a((S'taskHandle'
p20764
(lp20765
S'TaskHandle'
p20766
aNtp20767
(S'channel'
p20768
(lp20769
S'char'
p20770
a(lp20771
I-1
aaNtp20772
(S'data'
p20773
(lp20774
S'int32'
p20775
aNtp20776
tp20777
tp20778
sS'DAQmxResetDigEdgeStartTrigDigFltrTimebaseRate'
p20779
((lp20780
S'int32'
p20781
ag11
a((S'taskHandle'
p20782
(lp20783
S'TaskHandle'
p20784
aNtp20785
tp20786
tp20787
sS'DAQmxGetCICtrTimebaseDigFltrTimebaseSrc'
p20788
((lp20789
S'int32'
p20790
ag11
a((S'taskHandle'
p20791
(lp20792
S'TaskHandle'
p20793
aNtp20794
(S'channel'
p20795
(lp20796
S'char'
p20797
a(lp20798
I-1
aaNtp20799
(S'data'
p20800
(lp20801
S'char'
p20802
ag19
aNtp20803
(S'bufferSize'
p20804
(lp20805
S'uInt32'
p20806
aNtp20807
tp20808
tp20809
sS'DAQmxGetRealTimeNumOfWarmupIters'
p20810
((lp20811
S'int32'
p20812
ag11
a((S'taskHandle'
p20813
(lp20814
S'TaskHandle'
p20815
aNtp20816
(S'data'
p20817
(lp20818
S'uInt32'
p20819
ag19
aNtp20820
tp20821
tp20822
sS'DAQmxGetDIInvertLines'
p20823
((lp20824
S'int32'
p20825
ag11
a((S'taskHandle'
p20826
(lp20827
S'TaskHandle'
p20828
aNtp20829
(S'channel'
p20830
(lp20831
S'char'
p20832
a(lp20833
I-1
aaNtp20834
(S'data'
p20835
(lp20836
S'bool32'
p20837
ag19
aNtp20838
tp20839
tp20840
sS'DAQmxResetAnlgEdgeStartTrigCoupling'
p20841
((lp20842
S'int32'
p20843
ag11
a((S'taskHandle'
p20844
(lp20845
S'TaskHandle'
p20846
aNtp20847
tp20848
tp20849
sS'DAQmxGetWriteSleepTime'
p20850
((lp20851
S'int32'
p20852
ag11
a((S'taskHandle'
p20853
(lp20854
S'TaskHandle'
p20855
aNtp20856
(S'data'
p20857
(lp20858
S'float64'
p20859
ag19
aNtp20860
tp20861
tp20862
sS'DAQmxGetCOPulseHighTime'
p20863
((lp20864
S'int32'
p20865
ag11
a((S'taskHandle'
p20866
(lp20867
S'TaskHandle'
p20868
aNtp20869
(S'channel'
p20870
(lp20871
S'char'
p20872
a(lp20873
I-1
aaNtp20874
(S'data'
p20875
(lp20876
S'float64'
p20877
ag19
aNtp20878
tp20879
tp20880
sS'DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling'
p20881
((lp20882
S'int32'
p20883
ag11
a((S'deviceName'
p20884
(lp20885
S'char'
p20886
a(lp20887
I-1
aaNtp20888
(S'data'
p20889
(lp20890
S'bool32'
p20891
aNtp20892
tp20893
tp20894
sS'DAQmxSetAIBridgeCfg'
p20895
((lp20896
S'int32'
p20897
ag11
a((S'taskHandle'
p20898
(lp20899
S'TaskHandle'
p20900
aNtp20901
(S'channel'
p20902
(lp20903
S'char'
p20904
a(lp20905
I-1
aaNtp20906
(S'data'
p20907
(lp20908
S'int32'
p20909
aNtp20910
tp20911
tp20912
sS'DAQmxSetExportedAdvCmpltEventPulseWidth'
p20913
((lp20914
S'int32'
p20915
ag11
a((S'taskHandle'
p20916
(lp20917
S'TaskHandle'
p20918
aNtp20919
(S'data'
p20920
(lp20921
S'float64'
p20922
aNtp20923
tp20924
tp20925
sS'DAQmxSetChangeDetectDIRisingEdgePhysicalChans'
p20926
((lp20927
S'int32'
p20928
ag11
a((S'taskHandle'
p20929
(lp20930
S'TaskHandle'
p20931
aNtp20932
(S'data'
p20933
(lp20934
S'char'
p20935
ag19
aNtp20936
tp20937
tp20938
sS'DAQmxSetDigLvlPauseTrigWhen'
p20939
((lp20940
S'int32'
p20941
ag11
a((S'taskHandle'
p20942
(lp20943
S'TaskHandle'
p20944
aNtp20945
(S'data'
p20946
(lp20947
S'int32'
p20948
aNtp20949
tp20950
tp20951
sS'DAQmxResetCIEncoderZIndexVal'
p20952
((lp20953
S'int32'
p20954
ag11
a((S'taskHandle'
p20955
(lp20956
S'TaskHandle'
p20957
aNtp20958
(S'channel'
p20959
(lp20960
S'char'
p20961
a(lp20962
I-1
aaNtp20963
tp20964
tp20965
sS'DAQmxGetAODACOffsetVal'
p20966
((lp20967
S'int32'
p20968
ag11
a((S'taskHandle'
p20969
(lp20970
S'TaskHandle'
p20971
aNtp20972
(S'channel'
p20973
(lp20974
S'char'
p20975
a(lp20976
I-1
aaNtp20977
(S'data'
p20978
(lp20979
S'float64'
p20980
ag19
aNtp20981
tp20982
tp20983
sS'DAQmxSetAnlgLvlPauseTrigLvl'
p20984
((lp20985
S'int32'
p20986
ag11
a((S'taskHandle'
p20987
(lp20988
S'TaskHandle'
p20989
aNtp20990
(S'data'
p20991
(lp20992
S'float64'
p20993
aNtp20994
tp20995
tp20996
sS'DAQmxGetReadRawDataWidth'
p20997
((lp20998
S'int32'
p20999
ag11
a((S'taskHandle'
p21000
(lp21001
S'TaskHandle'
p21002
aNtp21003
(S'data'
p21004
(lp21005
S'uInt32'
p21006
ag19
aNtp21007
tp21008
tp21009
sS'DAQmxGetDigEdgeAdvTrigDigFltrEnable'
p21010
((lp21011
S'int32'
p21012
ag11
a((S'taskHandle'
p21013
(lp21014
S'TaskHandle'
p21015
aNtp21016
(S'data'
p21017
(lp21018
S'bool32'
p21019
ag19
aNtp21020
tp21021
tp21022
sS'DAQmxSetAnlgWinStartTrigTop'
p21023
((lp21024
S'int32'
p21025
ag11
a((S'taskHandle'
p21026
(lp21027
S'TaskHandle'
p21028
aNtp21029
(S'data'
p21030
(lp21031
S'float64'
p21032
aNtp21033
tp21034
tp21035
sS'DAQmxSetSampClkDigSyncEnable'
p21036
((lp21037
S'int32'
p21038
ag11
a((S'taskHandle'
p21039
(lp21040
S'TaskHandle'
p21041
aNtp21042
(S'data'
p21043
(lp21044
S'bool32'
p21045
aNtp21046
tp21047
tp21048
sS'DAQmxResetDigEdgeStartTrigEdge'
p21049
((lp21050
S'int32'
p21051
ag11
a((S'taskHandle'
p21052
(lp21053
S'TaskHandle'
p21054
aNtp21055
tp21056
tp21057
sS'DAQmxResetCITwoEdgeSepFirstDigFltrEnable'
p21058
((lp21059
S'int32'
p21060
ag11
a((S'taskHandle'
p21061
(lp21062
S'TaskHandle'
p21063
aNtp21064
(S'channel'
p21065
(lp21066
S'char'
p21067
a(lp21068
I-1
aaNtp21069
tp21070
tp21071
sS'DAQmxSetScaleMapPreScaledMin'
p21072
((lp21073
S'int32'
p21074
ag11
a((S'scaleName'
p21075
(lp21076
S'char'
p21077
a(lp21078
I-1
aaNtp21079
(S'data'
p21080
(lp21081
S'float64'
p21082
aNtp21083
tp21084
tp21085
sS'DAQmxSetDIDigFltrMinPulseWidth'
p21086
((lp21087
S'int32'
p21088
ag11
a((S'taskHandle'
p21089
(lp21090
S'TaskHandle'
p21091
aNtp21092
(S'channel'
p21093
(lp21094
S'char'
p21095
a(lp21096
I-1
aaNtp21097
(S'data'
p21098
(lp21099
S'float64'
p21100
aNtp21101
tp21102
tp21103
sS'DAQmxSetCIEncoderBInputDigFltrTimebaseRate'
p21104
((lp21105
S'int32'
p21106
ag11
a((S'taskHandle'
p21107
(lp21108
S'TaskHandle'
p21109
aNtp21110
(S'channel'
p21111
(lp21112
S'char'
p21113
a(lp21114
I-1
aaNtp21115
(S'data'
p21116
(lp21117
S'float64'
p21118
aNtp21119
tp21120
tp21121
sS'DAQmxResetAIExcitUseMultiplexed'
p21122
((lp21123
S'int32'
p21124
ag11
a((S'taskHandle'
p21125
(lp21126
S'TaskHandle'
p21127
aNtp21128
(S'channel'
p21129
(lp21130
S'char'
p21131
a(lp21132
I-1
aaNtp21133
tp21134
tp21135
sS'DAQmxSetAOCurrentUnits'
p21136
((lp21137
S'int32'
p21138
ag11
a((S'taskHandle'
p21139
(lp21140
S'TaskHandle'
p21141
aNtp21142
(S'channel'
p21143
(lp21144
S'char'
p21145
a(lp21146
I-1
aaNtp21147
(S'data'
p21148
(lp21149
S'int32'
p21150
aNtp21151
tp21152
tp21153
sS'DAQmxSetCITimestampUnits'
p21154
((lp21155
S'int32'
p21156
ag11
a((S'taskHandle'
p21157
(lp21158
S'TaskHandle'
p21159
aNtp21160
(S'channel'
p21161
(lp21162
S'char'
p21163
a(lp21164
I-1
aaNtp21165
(S'data'
p21166
(lp21167
S'int32'
p21168
aNtp21169
tp21170
tp21171
sS'DAQmxSetSampClkTimebaseDiv'
p21172
((lp21173
S'int32'
p21174
ag11
a((S'taskHandle'
p21175
(lp21176
S'TaskHandle'
p21177
aNtp21178
(S'data'
p21179
(lp21180
S'uInt32'
p21181
aNtp21182
tp21183
tp21184
sS'DAQmxClearTask'
p21185
((lp21186
S'int32'
p21187
ag11
a((S'taskHandle'
p21188
(lp21189
S'TaskHandle'
p21190
aNtp21191
tp21192
tp21193
sS'DAQmxResetExportedCtrOutEventPulsePolarity'
p21194
((lp21195
S'int32'
p21196
ag11
a((S'taskHandle'
p21197
(lp21198
S'TaskHandle'
p21199
aNtp21200
tp21201
tp21202
sS'DAQmxGetPhysicalChanName'
p21203
((lp21204
S'int32'
p21205
ag11
a((S'taskHandle'
p21206
(lp21207
S'TaskHandle'
p21208
aNtp21209
(S'channel'
p21210
(lp21211
S'char'
p21212
a(lp21213
I-1
aaNtp21214
(S'data'
p21215
(lp21216
S'char'
p21217
ag19
aNtp21218
(S'bufferSize'
p21219
(lp21220
S'uInt32'
p21221
aNtp21222
tp21223
tp21224
sS'DAQmxResetAIThrmcplCJCVal'
p21225
((lp21226
S'int32'
p21227
ag11
a((S'taskHandle'
p21228
(lp21229
S'TaskHandle'
p21230
aNtp21231
(S'channel'
p21232
(lp21233
S'char'
p21234
a(lp21235
I-1
aaNtp21236
tp21237
tp21238
sS'DAQmxWriteCtrTimeScalar'
p21239
((lp21240
S'int32'
p21241
ag11
a((S'taskHandle'
p21242
(lp21243
S'TaskHandle'
p21244
aNtp21245
(S'autoStart'
p21246
(lp21247
S'bool32'
p21248
aNtp21249
(S'timeout'
p21250
(lp21251
S'float64'
p21252
aNtp21253
(S'highTime'
p21254
(lp21255
S'float64'
p21256
aNtp21257
(S'lowTime'
p21258
(lp21259
S'float64'
p21260
aNtp21261
(S'reserved'
p21262
(lp21263
S'bool32'
p21264
ag19
aNtp21265
tp21266
tp21267
sS'DAQmxResetCIEncoderAInputDigFltrMinPulseWidth'
p21268
((lp21269
S'int32'
p21270
ag11
a((S'taskHandle'
p21271
(lp21272
S'TaskHandle'
p21273
aNtp21274
(S'channel'
p21275
(lp21276
S'char'
p21277
a(lp21278
I-1
aaNtp21279
tp21280
tp21281
sS'DAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth'
p21282
((lp21283
S'int32'
p21284
ag11
a((S'taskHandle'
p21285
(lp21286
S'TaskHandle'
p21287
aNtp21288
(S'data'
p21289
(lp21290
S'float64'
p21291
ag19
aNtp21292
tp21293
tp21294
sS'DAQmxSetDOTristate'
p21295
((lp21296
S'int32'
p21297
ag11
a((S'taskHandle'
p21298
(lp21299
S'TaskHandle'
p21300
aNtp21301
(S'channel'
p21302
(lp21303
S'char'
p21304
a(lp21305
I-1
aaNtp21306
(S'data'
p21307
(lp21308
S'bool32'
p21309
aNtp21310
tp21311
tp21312
sS'DAQmxSetSampQuantSampPerChan'
p21313
((lp21314
S'int32'
p21315
ag11
a((S'taskHandle'
p21316
(lp21317
S'TaskHandle'
p21318
aNtp21319
(S'data'
p21320
(lp21321
S'uInt64'
p21322
aNtp21323
tp21324
tp21325
sS'DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth'
p21326
((lp21327
S'int32'
p21328
ag11
a((S'taskHandle'
p21329
(lp21330
S'TaskHandle'
p21331
aNtp21332
(S'channel'
p21333
(lp21334
S'char'
p21335
a(lp21336
I-1
aaNtp21337
(S'data'
p21338
(lp21339
S'float64'
p21340
ag19
aNtp21341
tp21342
tp21343
sS'DAQmxResetAITermCfg'
p21344
((lp21345
S'int32'
p21346
ag11
a((S'taskHandle'
p21347
(lp21348
S'TaskHandle'
p21349
aNtp21350
(S'channel'
p21351
(lp21352
S'char'
p21353
a(lp21354
I-1
aaNtp21355
tp21356
tp21357
sS'DAQmxSetAODataXferReqCond'
p21358
((lp21359
S'int32'
p21360
ag11
a((S'taskHandle'
p21361
(lp21362
S'TaskHandle'
p21363
aNtp21364
(S'channel'
p21365
(lp21366
S'char'
p21367
a(lp21368
I-1
aaNtp21369
(S'data'
p21370
(lp21371
S'int32'
p21372
aNtp21373
tp21374
tp21375
sS'DAQmxCreateAOCurrentChan'
p21376
((lp21377
S'int32'
p21378
ag11
a((S'taskHandle'
p21379
(lp21380
S'TaskHandle'
p21381
aNtp21382
(S'physicalChannel'
p21383
(lp21384
S'char'
p21385
a(lp21386
I-1
aaNtp21387
(S'nameToAssignToChannel'
p21388
(lp21389
S'char'
p21390
a(lp21391
I-1
aaNtp21392
(S'minVal'
p21393
(lp21394
S'float64'
p21395
aNtp21396
(S'maxVal'
p21397
(lp21398
S'float64'
p21399
aNtp21400
(S'units'
p21401
(lp21402
S'int32'
p21403
aNtp21404
(S'customScaleName'
p21405
(lp21406
S'char'
p21407
a(lp21408
I-1
aaNtp21409
tp21410
tp21411
sS'DAQmxResetExportedSampClkOutputTerm'
p21412
((lp21413
S'int32'
p21414
ag11
a((S'taskHandle'
p21415
(lp21416
S'TaskHandle'
p21417
aNtp21418
tp21419
tp21420
sS'DAQmxWriteCtrFreq'
p21421
((lp21422
S'int32'
p21423
ag11
a((S'taskHandle'
p21424
(lp21425
S'TaskHandle'
p21426
aNtp21427
(S'numSampsPerChan'
p21428
(lp21429
S'int32'
p21430
aNtp21431
(S'autoStart'
p21432
(lp21433
S'bool32'
p21434
aNtp21435
(S'timeout'
p21436
(lp21437
S'float64'
p21438
aNtp21439
(S'dataLayout'
p21440
(lp21441
S'bool32'
p21442
aNtp21443
(S'frequency'
p21444
(lp21445
S'float64'
p21446
a(lp21447
I-1
aaNtp21448
(S'dutyCycle'
p21449
(lp21450
S'float64'
p21451
a(lp21452
I-1
aaNtp21453
(S'numSampsPerChanWritten'
p21454
(lp21455
S'int32'
p21456
ag19
aNtp21457
(S'reserved'
p21458
(lp21459
S'bool32'
p21460
ag19
aNtp21461
tp21462
tp21463
sS'DAQmxGetAILossyLSBRemovalCompressedSampSize'
p21464
((lp21465
S'int32'
p21466
ag11
a((S'taskHandle'
p21467
(lp21468
S'TaskHandle'
p21469
aNtp21470
(S'channel'
p21471
(lp21472
S'char'
p21473
a(lp21474
I-1
aaNtp21475
(S'data'
p21476
(lp21477
S'uInt32'
p21478
ag19
aNtp21479
tp21480
tp21481
sS'DAQmxCreateCISemiPeriodChan'
p21482
((lp21483
S'int32'
p21484
ag11
a((S'taskHandle'
p21485
(lp21486
S'TaskHandle'
p21487
aNtp21488
(S'counter'
p21489
(lp21490
S'char'
p21491
a(lp21492
I-1
aaNtp21493
(S'nameToAssignToChannel'
p21494
(lp21495
S'char'
p21496
a(lp21497
I-1
aaNtp21498
(S'minVal'
p21499
(lp21500
S'float64'
p21501
aNtp21502
(S'maxVal'
p21503
(lp21504
S'float64'
p21505
aNtp21506
(S'units'
p21507
(lp21508
S'int32'
p21509
aNtp21510
(S'customScaleName'
p21511
(lp21512
S'char'
p21513
a(lp21514
I-1
aaNtp21515
tp21516
tp21517
sS'DAQmxGetAIFreqThreshVoltage'
p21518
((lp21519
S'int32'
p21520
ag11
a((S'taskHandle'
p21521
(lp21522
S'TaskHandle'
p21523
aNtp21524
(S'channel'
p21525
(lp21526
S'char'
p21527
a(lp21528
I-1
aaNtp21529
(S'data'
p21530
(lp21531
S'float64'
p21532
ag19
aNtp21533
tp21534
tp21535
sS'DAQmxSetAnlgEdgeRefTrigSlope'
p21536
((lp21537
S'int32'
p21538
ag11
a((S'taskHandle'
p21539
(lp21540
S'TaskHandle'
p21541
aNtp21542
(S'data'
p21543
(lp21544
S'int32'
p21545
aNtp21546
tp21547
tp21548
sS'DAQmxSetCIEncoderDecodingType'
p21549
((lp21550
S'int32'
p21551
ag11
a((S'taskHandle'
p21552
(lp21553
S'TaskHandle'
p21554
aNtp21555
(S'channel'
p21556
(lp21557
S'char'
p21558
a(lp21559
I-1
aaNtp21560
(S'data'
p21561
(lp21562
S'int32'
p21563
aNtp21564
tp21565
tp21566
sS'DAQmxResetWriteOffset'
p21567
((lp21568
S'int32'
p21569
ag11
a((S'taskHandle'
p21570
(lp21571
S'TaskHandle'
p21572
aNtp21573
tp21574
tp21575
sS'DAQmxResetSyncPulseSrc'
p21576
((lp21577
S'int32'
p21578
ag11
a((S'taskHandle'
p21579
(lp21580
S'TaskHandle'
p21581
aNtp21582
tp21583
tp21584
sS'DAQmxGetSysScales'
p21585
((lp21586
S'int32'
p21587
ag11
a((S'data'
p21588
(lp21589
S'char'
p21590
ag19
aNtp21591
(S'bufferSize'
p21592
(lp21593
S'uInt32'
p21594
aNtp21595
tp21596
tp21597
sS'DAQmxReadAnalogScalarF64'
p21598
((lp21599
S'int32'
p21600
ag11
a((S'taskHandle'
p21601
(lp21602
S'TaskHandle'
p21603
aNtp21604
(S'timeout'
p21605
(lp21606
S'float64'
p21607
aNtp21608
(S'value'
p21609
(lp21610
S'float64'
p21611
ag19
aNtp21612
(S'reserved'
p21613
(lp21614
S'bool32'
p21615
ag19
aNtp21616
tp21617
tp21618
sS'DAQmxGetCIEncoderZInputDigFltrEnable'
p21619
((lp21620
S'int32'
p21621
ag11
a((S'taskHandle'
p21622
(lp21623
S'TaskHandle'
p21624
aNtp21625
(S'channel'
p21626
(lp21627
S'char'
p21628
a(lp21629
I-1
aaNtp21630
(S'data'
p21631
(lp21632
S'bool32'
p21633
ag19
aNtp21634
tp21635
tp21636
sS'DAQmxResetAICoupling'
p21637
((lp21638
S'int32'
p21639
ag11
a((S'taskHandle'
p21640
(lp21641
S'TaskHandle'
p21642
aNtp21643
(S'channel'
p21644
(lp21645
S'char'
p21646
a(lp21647
I-1
aaNtp21648
tp21649
tp21650
sS'DAQmxResetCIEncoderBInputDigFltrMinPulseWidth'
p21651
((lp21652
S'int32'
p21653
ag11
a((S'taskHandle'
p21654
(lp21655
S'TaskHandle'
p21656
aNtp21657
(S'channel'
p21658
(lp21659
S'char'
p21660
a(lp21661
I-1
aaNtp21662
tp21663
tp21664
sS'DAQmxSetAODataXferMech'
p21665
((lp21666
S'int32'
p21667
ag11
a((S'taskHandle'
p21668
(lp21669
S'TaskHandle'
p21670
aNtp21671
(S'channel'
p21672
(lp21673
S'char'
p21674
a(lp21675
I-1
aaNtp21676
(S'data'
p21677
(lp21678
S'int32'
p21679
aNtp21680
tp21681
tp21682
sS'DAQmxGetScalePolyForwardCoeff'
p21683
((lp21684
S'int32'
p21685
ag11
a((S'scaleName'
p21686
(lp21687
S'char'
p21688
a(lp21689
I-1
aaNtp21690
(S'data'
p21691
(lp21692
S'float64'
p21693
ag19
aNtp21694
(S'arraySizeInSamples'
p21695
(lp21696
S'uInt32'
p21697
aNtp21698
tp21699
tp21700
sS'DAQmxResetAIChanCalTableScaledVals'
p21701
((lp21702
S'int32'
p21703
ag11
a((S'taskHandle'
p21704
(lp21705
S'TaskHandle'
p21706
aNtp21707
(S'channel'
p21708
(lp21709
S'char'
p21710
a(lp21711
I-1
aaNtp21712
tp21713
tp21714
sS'DAQmxSetBufInputBufSize'
p21715
((lp21716
S'int32'
p21717
ag11
a((S'taskHandle'
p21718
(lp21719
S'TaskHandle'
p21720
aNtp21721
(S'data'
p21722
(lp21723
S'uInt32'
p21724
aNtp21725
tp21726
tp21727
sS'DAQmxGetReadChannelsToRead'
p21728
((lp21729
S'int32'
p21730
ag11
a((S'taskHandle'
p21731
(lp21732
S'TaskHandle'
p21733
aNtp21734
(S'data'
p21735
(lp21736
S'char'
p21737
ag19
aNtp21738
(S'bufferSize'
p21739
(lp21740
S'uInt32'
p21741
aNtp21742
tp21743
tp21744
sS'DAQmxResetCOCtrTimebaseRate'
p21745
((lp21746
S'int32'
p21747
ag11
a((S'taskHandle'
p21748
(lp21749
S'TaskHandle'
p21750
aNtp21751
(S'channel'
p21752
(lp21753
S'char'
p21754
a(lp21755
I-1
aaNtp21756
tp21757
tp21758
sS'DAQmxGetErrorString'
p21759
((lp21760
S'int32'
p21761
ag11
a((S'errorCode'
p21762
(lp21763
S'int32'
p21764
aNtp21765
(S'errorString'
p21766
(lp21767
S'char'
p21768
a(lp21769
I-1
aaNtp21770
(S'bufferSize'
p21771
(lp21772
S'uInt32'
p21773
aNtp21774
tp21775
tp21776
sS'DAQmxResetAnlgWinPauseTrigSrc'
p21777
((lp21778
S'int32'
p21779
ag11
a((S'taskHandle'
p21780
(lp21781
S'TaskHandle'
p21782
aNtp21783
tp21784
tp21785
sS'DAQmxResetAIRTDType'
p21786
((lp21787
S'int32'
p21788
ag11
a((S'taskHandle'
p21789
(lp21790
S'TaskHandle'
p21791
aNtp21792
(S'channel'
p21793
(lp21794
S'char'
p21795
a(lp21796
I-1
aaNtp21797
tp21798
tp21799
sS'DAQmxResetCICtrTimebaseDigSyncEnable'
p21800
((lp21801
S'int32'
p21802
ag11
a((S'taskHandle'
p21803
(lp21804
S'TaskHandle'
p21805
aNtp21806
(S'channel'
p21807
(lp21808
S'char'
p21809
a(lp21810
I-1
aaNtp21811
tp21812
tp21813
sS'DAQmxResetDelayFromSampClkDelay'
p21814
((lp21815
S'int32'
p21816
ag11
a((S'taskHandle'
p21817
(lp21818
S'TaskHandle'
p21819
aNtp21820
tp21821
tp21822
sS'DAQmxResetAIChanCalPolyForwardCoeff'
p21823
((lp21824
S'int32'
p21825
ag11
a((S'taskHandle'
p21826
(lp21827
S'TaskHandle'
p21828
aNtp21829
(S'channel'
p21830
(lp21831
S'char'
p21832
a(lp21833
I-1
aaNtp21834
tp21835
tp21836
sS'DAQmxResetSampClkDigFltrEnable'
p21837
((lp21838
S'int32'
p21839
ag11
a((S'taskHandle'
p21840
(lp21841
S'TaskHandle'
p21842
aNtp21843
tp21844
tp21845
sS'DAQmxResetAIBridgeShuntCalSelect'
p21846
((lp21847
S'int32'
p21848
ag11
a((S'taskHandle'
p21849
(lp21850
S'TaskHandle'
p21851
aNtp21852
(S'channel'
p21853
(lp21854
S'char'
p21855
a(lp21856
I-1
aaNtp21857
tp21858
tp21859
sS'DAQmxGetSwitchDevNumSwitchChans'
p21860
((lp21861
S'int32'
p21862
ag11
a((S'deviceName'
p21863
(lp21864
S'char'
p21865
a(lp21866
I-1
aaNtp21867
(S'data'
p21868
(lp21869
S'uInt32'
p21870
ag19
aNtp21871
tp21872
tp21873
sS'DAQmxSetAIBridgeShuntCalEnable'
p21874
((lp21875
S'int32'
p21876
ag11
a((S'taskHandle'
p21877
(lp21878
S'TaskHandle'
p21879
aNtp21880
(S'channel'
p21881
(lp21882
S'char'
p21883
a(lp21884
I-1
aaNtp21885
(S'data'
p21886
(lp21887
S'bool32'
p21888
aNtp21889
tp21890
tp21891
sS'DAQmxGetAnlgEdgeRefTrigSrc'
p21892
((lp21893
S'int32'
p21894
ag11
a((S'taskHandle'
p21895
(lp21896
S'TaskHandle'
p21897
aNtp21898
(S'data'
p21899
(lp21900
S'char'
p21901
ag19
aNtp21902
(S'bufferSize'
p21903
(lp21904
S'uInt32'
p21905
aNtp21906
tp21907
tp21908
sS'DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseRate'
p21909
((lp21910
S'int32'
p21911
ag11
a((S'taskHandle'
p21912
(lp21913
S'TaskHandle'
p21914
aNtp21915
tp21916
tp21917
sS'DAQmxSetAnlgLvlPauseTrigWhen'
p21918
((lp21919
S'int32'
p21920
ag11
a((S'taskHandle'
p21921
(lp21922
S'TaskHandle'
p21923
aNtp21924
(S'data'
p21925
(lp21926
S'int32'
p21927
aNtp21928
tp21929
tp21930
sS'DAQmxGetWriteRawDataWidth'
p21931
((lp21932
S'int32'
p21933
ag11
a((S'taskHandle'
p21934
(lp21935
S'TaskHandle'
p21936
aNtp21937
(S'data'
p21938
(lp21939
S'uInt32'
p21940
ag19
aNtp21941
tp21942
tp21943
sS'DAQmxResetAdvTrigType'
p21944
((lp21945
S'int32'
p21946
ag11
a((S'taskHandle'
p21947
(lp21948
S'TaskHandle'
p21949
aNtp21950
tp21951
tp21952
sS'DAQmxReadBinaryU16'
p21953
((lp21954
S'int32'
p21955
ag11
a((S'taskHandle'
p21956
(lp21957
S'TaskHandle'
p21958
aNtp21959
(S'numSampsPerChan'
p21960
(lp21961
S'int32'
p21962
aNtp21963
(S'timeout'
p21964
(lp21965
S'float64'
p21966
aNtp21967
(S'fillMode'
p21968
(lp21969
S'bool32'
p21970
aNtp21971
(S'readArray'
p21972
(lp21973
S'uInt16'
p21974
a(lp21975
I-1
aaNtp21976
(S'arraySizeInSamps'
p21977
(lp21978
S'uInt32'
p21979
aNtp21980
(S'sampsPerChanRead'
p21981
(lp21982
S'int32'
p21983
ag19
aNtp21984
(S'reserved'
p21985
(lp21986
S'bool32'
p21987
ag19
aNtp21988
tp21989
tp21990
sS'DAQmxResetExportedCtrOutEventOutputTerm'
p21991
((lp21992
S'int32'
p21993
ag11
a((S'taskHandle'
p21994
(lp21995
S'TaskHandle'
p21996
aNtp21997
tp21998
tp21999
sS'DAQmxGetCOPulseFreq'
p22000
((lp22001
S'int32'
p22002
ag11
a((S'taskHandle'
p22003
(lp22004
S'TaskHandle'
p22005
aNtp22006
(S'channel'
p22007
(lp22008
S'char'
p22009
a(lp22010
I-1
aaNtp22011
(S'data'
p22012
(lp22013
S'float64'
p22014
ag19
aNtp22015
tp22016
tp22017
sS'DAQmxSetCICountEdgesInitialCnt'
p22018
((lp22019
S'int32'
p22020
ag11
a((S'taskHandle'
p22021
(lp22022
S'TaskHandle'
p22023
aNtp22024
(S'channel'
p22025
(lp22026
S'char'
p22027
a(lp22028
I-1
aaNtp22029
(S'data'
p22030
(lp22031
S'uInt32'
p22032
aNtp22033
tp22034
tp22035
sS'DAQmxInitExtCal'
p22036
((lp22037
S'int32'
p22038
ag11
a((S'deviceName'
p22039
(lp22040
S'char'
p22041
a(lp22042
I-1
aaNtp22043
(S'password'
p22044
(lp22045
S'char'
p22046
a(lp22047
I-1
aaNtp22048
(S'calHandle'
p22049
(lp22050
S'uInt32'
p22051
ag19
aNtp22052
tp22053
tp22054
sS'DAQmxGetSyncPulseMinDelayToStart'
p22055
((lp22056
S'int32'
p22057
ag11
a((S'taskHandle'
p22058
(lp22059
S'TaskHandle'
p22060
aNtp22061
(S'data'
p22062
(lp22063
S'float64'
p22064
ag19
aNtp22065
tp22066
tp22067
sS'DAQmxSetExportedAdvCmpltEventDelay'
p22068
((lp22069
S'int32'
p22070
ag11
a((S'taskHandle'
p22071
(lp22072
S'TaskHandle'
p22073
aNtp22074
(S'data'
p22075
(lp22076
S'float64'
p22077
aNtp22078
tp22079
tp22080
sS'DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate'
p22081
((lp22082
S'int32'
p22083
ag11
a((S'taskHandle'
p22084
(lp22085
S'TaskHandle'
p22086
aNtp22087
(S'channel'
p22088
(lp22089
S'char'
p22090
a(lp22091
I-1
aaNtp22092
(S'data'
p22093
(lp22094
S'float64'
p22095
ag19
aNtp22096
tp22097
tp22098
sS'DAQmxConfigureTEDS'
p22099
((lp22100
S'int32'
p22101
ag11
a((S'physicalChannel'
p22102
(lp22103
S'char'
p22104
a(lp22105
I-1
aaNtp22106
(S'filePath'
p22107
(lp22108
S'char'
p22109
a(lp22110
I-1
aaNtp22111
tp22112
tp22113
sS'DAQmxResetDigEdgeRefTrigEdge'
p22114
((lp22115
S'int32'
p22116
ag11
a((S'taskHandle'
p22117
(lp22118
S'TaskHandle'
p22119
aNtp22120
tp22121
tp22122
sS'DAQmxResetAnlgWinRefTrigCoupling'
p22123
((lp22124
S'int32'
p22125
ag11
a((S'taskHandle'
p22126
(lp22127
S'TaskHandle'
p22128
aNtp22129
tp22130
tp22131
sS'DAQmxRegisterDoneEvent'
p22132
((lp22133
S'int32'
p22134
ag11
a((S'task'
p22135
(lp22136
S'TaskHandle'
p22137
aNtp22138
(S'options'
p22139
(lp22140
S'uInt32'
p22141
aNtp22142
(S'callbackFunction'
p22143
(lp22144
S'DAQmxDoneEventCallbackPtr'
p22145
aNtp22146
(S'callbackData'
p22147
(lp22148
S'void'
p22149
ag19
aNtp22150
tp22151
tp22152
sS'DAQmxGetExportedHshkEventPulsePolarity'
p22153
((lp22154
S'int32'
p22155
ag11
a((S'taskHandle'
p22156
(lp22157
S'TaskHandle'
p22158
aNtp22159
(S'data'
p22160
(lp22161
S'int32'
p22162
ag19
aNtp22163
tp22164
tp22165
sS'DAQmxGetSwitchScanWaitingForAdv'
p22166
((lp22167
S'int32'
p22168
ag11
a((S'taskHandle'
p22169
(lp22170
S'TaskHandle'
p22171
aNtp22172
(S'data'
p22173
(lp22174
S'bool32'
p22175
ag19
aNtp22176
tp22177
tp22178
sS'DAQmxSaveScale'
p22179
((lp22180
S'int32'
p22181
ag11
a((S'scaleName'
p22182
(lp22183
S'char'
p22184
a(lp22185
I-1
aaNtp22186
(S'saveAs'
p22187
(lp22188
S'char'
p22189
a(lp22190
I-1
aaNtp22191
(S'author'
p22192
(lp22193
S'char'
p22194
a(lp22195
I-1
aaNtp22196
(S'options'
p22197
(lp22198
S'uInt32'
p22199
aNtp22200
tp22201
tp22202
sS'DAQmxSetExportedRefTrigOutputTerm'
p22203
((lp22204
S'int32'
p22205
ag11
a((S'taskHandle'
p22206
(lp22207
S'TaskHandle'
p22208
aNtp22209
(S'data'
p22210
(lp22211
S'char'
p22212
ag19
aNtp22213
tp22214
tp22215
sS'DAQmxGetCOPulseTimeUnits'
p22216
((lp22217
S'int32'
p22218
ag11
a((S'taskHandle'
p22219
(lp22220
S'TaskHandle'
p22221
aNtp22222
(S'channel'
p22223
(lp22224
S'char'
p22225
a(lp22226
I-1
aaNtp22227
(S'data'
p22228
(lp22229
S'int32'
p22230
ag19
aNtp22231
tp22232
tp22233
sS'DAQmxResetAOVoltageUnits'
p22234
((lp22235
S'int32'
p22236
ag11
a((S'taskHandle'
p22237
(lp22238
S'TaskHandle'
p22239
aNtp22240
(S'channel'
p22241
(lp22242
S'char'
p22243
a(lp22244
I-1
aaNtp22245
tp22246
tp22247
sS'DAQmxSetRefTrigType'
p22248
((lp22249
S'int32'
p22250
ag11
a((S'taskHandle'
p22251
(lp22252
S'TaskHandle'
p22253
aNtp22254
(S'data'
p22255
(lp22256
S'int32'
p22257
aNtp22258
tp22259
tp22260
sS'DAQmxResetAODACOffsetVal'
p22261
((lp22262
S'int32'
p22263
ag11
a((S'taskHandle'
p22264
(lp22265
S'TaskHandle'
p22266
aNtp22267
(S'channel'
p22268
(lp22269
S'char'
p22270
a(lp22271
I-1
aaNtp22272
tp22273
tp22274
sS'DAQmxGetSwitchChanMaxACSwitchCurrent'
p22275
((lp22276
S'int32'
p22277
ag11
a((S'switchChannelName'
p22278
(lp22279
S'char'
p22280
a(lp22281
I-1
aaNtp22282
(S'data'
p22283
(lp22284
S'float64'
p22285
ag19
aNtp22286
tp22287
tp22288
sS'DAQmxResetDigLvlPauseTrigWhen'
p22289
((lp22290
S'int32'
p22291
ag11
a((S'taskHandle'
p22292
(lp22293
S'TaskHandle'
p22294
aNtp22295
tp22296
tp22297
sS'DAQmxCreateTEDSAIThrmstrChanIex'
p22298
((lp22299
S'int32'
p22300
ag11
a((S'taskHandle'
p22301
(lp22302
S'TaskHandle'
p22303
aNtp22304
(S'physicalChannel'
p22305
(lp22306
S'char'
p22307
a(lp22308
I-1
aaNtp22309
(S'nameToAssignToChannel'
p22310
(lp22311
S'char'
p22312
a(lp22313
I-1
aaNtp22314
(S'minVal'
p22315
(lp22316
S'float64'
p22317
aNtp22318
(S'maxVal'
p22319
(lp22320
S'float64'
p22321
aNtp22322
(S'units'
p22323
(lp22324
S'int32'
p22325
aNtp22326
(S'resistanceConfig'
p22327
(lp22328
S'int32'
p22329
aNtp22330
(S'currentExcitSource'
p22331
(lp22332
S'int32'
p22333
aNtp22334
(S'currentExcitVal'
p22335
(lp22336
S'float64'
p22337
aNtp22338
tp22339
tp22340
sS'DAQmxGetAIChanCalEnableCal'
p22341
((lp22342
S'int32'
p22343
ag11
a((S'taskHandle'
p22344
(lp22345
S'TaskHandle'
p22346
aNtp22347
(S'channel'
p22348
(lp22349
S'char'
p22350
a(lp22351
I-1
aaNtp22352
(S'data'
p22353
(lp22354
S'bool32'
p22355
ag19
aNtp22356
tp22357
tp22358
sS'DAQmxGetAOEnhancedImageRejectionEnable'
p22359
((lp22360
S'int32'
p22361
ag11
a((S'taskHandle'
p22362
(lp22363
S'TaskHandle'
p22364
aNtp22365
(S'channel'
p22366
(lp22367
S'char'
p22368
a(lp22369
I-1
aaNtp22370
(S'data'
p22371
(lp22372
S'bool32'
p22373
ag19
aNtp22374
tp22375
tp22376
sS'DAQmxResetCIFreqStartingEdge'
p22377
((lp22378
S'int32'
p22379
ag11
a((S'taskHandle'
p22380
(lp22381
S'TaskHandle'
p22382
aNtp22383
(S'channel'
p22384
(lp22385
S'char'
p22386
a(lp22387
I-1
aaNtp22388
tp22389
tp22390
sS'DAQmxSetDigPatternStartTrigPattern'
p22391
((lp22392
S'int32'
p22393
ag11
a((S'taskHandle'
p22394
(lp22395
S'TaskHandle'
p22396
aNtp22397
(S'data'
p22398
(lp22399
S'char'
p22400
ag19
aNtp22401
tp22402
tp22403
sS'DAQmxSetExportedHshkEventInterlockedAssertedLvl'
p22404
((lp22405
S'int32'
p22406
ag11
a((S'taskHandle'
p22407
(lp22408
S'TaskHandle'
p22409
aNtp22410
(S'data'
p22411
(lp22412
S'int32'
p22413
aNtp22414
tp22415
tp22416
sS'DAQmxResetAIChanCalApplyCalIfExp'
p22417
((lp22418
S'int32'
p22419
ag11
a((S'taskHandle'
p22420
(lp22421
S'TaskHandle'
p22422
aNtp22423
(S'channel'
p22424
(lp22425
S'char'
p22426
a(lp22427
I-1
aaNtp22428
tp22429
tp22430
sS'DAQmxSetAOUseOnlyOnBrdMem'
p22431
((lp22432
S'int32'
p22433
ag11
a((S'taskHandle'
p22434
(lp22435
S'TaskHandle'
p22436
aNtp22437
(S'channel'
p22438
(lp22439
S'char'
p22440
a(lp22441
I-1
aaNtp22442
(S'data'
p22443
(lp22444
S'bool32'
p22445
aNtp22446
tp22447
tp22448
sS'DAQmxGetCIFreqStartingEdge'
p22449
((lp22450
S'int32'
p22451
ag11
a((S'taskHandle'
p22452
(lp22453
S'TaskHandle'
p22454
aNtp22455
(S'channel'
p22456
(lp22457
S'char'
p22458
a(lp22459
I-1
aaNtp22460
(S'data'
p22461
(lp22462
S'int32'
p22463
ag19
aNtp22464
tp22465
tp22466
sS'DAQmxSetCICtrTimebaseDigSyncEnable'
p22467
((lp22468
S'int32'
p22469
ag11
a((S'taskHandle'
p22470
(lp22471
S'TaskHandle'
p22472
aNtp22473
(S'channel'
p22474
(lp22475
S'char'
p22476
a(lp22477
I-1
aaNtp22478
(S'data'
p22479
(lp22480
S'bool32'
p22481
aNtp22482
tp22483
tp22484
sS'DAQmxGetAnlgWinRefTrigWhen'
p22485
((lp22486
S'int32'
p22487
ag11
a((S'taskHandle'
p22488
(lp22489
S'TaskHandle'
p22490
aNtp22491
(S'data'
p22492
(lp22493
S'int32'
p22494
ag19
aNtp22495
tp22496
tp22497
sS'DAQmxResetAnlgWinPauseTrigTop'
p22498
((lp22499
S'int32'
p22500
ag11
a((S'taskHandle'
p22501
(lp22502
S'TaskHandle'
p22503
aNtp22504
tp22505
tp22506
sS'DAQmxGetExportedCtrOutEventOutputTerm'
p22507
((lp22508
S'int32'
p22509
ag11
a((S'taskHandle'
p22510
(lp22511
S'TaskHandle'
p22512
aNtp22513
(S'data'
p22514
(lp22515
S'char'
p22516
ag19
aNtp22517
(S'bufferSize'
p22518
(lp22519
S'uInt32'
p22520
aNtp22521
tp22522
tp22523
sS'DAQmxSetAnlgEdgeStartTrigLvl'
p22524
((lp22525
S'int32'
p22526
ag11
a((S'taskHandle'
p22527
(lp22528
S'TaskHandle'
p22529
aNtp22530
(S'data'
p22531
(lp22532
S'float64'
p22533
aNtp22534
tp22535
tp22536
sS'DAQmxSetAODACRngLow'
p22537
((lp22538
S'int32'
p22539
ag11
a((S'taskHandle'
p22540
(lp22541
S'TaskHandle'
p22542
aNtp22543
(S'channel'
p22544
(lp22545
S'char'
p22546
a(lp22547
I-1
aaNtp22548
(S'data'
p22549
(lp22550
S'float64'
p22551
aNtp22552
tp22553
tp22554
sS'DAQmxCloseExtCal'
p22555
((lp22556
S'int32'
p22557
ag11
a((S'calHandle'
p22558
(lp22559
S'uInt32'
p22560
aNtp22561
(S'action'
p22562
(lp22563
S'int32'
p22564
aNtp22565
tp22566
tp22567
sS'DAQmxResetPauseTrigType'
p22568
((lp22569
S'int32'
p22570
ag11
a((S'taskHandle'
p22571
(lp22572
S'TaskHandle'
p22573
aNtp22574
tp22575
tp22576
sS'DAQmxGetAnlgWinRefTrigTop'
p22577
((lp22578
S'int32'
p22579
ag11
a((S'taskHandle'
p22580
(lp22581
S'TaskHandle'
p22582
aNtp22583
(S'data'
p22584
(lp22585
S'float64'
p22586
ag19
aNtp22587
tp22588
tp22589
sS'DAQmxGetCICustomScaleName'
p22590
((lp22591
S'int32'
p22592
ag11
a((S'taskHandle'
p22593
(lp22594
S'TaskHandle'
p22595
aNtp22596
(S'channel'
p22597
(lp22598
S'char'
p22599
a(lp22600
I-1
aaNtp22601
(S'data'
p22602
(lp22603
S'char'
p22604
ag19
aNtp22605
(S'bufferSize'
p22606
(lp22607
S'uInt32'
p22608
aNtp22609
tp22610
tp22611
sS'DAQmxResetExportedChangeDetectEventOutputTerm'
p22612
((lp22613
S'int32'
p22614
ag11
a((S'taskHandle'
p22615
(lp22616
S'TaskHandle'
p22617
aNtp22618
tp22619
tp22620
sS'DAQmxGetAODACRefAllowConnToGnd'
p22621
((lp22622
S'int32'
p22623
ag11
a((S'taskHandle'
p22624
(lp22625
S'TaskHandle'
p22626
aNtp22627
(S'channel'
p22628
(lp22629
S'char'
p22630
a(lp22631
I-1
aaNtp22632
(S'data'
p22633
(lp22634
S'bool32'
p22635
ag19
aNtp22636
tp22637
tp22638
sS'DAQmxSetAIMax'
p22639
((lp22640
S'int32'
p22641
ag11
a((S'taskHandle'
p22642
(lp22643
S'TaskHandle'
p22644
aNtp22645
(S'channel'
p22646
(lp22647
S'char'
p22648
a(lp22649
I-1
aaNtp22650
(S'data'
p22651
(lp22652
S'float64'
p22653
aNtp22654
tp22655
tp22656
sS'DAQmxGetExportedAIHoldCmpltEventPulsePolarity'
p22657
((lp22658
S'int32'
p22659
ag11
a((S'taskHandle'
p22660
(lp22661
S'TaskHandle'
p22662
aNtp22663
(S'data'
p22664
(lp22665
S'int32'
p22666
ag19
aNtp22667
tp22668
tp22669
sS'DAQmxCreateAIMicrophoneChan'
p22670
((lp22671
S'int32'
p22672
ag11
a((S'taskHandle'
p22673
(lp22674
S'TaskHandle'
p22675
aNtp22676
(S'physicalChannel'
p22677
(lp22678
S'char'
p22679
a(lp22680
I-1
aaNtp22681
(S'nameToAssignToChannel'
p22682
(lp22683
S'char'
p22684
a(lp22685
I-1
aaNtp22686
(S'terminalConfig'
p22687
(lp22688
S'int32'
p22689
aNtp22690
(S'units'
p22691
(lp22692
S'int32'
p22693
aNtp22694
(S'micSensitivity'
p22695
(lp22696
S'float64'
p22697
aNtp22698
(S'maxSndPressLevel'
p22699
(lp22700
S'float64'
p22701
aNtp22702
(S'currentExcitSource'
p22703
(lp22704
S'int32'
p22705
aNtp22706
(S'currentExcitVal'
p22707
(lp22708
S'float64'
p22709
aNtp22710
(S'customScaleName'
p22711
(lp22712
S'char'
p22713
a(lp22714
I-1
aaNtp22715
tp22716
tp22717
sS'DAQmxChangeExtCalPassword'
p22718
((lp22719
S'int32'
p22720
ag11
a((S'deviceName'
p22721
(lp22722
S'char'
p22723
a(lp22724
I-1
aaNtp22725
(S'password'
p22726
(lp22727
S'char'
p22728
a(lp22729
I-1
aaNtp22730
(S'newPassword'
p22731
(lp22732
S'char'
p22733
a(lp22734
I-1
aaNtp22735
tp22736
tp22737
sS'DAQmxGetTaskDevices'
p22738
((lp22739
S'int32'
p22740
ag11
a((S'taskHandle'
p22741
(lp22742
S'TaskHandle'
p22743
aNtp22744
(S'data'
p22745
(lp22746
S'char'
p22747
ag19
aNtp22748
(S'bufferSize'
p22749
(lp22750
S'uInt32'
p22751
aNtp22752
tp22753
tp22754
sS'DAQmxWriteBinaryI32'
p22755
((lp22756
S'int32'
p22757
ag11
a((S'taskHandle'
p22758
(lp22759
S'TaskHandle'
p22760
aNtp22761
(S'numSampsPerChan'
p22762
(lp22763
S'int32'
p22764
aNtp22765
(S'autoStart'
p22766
(lp22767
S'bool32'
p22768
aNtp22769
(S'timeout'
p22770
(lp22771
S'float64'
p22772
aNtp22773
(S'dataLayout'
p22774
(lp22775
S'bool32'
p22776
aNtp22777
(S'writeArray'
p22778
(lp22779
S'int32'
p22780
a(lp22781
I-1
aaNtp22782
(S'sampsPerChanWritten'
p22783
(lp22784
S'int32'
p22785
ag19
aNtp22786
(S'reserved'
p22787
(lp22788
S'bool32'
p22789
ag19
aNtp22790
tp22791
tp22792
sS'DAQmxResetAnlgEdgeRefTrigSrc'
p22793
((lp22794
S'int32'
p22795
ag11
a((S'taskHandle'
p22796
(lp22797
S'TaskHandle'
p22798
aNtp22799
tp22800
tp22801
sS'DAQmxGetAIExcitUseMultiplexed'
p22802
((lp22803
S'int32'
p22804
ag11
a((S'taskHandle'
p22805
(lp22806
S'TaskHandle'
p22807
aNtp22808
(S'channel'
p22809
(lp22810
S'char'
p22811
a(lp22812
I-1
aaNtp22813
(S'data'
p22814
(lp22815
S'bool32'
p22816
ag19
aNtp22817
tp22818
tp22819
sS'DAQmxSetCIAngEncoderPulsesPerRev'
p22820
((lp22821
S'int32'
p22822
ag11
a((S'taskHandle'
p22823
(lp22824
S'TaskHandle'
p22825
aNtp22826
(S'channel'
p22827
(lp22828
S'char'
p22829
a(lp22830
I-1
aaNtp22831
(S'data'
p22832
(lp22833
S'uInt32'
p22834
aNtp22835
tp22836
tp22837
sS'DAQmxSetAIStrainGageGageFactor'
p22838
((lp22839
S'int32'
p22840
ag11
a((S'taskHandle'
p22841
(lp22842
S'TaskHandle'
p22843
aNtp22844
(S'channel'
p22845
(lp22846
S'char'
p22847
a(lp22848
I-1
aaNtp22849
(S'data'
p22850
(lp22851
S'float64'
p22852
aNtp22853
tp22854
tp22855
sS'DAQmxGetTaskChannels'
p22856
((lp22857
S'int32'
p22858
ag11
a((S'taskHandle'
p22859
(lp22860
S'TaskHandle'
p22861
aNtp22862
(S'data'
p22863
(lp22864
S'char'
p22865
ag19
aNtp22866
(S'bufferSize'
p22867
(lp22868
S'uInt32'
p22869
aNtp22870
tp22871
tp22872
sS'DAQmxCfgOutputBuffer'
p22873
((lp22874
S'int32'
p22875
ag11
a((S'taskHandle'
p22876
(lp22877
S'TaskHandle'
p22878
aNtp22879
(S'numSampsPerChan'
p22880
(lp22881
S'uInt32'
p22882
aNtp22883
tp22884
tp22885
sS'DAQmxResetCILinEncoderInitialPos'
p22886
((lp22887
S'int32'
p22888
ag11
a((S'taskHandle'
p22889
(lp22890
S'TaskHandle'
p22891
aNtp22892
(S'channel'
p22893
(lp22894
S'char'
p22895
a(lp22896
I-1
aaNtp22897
tp22898
tp22899
sS'DAQmxGetAIEnhancedAliasRejectionEnable'
p22900
((lp22901
S'int32'
p22902
ag11
a((S'taskHandle'
p22903
(lp22904
S'TaskHandle'
p22905
aNtp22906
(S'channel'
p22907
(lp22908
S'char'
p22909
a(lp22910
I-1
aaNtp22911
(S'data'
p22912
(lp22913
S'bool32'
p22914
ag19
aNtp22915
tp22916
tp22917
sS'DAQmxSetSampClkRate'
p22918
((lp22919
S'int32'
p22920
ag11
a((S'taskHandle'
p22921
(lp22922
S'TaskHandle'
p22923
aNtp22924
(S'data'
p22925
(lp22926
S'float64'
p22927
aNtp22928
tp22929
tp22930
sS'DAQmxAdjust4225Cal'
p22931
((lp22932
S'int32'
p22933
ag11
a((S'calHandle'
p22934
(lp22935
S'uInt32'
p22936
aNtp22937
(S'channelNames'
p22938
(lp22939
S'char'
p22940
a(lp22941
I-1
aaNtp22942
(S'gain'
p22943
(lp22944
S'float64'
p22945
aNtp22946
(S'inputVal'
p22947
(lp22948
S'float64'
p22949
aNtp22950
tp22951
tp22952
sS'DAQmxResetWriteWaitMode'
p22953
((lp22954
S'int32'
p22955
ag11
a((S'taskHandle'
p22956
(lp22957
S'TaskHandle'
p22958
aNtp22959
tp22960
tp22961
sS'DAQmxGetAIDevScalingCoeff'
p22962
((lp22963
S'int32'
p22964
ag11
a((S'taskHandle'
p22965
(lp22966
S'TaskHandle'
p22967
aNtp22968
(S'channel'
p22969
(lp22970
S'char'
p22971
a(lp22972
I-1
aaNtp22973
(S'data'
p22974
(lp22975
S'float64'
p22976
ag19
aNtp22977
(S'arraySizeInSamples'
p22978
(lp22979
S'uInt32'
p22980
aNtp22981
tp22982
tp22983
sS'DAQmxGetDIDataXferMech'
p22984
((lp22985
S'int32'
p22986
ag11
a((S'taskHandle'
p22987
(lp22988
S'TaskHandle'
p22989
aNtp22990
(S'channel'
p22991
(lp22992
S'char'
p22993
a(lp22994
I-1
aaNtp22995
(S'data'
p22996
(lp22997
S'int32'
p22998
ag19
aNtp22999
tp23000
tp23001
sS'DAQmxGetSwitchChanMaxACVoltage'
p23002
((lp23003
S'int32'
p23004
ag11
a((S'switchChannelName'
p23005
(lp23006
S'char'
p23007
a(lp23008
I-1
aaNtp23009
(S'data'
p23010
(lp23011
S'float64'
p23012
ag19
aNtp23013
tp23014
tp23015
sS'DAQmxGetCICountEdgesDigSyncEnable'
p23016
((lp23017
S'int32'
p23018
ag11
a((S'taskHandle'
p23019
(lp23020
S'TaskHandle'
p23021
aNtp23022
(S'channel'
p23023
(lp23024
S'char'
p23025
a(lp23026
I-1
aaNtp23027
(S'data'
p23028
(lp23029
S'bool32'
p23030
ag19
aNtp23031
tp23032
tp23033
sS'DAQmxSetAOMin'
p23034
((lp23035
S'int32'
p23036
ag11
a((S'taskHandle'
p23037
(lp23038
S'TaskHandle'
p23039
aNtp23040
(S'channel'
p23041
(lp23042
S'char'
p23043
a(lp23044
I-1
aaNtp23045
(S'data'
p23046
(lp23047
S'float64'
p23048
aNtp23049
tp23050
tp23051
sS'DAQmxResetCIPeriodMeasTime'
p23052
((lp23053
S'int32'
p23054
ag11
a((S'taskHandle'
p23055
(lp23056
S'TaskHandle'
p23057
aNtp23058
(S'channel'
p23059
(lp23060
S'char'
p23061
a(lp23062
I-1
aaNtp23063
tp23064
tp23065
sS'DAQmxGetDevAOPhysicalChans'
p23066
((lp23067
S'int32'
p23068
ag11
a((S'device'
p23069
(lp23070
S'char'
p23071
a(lp23072
I-1
aaNtp23073
(S'data'
p23074
(lp23075
S'char'
p23076
ag19
aNtp23077
(S'bufferSize'
p23078
(lp23079
S'uInt32'
p23080
aNtp23081
tp23082
tp23083
sS'DAQmxResetAICustomScaleName'
p23084
((lp23085
S'int32'
p23086
ag11
a((S'taskHandle'
p23087
(lp23088
S'TaskHandle'
p23089
aNtp23090
(S'channel'
p23091
(lp23092
S'char'
p23093
a(lp23094
I-1
aaNtp23095
tp23096
tp23097
sS'DAQmxGetCalDevTemp'
p23098
((lp23099
S'int32'
p23100
ag11
a((S'deviceName'
p23101
(lp23102
S'char'
p23103
a(lp23104
I-1
aaNtp23105
(S'data'
p23106
(lp23107
S'float64'
p23108
ag19
aNtp23109
tp23110
tp23111
sS'DAQmxAdjust4220Cal'
p23112
((lp23113
S'int32'
p23114
ag11
a((S'calHandle'
p23115
(lp23116
S'uInt32'
p23117
aNtp23118
(S'channelNames'
p23119
(lp23120
S'char'
p23121
a(lp23122
I-1
aaNtp23123
(S'gain'
p23124
(lp23125
S'float64'
p23126
aNtp23127
(S'inputVal'
p23128
(lp23129
S'float64'
p23130
aNtp23131
tp23132
tp23133
sS'DAQmxResetAIACExcitWireMode'
p23134
((lp23135
S'int32'
p23136
ag11
a((S'taskHandle'
p23137
(lp23138
S'TaskHandle'
p23139
aNtp23140
(S'channel'
p23141
(lp23142
S'char'
p23143
a(lp23144
I-1
aaNtp23145
tp23146
tp23147
sS'DAQmxGetCIPulseWidthDigFltrMinPulseWidth'
p23148
((lp23149
S'int32'
p23150
ag11
a((S'taskHandle'
p23151
(lp23152
S'TaskHandle'
p23153
aNtp23154
(S'channel'
p23155
(lp23156
S'char'
p23157
a(lp23158
I-1
aaNtp23159
(S'data'
p23160
(lp23161
S'float64'
p23162
ag19
aNtp23163
tp23164
tp23165
sS'DAQmxSetInterlockedHshkTrigAssertedLvl'
p23166
((lp23167
S'int32'
p23168
ag11
a((S'taskHandle'
p23169
(lp23170
S'TaskHandle'
p23171
aNtp23172
(S'data'
p23173
(lp23174
S'int32'
p23175
aNtp23176
tp23177
tp23178
sS'DAQmxSetSampTimingType'
p23179
((lp23180
S'int32'
p23181
ag11
a((S'taskHandle'
p23182
(lp23183
S'TaskHandle'
p23184
aNtp23185
(S'data'
p23186
(lp23187
S'int32'
p23188
aNtp23189
tp23190
tp23191
sS'DAQmxResetSampClkTimebaseMasterTimebaseDiv'
p23192
((lp23193
S'int32'
p23194
ag11
a((S'taskHandle'
p23195
(lp23196
S'TaskHandle'
p23197
aNtp23198
tp23199
tp23200
sS'DAQmxResetOnDemandSimultaneousAOEnable'
p23201
((lp23202
S'int32'
p23203
ag11
a((S'taskHandle'
p23204
(lp23205
S'TaskHandle'
p23206
aNtp23207
tp23208
tp23209
sS'DAQmxGetAnlgEdgeStartTrigHyst'
p23210
((lp23211
S'int32'
p23212
ag11
a((S'taskHandle'
p23213
(lp23214
S'TaskHandle'
p23215
aNtp23216
(S'data'
p23217
(lp23218
S'float64'
p23219
ag19
aNtp23220
tp23221
tp23222
sS'DAQmxReadDigitalU16'
p23223
((lp23224
S'int32'
p23225
ag11
a((S'taskHandle'
p23226
(lp23227
S'TaskHandle'
p23228
aNtp23229
(S'numSampsPerChan'
p23230
(lp23231
S'int32'
p23232
aNtp23233
(S'timeout'
p23234
(lp23235
S'float64'
p23236
aNtp23237
(S'fillMode'
p23238
(lp23239
S'bool32'
p23240
aNtp23241
(S'readArray'
p23242
(lp23243
S'uInt16'
p23244
a(lp23245
I-1
aaNtp23246
(S'arraySizeInSamps'
p23247
(lp23248
S'uInt32'
p23249
aNtp23250
(S'sampsPerChanRead'
p23251
(lp23252
S'int32'
p23253
ag19
aNtp23254
(S'reserved'
p23255
(lp23256
S'bool32'
p23257
ag19
aNtp23258
tp23259
tp23260
sS'DAQmxSwitchConnect'
p23261
((lp23262
S'int32'
p23263
ag11
a((S'switchChannel1'
p23264
(lp23265
S'char'
p23266
a(lp23267
I-1
aaNtp23268
(S'switchChannel2'
p23269
(lp23270
S'char'
p23271
a(lp23272
I-1
aaNtp23273
(S'waitForSettling'
p23274
(lp23275
S'bool32'
p23276
aNtp23277
tp23278
tp23279
sS'DAQmxGetDigPatternStartTrigPattern'
p23280
((lp23281
S'int32'
p23282
ag11
a((S'taskHandle'
p23283
(lp23284
S'TaskHandle'
p23285
aNtp23286
(S'data'
p23287
(lp23288
S'char'
p23289
ag19
aNtp23290
(S'bufferSize'
p23291
(lp23292
S'uInt32'
p23293
aNtp23294
tp23295
tp23296
sS'DAQmxResetDigPatternRefTrigWhen'
p23297
((lp23298
S'int32'
p23299
ag11
a((S'taskHandle'
p23300
(lp23301
S'TaskHandle'
p23302
aNtp23303
tp23304
tp23305
sS'DAQmxGetCILinEncoderUnits'
p23306
((lp23307
S'int32'
p23308
ag11
a((S'taskHandle'
p23309
(lp23310
S'TaskHandle'
p23311
aNtp23312
(S'channel'
p23313
(lp23314
S'char'
p23315
a(lp23316
I-1
aaNtp23317
(S'data'
p23318
(lp23319
S'int32'
p23320
ag19
aNtp23321
tp23322
tp23323
sS'DAQmxGetAIBridgeNomResistance'
p23324
((lp23325
S'int32'
p23326
ag11
a((S'taskHandle'
p23327
(lp23328
S'TaskHandle'
p23329
aNtp23330
(S'channel'
p23331
(lp23332
S'char'
p23333
a(lp23334
I-1
aaNtp23335
(S'data'
p23336
(lp23337
S'float64'
p23338
ag19
aNtp23339
tp23340
tp23341
sS'DAQmxStartTask'
p23342
((lp23343
S'int32'
p23344
ag11
a((S'taskHandle'
p23345
(lp23346
S'TaskHandle'
p23347
aNtp23348
tp23349
tp23350
sS'DAQmxGetAnlgEdgeStartTrigSlope'
p23351
((lp23352
S'int32'
p23353
ag11
a((S'taskHandle'
p23354
(lp23355
S'TaskHandle'
p23356
aNtp23357
(S'data'
p23358
(lp23359
S'int32'
p23360
ag19
aNtp23361
tp23362
tp23363
sS'DAQmxGetReadOverloadedChansExist'
p23364
((lp23365
S'int32'
p23366
ag11
a((S'taskHandle'
p23367
(lp23368
S'TaskHandle'
p23369
aNtp23370
(S'data'
p23371
(lp23372
S'bool32'
p23373
ag19
aNtp23374
tp23375
tp23376
sS'DAQmxGetCIAngEncoderPulsesPerRev'
p23377
((lp23378
S'int32'
p23379
ag11
a((S'taskHandle'
p23380
(lp23381
S'TaskHandle'
p23382
aNtp23383
(S'channel'
p23384
(lp23385
S'char'
p23386
a(lp23387
I-1
aaNtp23388
(S'data'
p23389
(lp23390
S'uInt32'
p23391
ag19
aNtp23392
tp23393
tp23394
sS'DAQmxResetReadOffset'
p23395
((lp23396
S'int32'
p23397
ag11
a((S'taskHandle'
p23398
(lp23399
S'TaskHandle'
p23400
aNtp23401
tp23402
tp23403
sS'DAQmxGetRealTimeReportMissedSamp'
p23404
((lp23405
S'int32'
p23406
ag11
a((S'taskHandle'
p23407
(lp23408
S'TaskHandle'
p23409
aNtp23410
(S'data'
p23411
(lp23412
S'bool32'
p23413
ag19
aNtp23414
tp23415
tp23416
sS'DAQmxGetAIAtten'
p23417
((lp23418
S'int32'
p23419
ag11
a((S'taskHandle'
p23420
(lp23421
S'TaskHandle'
p23422
aNtp23423
(S'channel'
p23424
(lp23425
S'char'
p23426
a(lp23427
I-1
aaNtp23428
(S'data'
p23429
(lp23430
S'float64'
p23431
ag19
aNtp23432
tp23433
tp23434
sS'DAQmxGetAIChanCalDesc'
p23435
((lp23436
S'int32'
p23437
ag11
a((S'taskHandle'
p23438
(lp23439
S'TaskHandle'
p23440
aNtp23441
(S'channel'
p23442
(lp23443
S'char'
p23444
a(lp23445
I-1
aaNtp23446
(S'data'
p23447
(lp23448
S'char'
p23449
ag19
aNtp23450
(S'bufferSize'
p23451
(lp23452
S'uInt32'
p23453
aNtp23454
tp23455
tp23456
sS'DAQmxSwitchDisconnectMulti'
p23457
((lp23458
S'int32'
p23459
ag11
a((S'connectionList'
p23460
(lp23461
S'char'
p23462
a(lp23463
I-1
aaNtp23464
(S'waitForSettling'
p23465
(lp23466
S'bool32'
p23467
aNtp23468
tp23469
tp23470
sS'DAQmxSetStartTrigDelay'
p23471
((lp23472
S'int32'
p23473
ag11
a((S'taskHandle'
p23474
(lp23475
S'TaskHandle'
p23476
aNtp23477
(S'data'
p23478
(lp23479
S'float64'
p23480
aNtp23481
tp23482
tp23483
sS'DAQmxResetBufOutputBufSize'
p23484
((lp23485
S'int32'
p23486
ag11
a((S'taskHandle'
p23487
(lp23488
S'TaskHandle'
p23489
aNtp23490
tp23491
tp23492
sS'DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc'
p23493
((lp23494
S'int32'
p23495
ag11
a((S'taskHandle'
p23496
(lp23497
S'TaskHandle'
p23498
aNtp23499
(S'channel'
p23500
(lp23501
S'char'
p23502
a(lp23503
I-1
aaNtp23504
(S'data'
p23505
(lp23506
S'char'
p23507
ag19
aNtp23508
tp23509
tp23510
sS'DAQmxCfgAnlgEdgeRefTrig'
p23511
((lp23512
S'int32'
p23513
ag11
a((S'taskHandle'
p23514
(lp23515
S'TaskHandle'
p23516
aNtp23517
(S'triggerSource'
p23518
(lp23519
S'char'
p23520
a(lp23521
I-1
aaNtp23522
(S'triggerSlope'
p23523
(lp23524
S'int32'
p23525
aNtp23526
(S'triggerLevel'
p23527
(lp23528
S'float64'
p23529
aNtp23530
(S'pretriggerSamples'
p23531
(lp23532
S'uInt32'
p23533
aNtp23534
tp23535
tp23536
sS'DAQmxResetAIChanCalPolyReverseCoeff'
p23537
((lp23538
S'int32'
p23539
ag11
a((S'taskHandle'
p23540
(lp23541
S'TaskHandle'
p23542
aNtp23543
(S'channel'
p23544
(lp23545
S'char'
p23546
a(lp23547
I-1
aaNtp23548
tp23549
tp23550
sS'DAQmxGetExportedCtrOutEventOutputBehavior'
p23551
((lp23552
S'int32'
p23553
ag11
a((S'taskHandle'
p23554
(lp23555
S'TaskHandle'
p23556
aNtp23557
(S'data'
p23558
(lp23559
S'int32'
p23560
ag19
aNtp23561
tp23562
tp23563
sS'DAQmxWriteCtrFreqScalar'
p23564
((lp23565
S'int32'
p23566
ag11
a((S'taskHandle'
p23567
(lp23568
S'TaskHandle'
p23569
aNtp23570
(S'autoStart'
p23571
(lp23572
S'bool32'
p23573
aNtp23574
(S'timeout'
p23575
(lp23576
S'float64'
p23577
aNtp23578
(S'frequency'
p23579
(lp23580
S'float64'
p23581
aNtp23582
(S'dutyCycle'
p23583
(lp23584
S'float64'
p23585
aNtp23586
(S'reserved'
p23587
(lp23588
S'bool32'
p23589
ag19
aNtp23590
tp23591
tp23592
sS'DAQmxWriteToTEDSFromArray'
p23593
((lp23594
S'int32'
p23595
ag11
a((S'physicalChannel'
p23596
(lp23597
S'char'
p23598
a(lp23599
I-1
aaNtp23600
(S'bitStream'
p23601
(lp23602
S'uInt8'
p23603
a(lp23604
I-1
aaNtp23605
(S'arraySize'
p23606
(lp23607
S'uInt32'
p23608
aNtp23609
(S'basicTEDSOptions'
p23610
(lp23611
S'int32'
p23612
aNtp23613
tp23614
tp23615
sS'DAQmxSetAOGain'
p23616
((lp23617
S'int32'
p23618
ag11
a((S'taskHandle'
p23619
(lp23620
S'TaskHandle'
p23621
aNtp23622
(S'channel'
p23623
(lp23624
S'char'
p23625
a(lp23626
I-1
aaNtp23627
(S'data'
p23628
(lp23629
S'float64'
p23630
aNtp23631
tp23632
tp23633
sS'DAQmxSetAIRVDTUnits'
p23634
((lp23635
S'int32'
p23636
ag11
a((S'taskHandle'
p23637
(lp23638
S'TaskHandle'
p23639
aNtp23640
(S'channel'
p23641
(lp23642
S'char'
p23643
a(lp23644
I-1
aaNtp23645
(S'data'
p23646
(lp23647
S'int32'
p23648
aNtp23649
tp23650
tp23651
sS'DAQmxResetAODACOffsetExtSrc'
p23652
((lp23653
S'int32'
p23654
ag11
a((S'taskHandle'
p23655
(lp23656
S'TaskHandle'
p23657
aNtp23658
(S'channel'
p23659
(lp23660
S'char'
p23661
a(lp23662
I-1
aaNtp23663
tp23664
tp23665
sS'DAQmxSetAOIdleOutputBehavior'
p23666
((lp23667
S'int32'
p23668
ag11
a((S'taskHandle'
p23669
(lp23670
S'TaskHandle'
p23671
aNtp23672
(S'channel'
p23673
(lp23674
S'char'
p23675
a(lp23676
I-1
aaNtp23677
(S'data'
p23678
(lp23679
S'int32'
p23680
aNtp23681
tp23682
tp23683
sS'DAQmxSetAIAccelSensitivity'
p23684
((lp23685
S'int32'
p23686
ag11
a((S'taskHandle'
p23687
(lp23688
S'TaskHandle'
p23689
aNtp23690
(S'channel'
p23691
(lp23692
S'char'
p23693
a(lp23694
I-1
aaNtp23695
(S'data'
p23696
(lp23697
S'float64'
p23698
aNtp23699
tp23700
tp23701
sS'DAQmxSetCOPrescaler'
p23702
((lp23703
S'int32'
p23704
ag11
a((S'taskHandle'
p23705
(lp23706
S'TaskHandle'
p23707
aNtp23708
(S'channel'
p23709
(lp23710
S'char'
p23711
a(lp23712
I-1
aaNtp23713
(S'data'
p23714
(lp23715
S'uInt32'
p23716
aNtp23717
tp23718
tp23719
sS'DAQmxCreateAOVoltageChan'
p23720
((lp23721
S'int32'
p23722
ag11
a((S'taskHandle'
p23723
(lp23724
S'TaskHandle'
p23725
aNtp23726
(S'physicalChannel'
p23727
(lp23728
S'char'
p23729
a(lp23730
I-1
aaNtp23731
(S'nameToAssignToChannel'
p23732
(lp23733
S'char'
p23734
a(lp23735
I-1
aaNtp23736
(S'minVal'
p23737
(lp23738
S'float64'
p23739
aNtp23740
(S'maxVal'
p23741
(lp23742
S'float64'
p23743
aNtp23744
(S'units'
p23745
(lp23746
S'int32'
p23747
aNtp23748
(S'customScaleName'
p23749
(lp23750
S'char'
p23751
a(lp23752
I-1
aaNtp23753
tp23754
tp23755
sS'DAQmxSetDigEdgeStartTrigDigFltrEnable'
p23756
((lp23757
S'int32'
p23758
ag11
a((S'taskHandle'
p23759
(lp23760
S'TaskHandle'
p23761
aNtp23762
(S'data'
p23763
(lp23764
S'bool32'
p23765
aNtp23766
tp23767
tp23768
sS'DAQmxGetAIChanCalPolyReverseCoeff'
p23769
((lp23770
S'int32'
p23771
ag11
a((S'taskHandle'
p23772
(lp23773
S'TaskHandle'
p23774
aNtp23775
(S'channel'
p23776
(lp23777
S'char'
p23778
a(lp23779
I-1
aaNtp23780
(S'data'
p23781
(lp23782
S'float64'
p23783
ag19
aNtp23784
(S'arraySizeInSamples'
p23785
(lp23786
S'uInt32'
p23787
aNtp23788
tp23789
tp23790
sS'DAQmxGetExportedHshkEventInterlockedAssertedLvl'
p23791
((lp23792
S'int32'
p23793
ag11
a((S'taskHandle'
p23794
(lp23795
S'TaskHandle'
p23796
aNtp23797
(S'data'
p23798
(lp23799
S'int32'
p23800
ag19
aNtp23801
tp23802
tp23803
sS'DAQmxGetAIMicrophoneSensitivity'
p23804
((lp23805
S'int32'
p23806
ag11
a((S'taskHandle'
p23807
(lp23808
S'TaskHandle'
p23809
aNtp23810
(S'channel'
p23811
(lp23812
S'char'
p23813
a(lp23814
I-1
aaNtp23815
(S'data'
p23816
(lp23817
S'float64'
p23818
ag19
aNtp23819
tp23820
tp23821
sS'DAQmxSetExportedAdvCmpltEventOutputTerm'
p23822
((lp23823
S'int32'
p23824
ag11
a((S'taskHandle'
p23825
(lp23826
S'TaskHandle'
p23827
aNtp23828
(S'data'
p23829
(lp23830
S'char'
p23831
ag19
aNtp23832
tp23833
tp23834
sS'DAQmxGetSampClkRate'
p23835
((lp23836
S'int32'
p23837
ag11
a((S'taskHandle'
p23838
(lp23839
S'TaskHandle'
p23840
aNtp23841
(S'data'
p23842
(lp23843
S'float64'
p23844
ag19
aNtp23845
tp23846
tp23847
sS'DAQmxGetCalUserDefinedInfo'
p23848
((lp23849
S'int32'
p23850
ag11
a((S'deviceName'
p23851
(lp23852
S'char'
p23853
a(lp23854
I-1
aaNtp23855
(S'data'
p23856
(lp23857
S'char'
p23858
ag19
aNtp23859
(S'bufferSize'
p23860
(lp23861
S'uInt32'
p23862
aNtp23863
tp23864
tp23865
sS'DAQmxSetAIRTDA'
p23866
((lp23867
S'int32'
p23868
ag11
a((S'taskHandle'
p23869
(lp23870
S'TaskHandle'
p23871
aNtp23872
(S'channel'
p23873
(lp23874
S'char'
p23875
a(lp23876
I-1
aaNtp23877
(S'data'
p23878
(lp23879
S'float64'
p23880
aNtp23881
tp23882
tp23883
sS'DAQmxSetAIRTDC'
p23884
((lp23885
S'int32'
p23886
ag11
a((S'taskHandle'
p23887
(lp23888
S'TaskHandle'
p23889
aNtp23890
(S'channel'
p23891
(lp23892
S'char'
p23893
a(lp23894
I-1
aaNtp23895
(S'data'
p23896
(lp23897
S'float64'
p23898
aNtp23899
tp23900
tp23901
sS'DAQmxSetAIRTDB'
p23902
((lp23903
S'int32'
p23904
ag11
a((S'taskHandle'
p23905
(lp23906
S'TaskHandle'
p23907
aNtp23908
(S'channel'
p23909
(lp23910
S'char'
p23911
a(lp23912
I-1
aaNtp23913
(S'data'
p23914
(lp23915
S'float64'
p23916
aNtp23917
tp23918
tp23919
sS'DAQmxGetDevDOLines'
p23920
((lp23921
S'int32'
p23922
ag11
a((S'device'
p23923
(lp23924
S'char'
p23925
a(lp23926
I-1
aaNtp23927
(S'data'
p23928
(lp23929
S'char'
p23930
ag19
aNtp23931
(S'bufferSize'
p23932
(lp23933
S'uInt32'
p23934
aNtp23935
tp23936
tp23937
sS'DAQmxSetCIGPSSyncMethod'
p23938
((lp23939
S'int32'
p23940
ag11
a((S'taskHandle'
p23941
(lp23942
S'TaskHandle'
p23943
aNtp23944
(S'channel'
p23945
(lp23946
S'char'
p23947
a(lp23948
I-1
aaNtp23949
(S'data'
p23950
(lp23951
S'int32'
p23952
aNtp23953
tp23954
tp23955
sS'DAQmxSetRealTimeWriteRecoveryMode'
p23956
((lp23957
S'int32'
p23958
ag11
a((S'taskHandle'
p23959
(lp23960
S'TaskHandle'
p23961
aNtp23962
(S'data'
p23963
(lp23964
S'int32'
p23965
aNtp23966
tp23967
tp23968
sS'DAQmxSetCOCtrTimebaseRate'
p23969
((lp23970
S'int32'
p23971
ag11
a((S'taskHandle'
p23972
(lp23973
S'TaskHandle'
p23974
aNtp23975
(S'channel'
p23976
(lp23977
S'char'
p23978
a(lp23979
I-1
aaNtp23980
(S'data'
p23981
(lp23982
S'float64'
p23983
aNtp23984
tp23985
tp23986
sS'DAQmxGetAIRTDType'
p23987
((lp23988
S'int32'
p23989
ag11
a((S'taskHandle'
p23990
(lp23991
S'TaskHandle'
p23992
aNtp23993
(S'channel'
p23994
(lp23995
S'char'
p23996
a(lp23997
I-1
aaNtp23998
(S'data'
p23999
(lp24000
S'int32'
p24001
ag19
aNtp24002
tp24003
tp24004
sS'DAQmxSetDIInvertLines'
p24005
((lp24006
S'int32'
p24007
ag11
a((S'taskHandle'
p24008
(lp24009
S'TaskHandle'
p24010
aNtp24011
(S'channel'
p24012
(lp24013
S'char'
p24014
a(lp24015
I-1
aaNtp24016
(S'data'
p24017
(lp24018
S'bool32'
p24019
aNtp24020
tp24021
tp24022
sS'DAQmxResetSampClkSrc'
p24023
((lp24024
S'int32'
p24025
ag11
a((S'taskHandle'
p24026
(lp24027
S'TaskHandle'
p24028
aNtp24029
tp24030
tp24031
sS'DAQmxResetCITwoEdgeSepSecondEdge'
p24032
((lp24033
S'int32'
p24034
ag11
a((S'taskHandle'
p24035
(lp24036
S'TaskHandle'
p24037
aNtp24038
(S'channel'
p24039
(lp24040
S'char'
p24041
a(lp24042
I-1
aaNtp24043
tp24044
tp24045
sS'DAQmxResetDIInvertLines'
p24046
((lp24047
S'int32'
p24048
ag11
a((S'taskHandle'
p24049
(lp24050
S'TaskHandle'
p24051
aNtp24052
(S'channel'
p24053
(lp24054
S'char'
p24055
a(lp24056
I-1
aaNtp24057
tp24058
tp24059
sS'DAQmxSwitchGetMultiRelayCount'
p24060
((lp24061
S'int32'
p24062
ag11
a((S'relayList'
p24063
(lp24064
S'char'
p24065
a(lp24066
I-1
aaNtp24067
(S'count'
p24068
(lp24069
S'uInt32'
p24070
a(lp24071
I-1
aaNtp24072
(S'countArraySize'
p24073
(lp24074
S'uInt32'
p24075
aNtp24076
(S'numRelayCountsRead'
p24077
(lp24078
S'uInt32'
p24079
ag19
aNtp24080
tp24081
tp24082
sS'DAQmxSetCICountEdgesTerm'
p24083
((lp24084
S'int32'
p24085
ag11
a((S'taskHandle'
p24086
(lp24087
S'TaskHandle'
p24088
aNtp24089
(S'channel'
p24090
(lp24091
S'char'
p24092
a(lp24093
I-1
aaNtp24094
(S'data'
p24095
(lp24096
S'char'
p24097
ag19
aNtp24098
tp24099
tp24100
sS'DAQmxSetAnlgWinStartTrigWhen'
p24101
((lp24102
S'int32'
p24103
ag11
a((S'taskHandle'
p24104
(lp24105
S'TaskHandle'
p24106
aNtp24107
(S'data'
p24108
(lp24109
S'int32'
p24110
aNtp24111
tp24112
tp24113
sS'DAQmxResetSampClkActiveEdge'
p24114
((lp24115
S'int32'
p24116
ag11
a((S'taskHandle'
p24117
(lp24118
S'TaskHandle'
p24119
aNtp24120
tp24121
tp24122
sS'DAQmxSwitchDisconnect'
p24123
((lp24124
S'int32'
p24125
ag11
a((S'switchChannel1'
p24126
(lp24127
S'char'
p24128
a(lp24129
I-1
aaNtp24130
(S'switchChannel2'
p24131
(lp24132
S'char'
p24133
a(lp24134
I-1
aaNtp24135
(S'waitForSettling'
p24136
(lp24137
S'bool32'
p24138
aNtp24139
tp24140
tp24141
sS'DAQmxSetCIPeriodDigFltrTimebaseRate'
p24142
((lp24143
S'int32'
p24144
ag11
a((S'taskHandle'
p24145
(lp24146
S'TaskHandle'
p24147
aNtp24148
(S'channel'
p24149
(lp24150
S'char'
p24151
a(lp24152
I-1
aaNtp24153
(S'data'
p24154
(lp24155
S'float64'
p24156
aNtp24157
tp24158
tp24159
sS'DAQmxResetAnlgWinRefTrigBtm'
p24160
((lp24161
S'int32'
p24162
ag11
a((S'taskHandle'
p24163
(lp24164
S'TaskHandle'
p24165
aNtp24166
tp24167
tp24168
sS'DAQmxResetMasterTimebaseSrc'
p24169
((lp24170
S'int32'
p24171
ag11
a((S'taskHandle'
p24172
(lp24173
S'TaskHandle'
p24174
aNtp24175
tp24176
tp24177
sS'DAQmxSetDigEdgeRefTrigEdge'
p24178
((lp24179
S'int32'
p24180
ag11
a((S'taskHandle'
p24181
(lp24182
S'TaskHandle'
p24183
aNtp24184
(S'data'
p24185
(lp24186
S'int32'
p24187
aNtp24188
tp24189
tp24190
sS'DAQmxResetWriteAttribute'
p24191
((lp24192
S'int32'
p24193
ag11
a((S'taskHandle'
p24194
(lp24195
S'TaskHandle'
p24196
aNtp24197
(S'attribute'
p24198
(lp24199
S'int32'
p24200
aNtp24201
tp24202
tp24203
sS'DAQmxGetCIEncoderZIndexVal'
p24204
((lp24205
S'int32'
p24206
ag11
a((S'taskHandle'
p24207
(lp24208
S'TaskHandle'
p24209
aNtp24210
(S'channel'
p24211
(lp24212
S'char'
p24213
a(lp24214
I-1
aaNtp24215
(S'data'
p24216
(lp24217
S'float64'
p24218
ag19
aNtp24219
tp24220
tp24221
sS'DAQmxSetAIBridgeBalanceFinePot'
p24222
((lp24223
S'int32'
p24224
ag11
a((S'taskHandle'
p24225
(lp24226
S'TaskHandle'
p24227
aNtp24228
(S'channel'
p24229
(lp24230
S'char'
p24231
a(lp24232
I-1
aaNtp24233
(S'data'
p24234
(lp24235
S'int32'
p24236
aNtp24237
tp24238
tp24239
sS'DAQmxSetRefClkRate'
p24240
((lp24241
S'int32'
p24242
ag11
a((S'taskHandle'
p24243
(lp24244
S'TaskHandle'
p24245
aNtp24246
(S'data'
p24247
(lp24248
S'float64'
p24249
aNtp24250
tp24251
tp24252
sS'DAQmxSetAILVDTSensitivityUnits'
p24253
((lp24254
S'int32'
p24255
ag11
a((S'taskHandle'
p24256
(lp24257
S'TaskHandle'
p24258
aNtp24259
(S'channel'
p24260
(lp24261
S'char'
p24262
a(lp24263
I-1
aaNtp24264
(S'data'
p24265
(lp24266
S'int32'
p24267
aNtp24268
tp24269
tp24270
sS'DAQmxCreateAIThrmstrChanIex'
p24271
((lp24272
S'int32'
p24273
ag11
a((S'taskHandle'
p24274
(lp24275
S'TaskHandle'
p24276
aNtp24277
(S'physicalChannel'
p24278
(lp24279
S'char'
p24280
a(lp24281
I-1
aaNtp24282
(S'nameToAssignToChannel'
p24283
(lp24284
S'char'
p24285
a(lp24286
I-1
aaNtp24287
(S'minVal'
p24288
(lp24289
S'float64'
p24290
aNtp24291
(S'maxVal'
p24292
(lp24293
S'float64'
p24294
aNtp24295
(S'units'
p24296
(lp24297
S'int32'
p24298
aNtp24299
(S'resistanceConfig'
p24300
(lp24301
S'int32'
p24302
aNtp24303
(S'currentExcitSource'
p24304
(lp24305
S'int32'
p24306
aNtp24307
(S'currentExcitVal'
p24308
(lp24309
S'float64'
p24310
aNtp24311
(g18389
(lp24312
S'float64'
p24313
aNtp24314
(g18393
(lp24315
S'float64'
p24316
aNtp24317
(g18397
(lp24318
S'float64'
p24319
aNtp24320
tp24321
tp24322
sS'DAQmxSetCOPulseFreq'
p24323
((lp24324
S'int32'
p24325
ag11
a((S'taskHandle'
p24326
(lp24327
S'TaskHandle'
p24328
aNtp24329
(S'channel'
p24330
(lp24331
S'char'
p24332
a(lp24333
I-1
aaNtp24334
(S'data'
p24335
(lp24336
S'float64'
p24337
aNtp24338
tp24339
tp24340
sS'DAQmxSetCITwoEdgeSepFirstTerm'
p24341
((lp24342
S'int32'
p24343
ag11
a((S'taskHandle'
p24344
(lp24345
S'TaskHandle'
p24346
aNtp24347
(S'channel'
p24348
(lp24349
S'char'
p24350
a(lp24351
I-1
aaNtp24352
(S'data'
p24353
(lp24354
S'char'
p24355
ag19
aNtp24356
tp24357
tp24358
sS'DAQmxResetCICountEdgesTerm'
p24359
((lp24360
S'int32'
p24361
ag11
a((S'taskHandle'
p24362
(lp24363
S'TaskHandle'
p24364
aNtp24365
(S'channel'
p24366
(lp24367
S'char'
p24368
a(lp24369
I-1
aaNtp24370
tp24371
tp24372
sS'DAQmxSetCIPrescaler'
p24373
((lp24374
S'int32'
p24375
ag11
a((S'taskHandle'
p24376
(lp24377
S'TaskHandle'
p24378
aNtp24379
(S'channel'
p24380
(lp24381
S'char'
p24382
a(lp24383
I-1
aaNtp24384
(S'data'
p24385
(lp24386
S'uInt32'
p24387
aNtp24388
tp24389
tp24390
sS'DAQmxGetCICtrTimebaseRate'
p24391
((lp24392
S'int32'
p24393
ag11
a((S'taskHandle'
p24394
(lp24395
S'TaskHandle'
p24396
aNtp24397
(S'channel'
p24398
(lp24399
S'char'
p24400
a(lp24401
I-1
aaNtp24402
(S'data'
p24403
(lp24404
S'float64'
p24405
ag19
aNtp24406
tp24407
tp24408
sS'DAQmxResetAIFreqThreshVoltage'
p24409
((lp24410
S'int32'
p24411
ag11
a((S'taskHandle'
p24412
(lp24413
S'TaskHandle'
p24414
aNtp24415
(S'channel'
p24416
(lp24417
S'char'
p24418
a(lp24419
I-1
aaNtp24420
tp24421
tp24422
sS'DAQmxSetCOCtrTimebaseDigSyncEnable'
p24423
((lp24424
S'int32'
p24425
ag11
a((S'taskHandle'
p24426
(lp24427
S'TaskHandle'
p24428
aNtp24429
(S'channel'
p24430
(lp24431
S'char'
p24432
a(lp24433
I-1
aaNtp24434
(S'data'
p24435
(lp24436
S'bool32'
p24437
aNtp24438
tp24439
tp24440
sS'DAQmxResetAOCustomScaleName'
p24441
((lp24442
S'int32'
p24443
ag11
a((S'taskHandle'
p24444
(lp24445
S'TaskHandle'
p24446
aNtp24447
(S'channel'
p24448
(lp24449
S'char'
p24450
a(lp24451
I-1
aaNtp24452
tp24453
tp24454
sS'DAQmxCalculateReversePolyCoeff'
p24455
((lp24456
S'int32'
p24457
ag11
a((S'forwardCoeffs'
p24458
(lp24459
S'float64'
p24460
a(lp24461
I-1
aaNtp24462
(S'numForwardCoeffsIn'
p24463
(lp24464
S'uInt32'
p24465
aNtp24466
(S'minValX'
p24467
(lp24468
S'float64'
p24469
aNtp24470
(S'maxValX'
p24471
(lp24472
S'float64'
p24473
aNtp24474
(S'numPointsToCompute'
p24475
(lp24476
S'int32'
p24477
aNtp24478
(S'reversePolyOrder'
p24479
(lp24480
S'int32'
p24481
aNtp24482
(S'reverseCoeffs'
p24483
(lp24484
S'float64'
p24485
a(lp24486
I-1
aaNtp24487
tp24488
tp24489
sS'DAQmxResetCISemiPeriodDigFltrTimebaseSrc'
p24490
((lp24491
S'int32'
p24492
ag11
a((S'taskHandle'
p24493
(lp24494
S'TaskHandle'
p24495
aNtp24496
(S'channel'
p24497
(lp24498
S'char'
p24499
a(lp24500
I-1
aaNtp24501
tp24502
tp24503
sS'DAQmxGetAIRTDA'
p24504
((lp24505
S'int32'
p24506
ag11
a((S'taskHandle'
p24507
(lp24508
S'TaskHandle'
p24509
aNtp24510
(S'channel'
p24511
(lp24512
S'char'
p24513
a(lp24514
I-1
aaNtp24515
(S'data'
p24516
(lp24517
S'float64'
p24518
ag19
aNtp24519
tp24520
tp24521
sS'DAQmxGetAIRTDC'
p24522
((lp24523
S'int32'
p24524
ag11
a((S'taskHandle'
p24525
(lp24526
S'TaskHandle'
p24527
aNtp24528
(S'channel'
p24529
(lp24530
S'char'
p24531
a(lp24532
I-1
aaNtp24533
(S'data'
p24534
(lp24535
S'float64'
p24536
ag19
aNtp24537
tp24538
tp24539
sS'DAQmxGetAIRTDB'
p24540
((lp24541
S'int32'
p24542
ag11
a((S'taskHandle'
p24543
(lp24544
S'TaskHandle'
p24545
aNtp24546
(S'channel'
p24547
(lp24548
S'char'
p24549
a(lp24550
I-1
aaNtp24551
(S'data'
p24552
(lp24553
S'float64'
p24554
ag19
aNtp24555
tp24556
tp24557
sS'DAQmxGetAOMin'
p24558
((lp24559
S'int32'
p24560
ag11
a((S'taskHandle'
p24561
(lp24562
S'TaskHandle'
p24563
aNtp24564
(S'channel'
p24565
(lp24566
S'char'
p24567
a(lp24568
I-1
aaNtp24569
(S'data'
p24570
(lp24571
S'float64'
p24572
ag19
aNtp24573
tp24574
tp24575
sS'DAQmxGetCOPulseDutyCyc'
p24576
((lp24577
S'int32'
p24578
ag11
a((S'taskHandle'
p24579
(lp24580
S'TaskHandle'
p24581
aNtp24582
(S'channel'
p24583
(lp24584
S'char'
p24585
a(lp24586
I-1
aaNtp24587
(S'data'
p24588
(lp24589
S'float64'
p24590
ag19
aNtp24591
tp24592
tp24593
sS'DAQmxGetAICurrentUnits'
p24594
((lp24595
S'int32'
p24596
ag11
a((S'taskHandle'
p24597
(lp24598
S'TaskHandle'
p24599
aNtp24600
(S'channel'
p24601
(lp24602
S'char'
p24603
a(lp24604
I-1
aaNtp24605
(S'data'
p24606
(lp24607
S'int32'
p24608
ag19
aNtp24609
tp24610
tp24611
sS'DAQmxGetAIChanCalTableScaledVals'
p24612
((lp24613
S'int32'
p24614
ag11
a((S'taskHandle'
p24615
(lp24616
S'TaskHandle'
p24617
aNtp24618
(S'channel'
p24619
(lp24620
S'char'
p24621
a(lp24622
I-1
aaNtp24623
(S'data'
p24624
(lp24625
S'float64'
p24626
ag19
aNtp24627
(S'arraySizeInSamples'
p24628
(lp24629
S'uInt32'
p24630
aNtp24631
tp24632
tp24633
sS'DAQmxGetAIImpedance'
p24634
((lp24635
S'int32'
p24636
ag11
a((S'taskHandle'
p24637
(lp24638
S'TaskHandle'
p24639
aNtp24640
(S'channel'
p24641
(lp24642
S'char'
p24643
a(lp24644
I-1
aaNtp24645
(S'data'
p24646
(lp24647
S'float64'
p24648
ag19
aNtp24649
tp24650
tp24651
sS'DAQmxResetCIGPSSyncMethod'
p24652
((lp24653
S'int32'
p24654
ag11
a((S'taskHandle'
p24655
(lp24656
S'TaskHandle'
p24657
aNtp24658
(S'channel'
p24659
(lp24660
S'char'
p24661
a(lp24662
I-1
aaNtp24663
tp24664
tp24665
sS'DAQmxResetAIStrainUnits'
p24666
((lp24667
S'int32'
p24668
ag11
a((S'taskHandle'
p24669
(lp24670
S'TaskHandle'
p24671
aNtp24672
(S'channel'
p24673
(lp24674
S'char'
p24675
a(lp24676
I-1
aaNtp24677
tp24678
tp24679
sS'DAQmxSetDigEdgeStartTrigDigFltrTimebaseRate'
p24680
((lp24681
S'int32'
p24682
ag11
a((S'taskHandle'
p24683
(lp24684
S'TaskHandle'
p24685
aNtp24686
(S'data'
p24687
(lp24688
S'float64'
p24689
aNtp24690
tp24691
tp24692
sS'DAQmxResetDOUseOnlyOnBrdMem'
p24693
((lp24694
S'int32'
p24695
ag11
a((S'taskHandle'
p24696
(lp24697
S'TaskHandle'
p24698
aNtp24699
(S'channel'
p24700
(lp24701
S'char'
p24702
a(lp24703
I-1
aaNtp24704
tp24705
tp24706
sS'DAQmxGetCOPulseFreqInitialDelay'
p24707
((lp24708
S'int32'
p24709
ag11
a((S'taskHandle'
p24710
(lp24711
S'TaskHandle'
p24712
aNtp24713
(S'channel'
p24714
(lp24715
S'char'
p24716
a(lp24717
I-1
aaNtp24718
(S'data'
p24719
(lp24720
S'float64'
p24721
ag19
aNtp24722
tp24723
tp24724
sS'DAQmxResetDigEdgeArmStartTrigDigFltrMinPulseWidth'
p24725
((lp24726
S'int32'
p24727
ag11
a((S'taskHandle'
p24728
(lp24729
S'TaskHandle'
p24730
aNtp24731
tp24732
tp24733
sS'DAQmxSetExportedRdyForXferEventLvlActiveLvl'
p24734
((lp24735
S'int32'
p24736
ag11
a((S'taskHandle'
p24737
(lp24738
S'TaskHandle'
p24739
aNtp24740
(S'data'
p24741
(lp24742
S'int32'
p24743
aNtp24744
tp24745
tp24746
sS'DAQmxSetCIFreqMeasTime'
p24747
((lp24748
S'int32'
p24749
ag11
a((S'taskHandle'
p24750
(lp24751
S'TaskHandle'
p24752
aNtp24753
(S'channel'
p24754
(lp24755
S'char'
p24756
a(lp24757
I-1
aaNtp24758
(S'data'
p24759
(lp24760
S'float64'
p24761
aNtp24762
tp24763
tp24764
sS'DAQmxResetDigPatternStartTrigWhen'
p24765
((lp24766
S'int32'
p24767
ag11
a((S'taskHandle'
p24768
(lp24769
S'TaskHandle'
p24770
aNtp24771
tp24772
tp24773
sS'DAQmxSetCICountEdgesDirTerm'
p24774
((lp24775
S'int32'
p24776
ag11
a((S'taskHandle'
p24777
(lp24778
S'TaskHandle'
p24779
aNtp24780
(S'channel'
p24781
(lp24782
S'char'
p24783
a(lp24784
I-1
aaNtp24785
(S'data'
p24786
(lp24787
S'char'
p24788
ag19
aNtp24789
tp24790
tp24791
sS'DAQmxSetExportedSampClkOutputTerm'
p24792
((lp24793
S'int32'
p24794
ag11
a((S'taskHandle'
p24795
(lp24796
S'TaskHandle'
p24797
aNtp24798
(S'data'
p24799
(lp24800
S'char'
p24801
ag19
aNtp24802
tp24803
tp24804
sS'DAQmxSetStartTrigRetriggerable'
p24805
((lp24806
S'int32'
p24807
ag11
a((S'taskHandle'
p24808
(lp24809
S'TaskHandle'
p24810
aNtp24811
(S'data'
p24812
(lp24813
S'bool32'
p24814
aNtp24815
tp24816
tp24817
sS'DAQmxGetExportedRdyForXferEventLvlActiveLvl'
p24818
((lp24819
S'int32'
p24820
ag11
a((S'taskHandle'
p24821
(lp24822
S'TaskHandle'
p24823
aNtp24824
(S'data'
p24825
(lp24826
S'int32'
p24827
ag19
aNtp24828
tp24829
tp24830
sS'DAQmxResetAIRVDTSensitivity'
p24831
((lp24832
S'int32'
p24833
ag11
a((S'taskHandle'
p24834
(lp24835
S'TaskHandle'
p24836
aNtp24837
(S'channel'
p24838
(lp24839
S'char'
p24840
a(lp24841
I-1
aaNtp24842
tp24843
tp24844
sS'DAQmxSetAODACRngHigh'
p24845
((lp24846
S'int32'
p24847
ag11
a((S'taskHandle'
p24848
(lp24849
S'TaskHandle'
p24850
aNtp24851
(S'channel'
p24852
(lp24853
S'char'
p24854
a(lp24855
I-1
aaNtp24856
(S'data'
p24857
(lp24858
S'float64'
p24859
aNtp24860
tp24861
tp24862
sS'DAQmxSetCICtrTimebaseMasterTimebaseDiv'
p24863
((lp24864
S'int32'
p24865
ag11
a((S'taskHandle'
p24866
(lp24867
S'TaskHandle'
p24868
aNtp24869
(S'channel'
p24870
(lp24871
S'char'
p24872
a(lp24873
I-1
aaNtp24874
(S'data'
p24875
(lp24876
S'uInt32'
p24877
aNtp24878
tp24879
tp24880
sS'DAQmxResetCIFreqMeasTime'
p24881
((lp24882
S'int32'
p24883
ag11
a((S'taskHandle'
p24884
(lp24885
S'TaskHandle'
p24886
aNtp24887
(S'channel'
p24888
(lp24889
S'char'
p24890
a(lp24891
I-1
aaNtp24892
tp24893
tp24894
sS'DAQmxSetSwitchScanRepeatMode'
p24895
((lp24896
S'int32'
p24897
ag11
a((S'taskHandle'
p24898
(lp24899
S'TaskHandle'
p24900
aNtp24901
(S'data'
p24902
(lp24903
S'int32'
p24904
aNtp24905
tp24906
tp24907
sS'DAQmxGetReadReadAllAvailSamp'
p24908
((lp24909
S'int32'
p24910
ag11
a((S'taskHandle'
p24911
(lp24912
S'TaskHandle'
p24913
aNtp24914
(S'data'
p24915
(lp24916
S'bool32'
p24917
ag19
aNtp24918
tp24919
tp24920
sS'DAQmxGetDigEdgeStartTrigDigSyncEnable'
p24921
((lp24922
S'int32'
p24923
ag11
a((S'taskHandle'
p24924
(lp24925
S'TaskHandle'
p24926
aNtp24927
(S'data'
p24928
(lp24929
S'bool32'
p24930
ag19
aNtp24931
tp24932
tp24933
sS'DAQmxSetAIDataXferReqCond'
p24934
((lp24935
S'int32'
p24936
ag11
a((S'taskHandle'
p24937
(lp24938
S'TaskHandle'
p24939
aNtp24940
(S'channel'
p24941
(lp24942
S'char'
p24943
a(lp24944
I-1
aaNtp24945
(S'data'
p24946
(lp24947
S'int32'
p24948
aNtp24949
tp24950
tp24951
sS'DAQmxResetCIDataXferMech'
p24952
((lp24953
S'int32'
p24954
ag11
a((S'taskHandle'
p24955
(lp24956
S'TaskHandle'
p24957
aNtp24958
(S'channel'
p24959
(lp24960
S'char'
p24961
a(lp24962
I-1
aaNtp24963
tp24964
tp24965
sS'DAQmxResetDigEdgeStartTrigDigFltrEnable'
p24966
((lp24967
S'int32'
p24968
ag11
a((S'taskHandle'
p24969
(lp24970
S'TaskHandle'
p24971
aNtp24972
tp24973
tp24974
sS'DAQmxWriteCtrTicks'
p24975
((lp24976
S'int32'
p24977
ag11
a((S'taskHandle'
p24978
(lp24979
S'TaskHandle'
p24980
aNtp24981
(S'numSampsPerChan'
p24982
(lp24983
S'int32'
p24984
aNtp24985
(S'autoStart'
p24986
(lp24987
S'bool32'
p24988
aNtp24989
(S'timeout'
p24990
(lp24991
S'float64'
p24992
aNtp24993
(S'dataLayout'
p24994
(lp24995
S'bool32'
p24996
aNtp24997
(S'highTicks'
p24998
(lp24999
S'uInt32'
p25000
a(lp25001
I-1
aaNtp25002
(S'lowTicks'
p25003
(lp25004
S'uInt32'
p25005
a(lp25006
I-1
aaNtp25007
(S'numSampsPerChanWritten'
p25008
(lp25009
S'int32'
p25010
ag19
aNtp25011
(S'reserved'
p25012
(lp25013
S'bool32'
p25014
ag19
aNtp25015
tp25016
tp25017
sS'DAQmxGetDigEdgeStartTrigDigFltrEnable'
p25018
((lp25019
S'int32'
p25020
ag11
a((S'taskHandle'
p25021
(lp25022
S'TaskHandle'
p25023
aNtp25024
(S'data'
p25025
(lp25026
S'bool32'
p25027
ag19
aNtp25028
tp25029
tp25030
sS'DAQmxResetAnlgEdgeStartTrigLvl'
p25031
((lp25032
S'int32'
p25033
ag11
a((S'taskHandle'
p25034
(lp25035
S'TaskHandle'
p25036
aNtp25037
tp25038
tp25039
sS'DAQmxGetCIDupCountPrevent'
p25040
((lp25041
S'int32'
p25042
ag11
a((S'taskHandle'
p25043
(lp25044
S'TaskHandle'
p25045
aNtp25046
(S'channel'
p25047
(lp25048
S'char'
p25049
a(lp25050
I-1
aaNtp25051
(S'data'
p25052
(lp25053
S'bool32'
p25054
ag19
aNtp25055
tp25056
tp25057
sS'DAQmxResetCIPeriodDigFltrMinPulseWidth'
p25058
((lp25059
S'int32'
p25060
ag11
a((S'taskHandle'
p25061
(lp25062
S'TaskHandle'
p25063
aNtp25064
(S'channel'
p25065
(lp25066
S'char'
p25067
a(lp25068
I-1
aaNtp25069
tp25070
tp25071
sS'DAQmxGetScaleTablePreScaledVals'
p25072
((lp25073
S'int32'
p25074
ag11
a((S'scaleName'
p25075
(lp25076
S'char'
p25077
a(lp25078
I-1
aaNtp25079
(S'data'
p25080
(lp25081
S'float64'
p25082
ag19
aNtp25083
(S'arraySizeInSamples'
p25084
(lp25085
S'uInt32'
p25086
aNtp25087
tp25088
tp25089
sS'DAQmxGetCOPulseHighTicks'
p25090
((lp25091
S'int32'
p25092
ag11
a((S'taskHandle'
p25093
(lp25094
S'TaskHandle'
p25095
aNtp25096
(S'channel'
p25097
(lp25098
S'char'
p25099
a(lp25100
I-1
aaNtp25101
(S'data'
p25102
(lp25103
S'uInt32'
p25104
ag19
aNtp25105
tp25106
tp25107
sS'DAQmxGetWriteRelativeTo'
p25108
((lp25109
S'int32'
p25110
ag11
a((S'taskHandle'
p25111
(lp25112
S'TaskHandle'
p25113
aNtp25114
(S'data'
p25115
(lp25116
S'int32'
p25117
ag19
aNtp25118
tp25119
tp25120
sS'DAQmxSetAIExcitVoltageOrCurrent'
p25121
((lp25122
S'int32'
p25123
ag11
a((S'taskHandle'
p25124
(lp25125
S'TaskHandle'
p25126
aNtp25127
(S'channel'
p25128
(lp25129
S'char'
p25130
a(lp25131
I-1
aaNtp25132
(S'data'
p25133
(lp25134
S'int32'
p25135
aNtp25136
tp25137
tp25138
sS'DAQmxGetSampQuantSampPerChan'
p25139
((lp25140
S'int32'
p25141
ag11
a((S'taskHandle'
p25142
(lp25143
S'TaskHandle'
p25144
aNtp25145
(S'data'
p25146
(lp25147
S'uInt64'
p25148
ag19
aNtp25149
tp25150
tp25151
sS'DAQmxGetScaleMapScaledMax'
p25152
((lp25153
S'int32'
p25154
ag11
a((S'scaleName'
p25155
(lp25156
S'char'
p25157
a(lp25158
I-1
aaNtp25159
(S'data'
p25160
(lp25161
S'float64'
p25162
ag19
aNtp25163
tp25164
tp25165
sS'DAQmxGetSampClkDigFltrMinPulseWidth'
p25166
((lp25167
S'int32'
p25168
ag11
a((S'taskHandle'
p25169
(lp25170
S'TaskHandle'
p25171
aNtp25172
(S'data'
p25173
(lp25174
S'float64'
p25175
ag19
aNtp25176
tp25177
tp25178
sS'DAQmxSetAIDataXferCustomThreshold'
p25179
((lp25180
S'int32'
p25181
ag11
a((S'taskHandle'
p25182
(lp25183
S'TaskHandle'
p25184
aNtp25185
(S'channel'
p25186
(lp25187
S'char'
p25188
a(lp25189
I-1
aaNtp25190
(S'data'
p25191
(lp25192
S'uInt32'
p25193
aNtp25194
tp25195
tp25196
sS'DAQmxSetAICurrentUnits'
p25197
((lp25198
S'int32'
p25199
ag11
a((S'taskHandle'
p25200
(lp25201
S'TaskHandle'
p25202
aNtp25203
(S'channel'
p25204
(lp25205
S'char'
p25206
a(lp25207
I-1
aaNtp25208
(S'data'
p25209
(lp25210
S'int32'
p25211
aNtp25212
tp25213
tp25214
sS'DAQmxGetAOGain'
p25215
((lp25216
S'int32'
p25217
ag11
a((S'taskHandle'
p25218
(lp25219
S'TaskHandle'
p25220
aNtp25221
(S'channel'
p25222
(lp25223
S'char'
p25224
a(lp25225
I-1
aaNtp25226
(S'data'
p25227
(lp25228
S'float64'
p25229
ag19
aNtp25230
tp25231
tp25232
sS'DAQmxResetExportedHshkEventInterlockedAssertedLvl'
p25233
((lp25234
S'int32'
p25235
ag11
a((S'taskHandle'
p25236
(lp25237
S'TaskHandle'
p25238
aNtp25239
tp25240
tp25241
sS'DAQmxGetExportedStartTrigOutputTerm'
p25242
((lp25243
S'int32'
p25244
ag11
a((S'taskHandle'
p25245
(lp25246
S'TaskHandle'
p25247
aNtp25248
(S'data'
p25249
(lp25250
S'char'
p25251
ag19
aNtp25252
(S'bufferSize'
p25253
(lp25254
S'uInt32'
p25255
aNtp25256
tp25257
tp25258
sS'DAQmxGetCIAngEncoderInitialAngle'
p25259
((lp25260
S'int32'
p25261
ag11
a((S'taskHandle'
p25262
(lp25263
S'TaskHandle'
p25264
aNtp25265
(S'channel'
p25266
(lp25267
S'char'
p25268
a(lp25269
I-1
aaNtp25270
(S'data'
p25271
(lp25272
S'float64'
p25273
ag19
aNtp25274
tp25275
tp25276
sS'DAQmxClearTEDS'
p25277
((lp25278
S'int32'
p25279
ag11
a((S'physicalChannel'
p25280
(lp25281
S'char'
p25282
a(lp25283
I-1
aaNtp25284
tp25285
tp25286
sS'DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth'
p25287
((lp25288
S'int32'
p25289
ag11
a((S'taskHandle'
p25290
(lp25291
S'TaskHandle'
p25292
aNtp25293
(S'channel'
p25294
(lp25295
S'char'
p25296
a(lp25297
I-1
aaNtp25298
tp25299
tp25300
sS'DAQmxGetExportedAdvTrigPulseWidth'
p25301
((lp25302
S'int32'
p25303
ag11
a((S'taskHandle'
p25304
(lp25305
S'TaskHandle'
p25306
aNtp25307
(S'data'
p25308
(lp25309
S'float64'
p25310
ag19
aNtp25311
tp25312
tp25313
sS'DAQmxCfgAnlgWindowStartTrig'
p25314
((lp25315
S'int32'
p25316
ag11
a((S'taskHandle'
p25317
(lp25318
S'TaskHandle'
p25319
aNtp25320
(S'triggerSource'
p25321
(lp25322
S'char'
p25323
a(lp25324
I-1
aaNtp25325
(S'triggerWhen'
p25326
(lp25327
S'int32'
p25328
aNtp25329
(S'windowTop'
p25330
(lp25331
S'float64'
p25332
aNtp25333
(S'windowBottom'
p25334
(lp25335
S'float64'
p25336
aNtp25337
tp25338
tp25339
sS'DAQmxGetCOPulseLowTime'
p25340
((lp25341
S'int32'
p25342
ag11
a((S'taskHandle'
p25343
(lp25344
S'TaskHandle'
p25345
aNtp25346
(S'channel'
p25347
(lp25348
S'char'
p25349
a(lp25350
I-1
aaNtp25351
(S'data'
p25352
(lp25353
S'float64'
p25354
ag19
aNtp25355
tp25356
tp25357
sS'DAQmxSetAILVDTUnits'
p25358
((lp25359
S'int32'
p25360
ag11
a((S'taskHandle'
p25361
(lp25362
S'TaskHandle'
p25363
aNtp25364
(S'channel'
p25365
(lp25366
S'char'
p25367
a(lp25368
I-1
aaNtp25369
(S'data'
p25370
(lp25371
S'int32'
p25372
aNtp25373
tp25374
tp25375
sS'DAQmxSetExportedChangeDetectEventOutputTerm'
p25376
((lp25377
S'int32'
p25378
ag11
a((S'taskHandle'
p25379
(lp25380
S'TaskHandle'
p25381
aNtp25382
(S'data'
p25383
(lp25384
S'char'
p25385
ag19
aNtp25386
tp25387
tp25388
sS'DAQmxCfgDigPatternStartTrig'
p25389
((lp25390
S'int32'
p25391
ag11
a((S'taskHandle'
p25392
(lp25393
S'TaskHandle'
p25394
aNtp25395
(S'triggerSource'
p25396
(lp25397
S'char'
p25398
a(lp25399
I-1
aaNtp25400
(S'triggerPattern'
p25401
(lp25402
S'char'
p25403
a(lp25404
I-1
aaNtp25405
(S'triggerWhen'
p25406
(lp25407
S'int32'
p25408
aNtp25409
tp25410
tp25411
sS'DAQmxSetCIEncoderAInputDigFltrTimebaseSrc'
p25412
((lp25413
S'int32'
p25414
ag11
a((S'taskHandle'
p25415
(lp25416
S'TaskHandle'
p25417
aNtp25418
(S'channel'
p25419
(lp25420
S'char'
p25421
a(lp25422
I-1
aaNtp25423
(S'data'
p25424
(lp25425
S'char'
p25426
ag19
aNtp25427
tp25428
tp25429
sS'DAQmxAdjust4224Cal'
p25430
((lp25431
S'int32'
p25432
ag11
a((S'calHandle'
p25433
(lp25434
S'uInt32'
p25435
aNtp25436
(S'channelNames'
p25437
(lp25438
S'char'
p25439
a(lp25440
I-1
aaNtp25441
(S'gain'
p25442
(lp25443
S'float64'
p25444
aNtp25445
(S'inputVal'
p25446
(lp25447
S'float64'
p25448
aNtp25449
tp25450
tp25451
sS'DAQmxDisconnectTerms'
p25452
((lp25453
S'int32'
p25454
ag11
a((S'sourceTerminal'
p25455
(lp25456
S'char'
p25457
a(lp25458
I-1
aaNtp25459
(S'destinationTerminal'
p25460
(lp25461
S'char'
p25462
a(lp25463
I-1
aaNtp25464
tp25465
tp25466
sS'DAQmxResetExportedHshkEventPulsePolarity'
p25467
((lp25468
S'int32'
p25469
ag11
a((S'taskHandle'
p25470
(lp25471
S'TaskHandle'
p25472
aNtp25473
tp25474
tp25475
sS'DAQmxResetAIFreqHyst'
p25476
((lp25477
S'int32'
p25478
ag11
a((S'taskHandle'
p25479
(lp25480
S'TaskHandle'
p25481
aNtp25482
(S'channel'
p25483
(lp25484
S'char'
p25485
a(lp25486
I-1
aaNtp25487
tp25488
tp25489
sS'DAQmxGetWatchdogHasExpired'
p25490
((lp25491
S'int32'
p25492
ag11
a((S'taskHandle'
p25493
(lp25494
S'TaskHandle'
p25495
aNtp25496
(S'data'
p25497
(lp25498
S'bool32'
p25499
ag19
aNtp25500
tp25501
tp25502
sS'DAQmxResetAILowpassEnable'
p25503
((lp25504
S'int32'
p25505
ag11
a((S'taskHandle'
p25506
(lp25507
S'TaskHandle'
p25508
aNtp25509
(S'channel'
p25510
(lp25511
S'char'
p25512
a(lp25513
I-1
aaNtp25514
tp25515
tp25516
sS'DAQmxGetDITristate'
p25517
((lp25518
S'int32'
p25519
ag11
a((S'taskHandle'
p25520
(lp25521
S'TaskHandle'
p25522
aNtp25523
(S'channel'
p25524
(lp25525
S'char'
p25526
a(lp25527
I-1
aaNtp25528
(S'data'
p25529
(lp25530
S'bool32'
p25531
ag19
aNtp25532
tp25533
tp25534
sS'DAQmxGetCISemiPeriodTerm'
p25535
((lp25536
S'int32'
p25537
ag11
a((S'taskHandle'
p25538
(lp25539
S'TaskHandle'
p25540
aNtp25541
(S'channel'
p25542
(lp25543
S'char'
p25544
a(lp25545
I-1
aaNtp25546
(S'data'
p25547
(lp25548
S'char'
p25549
ag19
aNtp25550
(S'bufferSize'
p25551
(lp25552
S'uInt32'
p25553
aNtp25554
tp25555
tp25556
sS'DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth'
p25557
((lp25558
S'int32'
p25559
ag11
a((S'taskHandle'
p25560
(lp25561
S'TaskHandle'
p25562
aNtp25563
(S'channel'
p25564
(lp25565
S'char'
p25566
a(lp25567
I-1
aaNtp25568
(S'data'
p25569
(lp25570
S'float64'
p25571
ag19
aNtp25572
tp25573
tp25574
sS'DAQmxSetScalePolyForwardCoeff'
p25575
((lp25576
S'int32'
p25577
ag11
a((S'scaleName'
p25578
(lp25579
S'char'
p25580
a(lp25581
I-1
aaNtp25582
(S'data'
p25583
(lp25584
S'float64'
p25585
ag19
aNtp25586
(S'arraySizeInSamples'
p25587
(lp25588
S'uInt32'
p25589
aNtp25590
tp25591
tp25592
sS'DAQmxGetAILVDTUnits'
p25593
((lp25594
S'int32'
p25595
ag11
a((S'taskHandle'
p25596
(lp25597
S'TaskHandle'
p25598
aNtp25599
(S'channel'
p25600
(lp25601
S'char'
p25602
a(lp25603
I-1
aaNtp25604
(S'data'
p25605
(lp25606
S'int32'
p25607
ag19
aNtp25608
tp25609
tp25610
sS'DAQmxSetDigPatternStartTrigSrc'
p25611
((lp25612
S'int32'
p25613
ag11
a((S'taskHandle'
p25614
(lp25615
S'TaskHandle'
p25616
aNtp25617
(S'data'
p25618
(lp25619
S'char'
p25620
ag19
aNtp25621
tp25622
tp25623
sS'DAQmxSetAIResistanceCfg'
p25624
((lp25625
S'int32'
p25626
ag11
a((S'taskHandle'
p25627
(lp25628
S'TaskHandle'
p25629
aNtp25630
(S'channel'
p25631
(lp25632
S'char'
p25633
a(lp25634
I-1
aaNtp25635
(S'data'
p25636
(lp25637
S'int32'
p25638
aNtp25639
tp25640
tp25641
sS'DAQmxSetup1125Cal'
p25642
((lp25643
S'int32'
p25644
ag11
a((S'calHandle'
p25645
(lp25646
S'uInt32'
p25647
aNtp25648
(S'channelNames'
p25649
(lp25650
S'char'
p25651
a(lp25652
I-1
aaNtp25653
(S'gain'
p25654
(lp25655
S'float64'
p25656
aNtp25657
tp25658
tp25659
sS'DAQmxSetCOAutoIncrCnt'
p25660
((lp25661
S'int32'
p25662
ag11
a((S'taskHandle'
p25663
(lp25664
S'TaskHandle'
p25665
aNtp25666
(S'channel'
p25667
(lp25668
S'char'
p25669
a(lp25670
I-1
aaNtp25671
(S'data'
p25672
(lp25673
S'uInt32'
p25674
aNtp25675
tp25676
tp25677
sS'DAQmxResetDigPatternRefTrigPattern'
p25678
((lp25679
S'int32'
p25680
ag11
a((S'taskHandle'
p25681
(lp25682
S'TaskHandle'
p25683
aNtp25684
tp25685
tp25686
sS'DAQmxSwitchFindPath'
p25687
((lp25688
S'int32'
p25689
ag11
a((S'switchChannel1'
p25690
(lp25691
S'char'
p25692
a(lp25693
I-1
aaNtp25694
(S'switchChannel2'
p25695
(lp25696
S'char'
p25697
a(lp25698
I-1
aaNtp25699
(S'path'
p25700
(lp25701
S'char'
p25702
a(lp25703
I-1
aaNtp25704
(S'pathBufferSize'
p25705
(lp25706
S'uInt32'
p25707
aNtp25708
(S'pathStatus'
p25709
(lp25710
S'int32'
p25711
ag19
aNtp25712
tp25713
tp25714
sS'DAQmxSetBufOutputOnbrdBufSize'
p25715
((lp25716
S'int32'
p25717
ag11
a((S'taskHandle'
p25718
(lp25719
S'TaskHandle'
p25720
aNtp25721
(S'data'
p25722
(lp25723
S'uInt32'
p25724
aNtp25725
tp25726
tp25727
sS'DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc'
p25728
((lp25729
S'int32'
p25730
ag11
a((S'taskHandle'
p25731
(lp25732
S'TaskHandle'
p25733
aNtp25734
(S'channel'
p25735
(lp25736
S'char'
p25737
a(lp25738
I-1
aaNtp25739
(S'data'
p25740
(lp25741
S'char'
p25742
ag19
aNtp25743
tp25744
tp25745
sS'DAQmxGetCIEncoderZInputDigFltrTimebaseRate'
p25746
((lp25747
S'int32'
p25748
ag11
a((S'taskHandle'
p25749
(lp25750
S'TaskHandle'
p25751
aNtp25752
(S'channel'
p25753
(lp25754
S'char'
p25755
a(lp25756
I-1
aaNtp25757
(S'data'
p25758
(lp25759
S'float64'
p25760
ag19
aNtp25761
tp25762
tp25763
sS'DAQmxResetDigLvlPauseTrigDigSyncEnable'
p25764
((lp25765
S'int32'
p25766
ag11
a((S'taskHandle'
p25767
(lp25768
S'TaskHandle'
p25769
aNtp25770
tp25771
tp25772
sS'DAQmxGetCIEncoderBInputDigSyncEnable'
p25773
((lp25774
S'int32'
p25775
ag11
a((S'taskHandle'
p25776
(lp25777
S'TaskHandle'
p25778
aNtp25779
(S'channel'
p25780
(lp25781
S'char'
p25782
a(lp25783
I-1
aaNtp25784
(S'data'
p25785
(lp25786
S'bool32'
p25787
ag19
aNtp25788
tp25789
tp25790
sS'DAQmxSetAICurrentShuntLoc'
p25791
((lp25792
S'int32'
p25793
ag11
a((S'taskHandle'
p25794
(lp25795
S'TaskHandle'
p25796
aNtp25797
(S'channel'
p25798
(lp25799
S'char'
p25800
a(lp25801
I-1
aaNtp25802
(S'data'
p25803
(lp25804
S'int32'
p25805
aNtp25806
tp25807
tp25808
sS'DAQmxSetCIEncoderBInputTerm'
p25809
((lp25810
S'int32'
p25811
ag11
a((S'taskHandle'
p25812
(lp25813
S'TaskHandle'
p25814
aNtp25815
(S'channel'
p25816
(lp25817
S'char'
p25818
a(lp25819
I-1
aaNtp25820
(S'data'
p25821
(lp25822
S'char'
p25823
ag19
aNtp25824
tp25825
tp25826
sS'DAQmxRegisterEveryNSamplesEvent'
p25827
((lp25828
S'int32'
p25829
ag11
a((S'task'
p25830
(lp25831
S'TaskHandle'
p25832
aNtp25833
(S'everyNsamplesEventType'
p25834
(lp25835
S'int32'
p25836
aNtp25837
(S'nSamples'
p25838
(lp25839
S'uInt32'
p25840
aNtp25841
(S'options'
p25842
(lp25843
S'uInt32'
p25844
aNtp25845
(S'callbackFunction'
p25846
(lp25847
S'DAQmxEveryNSamplesEventCallbackPtr'
p25848
aNtp25849
(S'callbackData'
p25850
(lp25851
S'void'
p25852
ag19
aNtp25853
tp25854
tp25855
sS'DAQmxSetReadOffset'
p25856
((lp25857
S'int32'
p25858
ag11
a((S'taskHandle'
p25859
(lp25860
S'TaskHandle'
p25861
aNtp25862
(S'data'
p25863
(lp25864
S'int32'
p25865
aNtp25866
tp25867
tp25868
sS'DAQmxResetCIEncoderZInputDigFltrMinPulseWidth'
p25869
((lp25870
S'int32'
p25871
ag11
a((S'taskHandle'
p25872
(lp25873
S'TaskHandle'
p25874
aNtp25875
(S'channel'
p25876
(lp25877
S'char'
p25878
a(lp25879
I-1
aaNtp25880
tp25881
tp25882
sS'DAQmxResetReadWaitMode'
p25883
((lp25884
S'int32'
p25885
ag11
a((S'taskHandle'
p25886
(lp25887
S'TaskHandle'
p25888
aNtp25889
tp25890
tp25891
sS'DAQmxGetCIPeriodTerm'
p25892
((lp25893
S'int32'
p25894
ag11
a((S'taskHandle'
p25895
(lp25896
S'TaskHandle'
p25897
aNtp25898
(S'channel'
p25899
(lp25900
S'char'
p25901
a(lp25902
I-1
aaNtp25903
(S'data'
p25904
(lp25905
S'char'
p25906
ag19
aNtp25907
(S'bufferSize'
p25908
(lp25909
S'uInt32'
p25910
aNtp25911
tp25912
tp25913
sS'DAQmxResetDIDataXferMech'
p25914
((lp25915
S'int32'
p25916
ag11
a((S'taskHandle'
p25917
(lp25918
S'TaskHandle'
p25919
aNtp25920
(S'channel'
p25921
(lp25922
S'char'
p25923
a(lp25924
I-1
aaNtp25925
tp25926
tp25927
sS'DAQmxReadBinaryU32'
p25928
((lp25929
S'int32'
p25930
ag11
a((S'taskHandle'
p25931
(lp25932
S'TaskHandle'
p25933
aNtp25934
(S'numSampsPerChan'
p25935
(lp25936
S'int32'
p25937
aNtp25938
(S'timeout'
p25939
(lp25940
S'float64'
p25941
aNtp25942
(S'fillMode'
p25943
(lp25944
S'bool32'
p25945
aNtp25946
(S'readArray'
p25947
(lp25948
S'uInt32'
p25949
a(lp25950
I-1
aaNtp25951
(S'arraySizeInSamps'
p25952
(lp25953
S'uInt32'
p25954
aNtp25955
(S'sampsPerChanRead'
p25956
(lp25957
S'int32'
p25958
ag19
aNtp25959
(S'reserved'
p25960
(lp25961
S'bool32'
p25962
ag19
aNtp25963
tp25964
tp25965
sS'DAQmxCfgDigEdgeRefTrig'
p25966
((lp25967
S'int32'
p25968
ag11
a((S'taskHandle'
p25969
(lp25970
S'TaskHandle'
p25971
aNtp25972
(S'triggerSource'
p25973
(lp25974
S'char'
p25975
a(lp25976
I-1
aaNtp25977
(S'triggerEdge'
p25978
(lp25979
S'int32'
p25980
aNtp25981
(S'pretriggerSamples'
p25982
(lp25983
S'uInt32'
p25984
aNtp25985
tp25986
tp25987
sS'DAQmxResetAnlgWinStartTrigBtm'
p25988
((lp25989
S'int32'
p25990
ag11
a((S'taskHandle'
p25991
(lp25992
S'TaskHandle'
p25993
aNtp25994
tp25995
tp25996
sS'DAQmxGetCOPulseLowTicks'
p25997
((lp25998
S'int32'
p25999
ag11
a((S'taskHandle'
p26000
(lp26001
S'TaskHandle'
p26002
aNtp26003
(S'channel'
p26004
(lp26005
S'char'
p26006
a(lp26007
I-1
aaNtp26008
(S'data'
p26009
(lp26010
S'uInt32'
p26011
ag19
aNtp26012
tp26013
tp26014
sS'DAQmxGetSysNIDAQMajorVersion'
p26015
((lp26016
S'int32'
p26017
ag11
a((S'data'
p26018
(lp26019
S'uInt32'
p26020
ag19
aNtp26021
tp26022
tp26023
sS'DAQmxGetAIChanCalOperatorName'
p26024
((lp26025
S'int32'
p26026
ag11
a((S'taskHandle'
p26027
(lp26028
S'TaskHandle'
p26029
aNtp26030
(S'channel'
p26031
(lp26032
S'char'
p26033
a(lp26034
I-1
aaNtp26035
(S'data'
p26036
(lp26037
S'char'
p26038
ag19
aNtp26039
(S'bufferSize'
p26040
(lp26041
S'uInt32'
p26042
aNtp26043
tp26044
tp26045
sS'DAQmxGetExportedHshkEventOutputBehavior'
p26046
((lp26047
S'int32'
p26048
ag11
a((S'taskHandle'
p26049
(lp26050
S'TaskHandle'
p26051
aNtp26052
(S'data'
p26053
(lp26054
S'int32'
p26055
ag19
aNtp26056
tp26057
tp26058
sS'DAQmxGetAIChanCalApplyCalIfExp'
p26059
((lp26060
S'int32'
p26061
ag11
a((S'taskHandle'
p26062
(lp26063
S'TaskHandle'
p26064
aNtp26065
(S'channel'
p26066
(lp26067
S'char'
p26068
a(lp26069
I-1
aaNtp26070
(S'data'
p26071
(lp26072
S'bool32'
p26073
ag19
aNtp26074
tp26075
tp26076
sS'DAQmxResetSampClkDigFltrMinPulseWidth'
p26077
((lp26078
S'int32'
p26079
ag11
a((S'taskHandle'
p26080
(lp26081
S'TaskHandle'
p26082
aNtp26083
tp26084
tp26085
sS'DAQmxSetCOCtrTimebaseSrc'
p26086
((lp26087
S'int32'
p26088
ag11
a((S'taskHandle'
p26089
(lp26090
S'TaskHandle'
p26091
aNtp26092
(S'channel'
p26093
(lp26094
S'char'
p26095
a(lp26096
I-1
aaNtp26097
(S'data'
p26098
(lp26099
S'char'
p26100
ag19
aNtp26101
tp26102
tp26103
sS'DAQmxGetPersistedScaleAuthor'
p26104
((lp26105
S'int32'
p26106
ag11
a((S'scaleName'
p26107
(lp26108
S'char'
p26109
a(lp26110
I-1
aaNtp26111
(S'data'
p26112
(lp26113
S'char'
p26114
ag19
aNtp26115
(S'bufferSize'
p26116
(lp26117
S'uInt32'
p26118
aNtp26119
tp26120
tp26121
sS'DAQmxGetCITwoEdgeSepFirstTerm'
p26122
((lp26123
S'int32'
p26124
ag11
a((S'taskHandle'
p26125
(lp26126
S'TaskHandle'
p26127
aNtp26128
(S'channel'
p26129
(lp26130
S'char'
p26131
a(lp26132
I-1
aaNtp26133
(S'data'
p26134
(lp26135
S'char'
p26136
ag19
aNtp26137
(S'bufferSize'
p26138
(lp26139
S'uInt32'
p26140
aNtp26141
tp26142
tp26143
sS'DAQmxSetDigPatternStartTrigWhen'
p26144
((lp26145
S'int32'
p26146
ag11
a((S'taskHandle'
p26147
(lp26148
S'TaskHandle'
p26149
aNtp26150
(S'data'
p26151
(lp26152
S'int32'
p26153
aNtp26154
tp26155
tp26156
sS'DAQmxGetNthTaskReadChannel'
p26157
((lp26158
S'int32'
p26159
ag11
a((S'taskHandle'
p26160
(lp26161
S'TaskHandle'
p26162
aNtp26163
(S'index'
p26164
(lp26165
S'uInt32'
p26166
aNtp26167
(S'buffer'
p26168
(lp26169
S'char'
p26170
a(lp26171
I-1
aaNtp26172
(S'bufferSize'
p26173
(lp26174
S'int32'
p26175
aNtp26176
tp26177
tp26178
sS'DAQmxGetDevDIPorts'
p26179
((lp26180
S'int32'
p26181
ag11
a((S'device'
p26182
(lp26183
S'char'
p26184
a(lp26185
I-1
aaNtp26186
(S'data'
p26187
(lp26188
S'char'
p26189
ag19
aNtp26190
(S'bufferSize'
p26191
(lp26192
S'uInt32'
p26193
aNtp26194
tp26195
tp26196
sS'DAQmxWaitUntilTaskDone'
p26197
((lp26198
S'int32'
p26199
ag11
a((S'taskHandle'
p26200
(lp26201
S'TaskHandle'
p26202
aNtp26203
(S'timeToWait'
p26204
(lp26205
S'float64'
p26206
aNtp26207
tp26208
tp26209
sS'DAQmxSetAIAtten'
p26210
((lp26211
S'int32'
p26212
ag11
a((S'taskHandle'
p26213
(lp26214
S'TaskHandle'
p26215
aNtp26216
(S'channel'
p26217
(lp26218
S'char'
p26219
a(lp26220
I-1
aaNtp26221
(S'data'
p26222
(lp26223
S'float64'
p26224
aNtp26225
tp26226
tp26227
sS'DAQmxResetAILowpassSwitchCapClkSrc'
p26228
((lp26229
S'int32'
p26230
ag11
a((S'taskHandle'
p26231
(lp26232
S'TaskHandle'
p26233
aNtp26234
(S'channel'
p26235
(lp26236
S'char'
p26237
a(lp26238
I-1
aaNtp26239
tp26240
tp26241
sS'DAQmxSetRefTrigPretrigSamples'
p26242
((lp26243
S'int32'
p26244
ag11
a((S'taskHandle'
p26245
(lp26246
S'TaskHandle'
p26247
aNtp26248
(S'data'
p26249
(lp26250
S'uInt32'
p26251
aNtp26252
tp26253
tp26254
sS'DAQmxResetAICurrentShuntLoc'
p26255
((lp26256
S'int32'
p26257
ag11
a((S'taskHandle'
p26258
(lp26259
S'TaskHandle'
p26260
aNtp26261
(S'channel'
p26262
(lp26263
S'char'
p26264
a(lp26265
I-1
aaNtp26266
tp26267
tp26268
sS'DAQmxGetCICountEdgesDigFltrTimebaseRate'
p26269
((lp26270
S'int32'
p26271
ag11
a((S'taskHandle'
p26272
(lp26273
S'TaskHandle'
p26274
aNtp26275
(S'channel'
p26276
(lp26277
S'char'
p26278
a(lp26279
I-1
aaNtp26280
(S'data'
p26281
(lp26282
S'float64'
p26283
ag19
aNtp26284
tp26285
tp26286
sS'DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc'
p26287
((lp26288
S'int32'
p26289
ag11
a((S'taskHandle'
p26290
(lp26291
S'TaskHandle'
p26292
aNtp26293
(S'channel'
p26294
(lp26295
S'char'
p26296
a(lp26297
I-1
aaNtp26298
(S'data'
p26299
(lp26300
S'char'
p26301
ag19
aNtp26302
(S'bufferSize'
p26303
(lp26304
S'uInt32'
p26305
aNtp26306
tp26307
tp26308
sS'DAQmxIsTaskDone'
p26309
((lp26310
S'int32'
p26311
ag11
a((S'taskHandle'
p26312
(lp26313
S'TaskHandle'
p26314
aNtp26315
(S'isTaskDone'
p26316
(lp26317
S'bool32'
p26318
ag19
aNtp26319
tp26320
tp26321
sS'DAQmxSetCOPulseTimeUnits'
p26322
((lp26323
S'int32'
p26324
ag11
a((S'taskHandle'
p26325
(lp26326
S'TaskHandle'
p26327
aNtp26328
(S'channel'
p26329
(lp26330
S'char'
p26331
a(lp26332
I-1
aaNtp26333
(S'data'
p26334
(lp26335
S'int32'
p26336
aNtp26337
tp26338
tp26339
sS'DAQmxGetAODACRefExtSrc'
p26340
((lp26341
S'int32'
p26342
ag11
a((S'taskHandle'
p26343
(lp26344
S'TaskHandle'
p26345
aNtp26346
(S'channel'
p26347
(lp26348
S'char'
p26349
a(lp26350
I-1
aaNtp26351
(S'data'
p26352
(lp26353
S'char'
p26354
ag19
aNtp26355
(S'bufferSize'
p26356
(lp26357
S'uInt32'
p26358
aNtp26359
tp26360
tp26361
sS'DAQmxSetAIExcitVal'
p26362
((lp26363
S'int32'
p26364
ag11
a((S'taskHandle'
p26365
(lp26366
S'TaskHandle'
p26367
aNtp26368
(S'channel'
p26369
(lp26370
S'char'
p26371
a(lp26372
I-1
aaNtp26373
(S'data'
p26374
(lp26375
S'float64'
p26376
aNtp26377
tp26378
tp26379
sS'DAQmxGetCICountEdgesDirTerm'
p26380
((lp26381
S'int32'
p26382
ag11
a((S'taskHandle'
p26383
(lp26384
S'TaskHandle'
p26385
aNtp26386
(S'channel'
p26387
(lp26388
S'char'
p26389
a(lp26390
I-1
aaNtp26391
(S'data'
p26392
(lp26393
S'char'
p26394
ag19
aNtp26395
(S'bufferSize'
p26396
(lp26397
S'uInt32'
p26398
aNtp26399
tp26400
tp26401
sS'DAQmxSetDOUseOnlyOnBrdMem'
p26402
((lp26403
S'int32'
p26404
ag11
a((S'taskHandle'
p26405
(lp26406
S'TaskHandle'
p26407
aNtp26408
(S'channel'
p26409
(lp26410
S'char'
p26411
a(lp26412
I-1
aaNtp26413
(S'data'
p26414
(lp26415
S'bool32'
p26416
aNtp26417
tp26418
tp26419
sS'DAQmxResetSampQuantSampMode'
p26420
((lp26421
S'int32'
p26422
ag11
a((S'taskHandle'
p26423
(lp26424
S'TaskHandle'
p26425
aNtp26426
tp26427
tp26428
sS'DAQmxSetCIEncoderZInputDigFltrTimebaseRate'
p26429
((lp26430
S'int32'
p26431
ag11
a((S'taskHandle'
p26432
(lp26433
S'TaskHandle'
p26434
aNtp26435
(S'channel'
p26436
(lp26437
S'char'
p26438
a(lp26439
I-1
aaNtp26440
(S'data'
p26441
(lp26442
S'float64'
p26443
aNtp26444
tp26445
tp26446
sS'DAQmxSetCISemiPeriodTerm'
p26447
((lp26448
S'int32'
p26449
ag11
a((S'taskHandle'
p26450
(lp26451
S'TaskHandle'
p26452
aNtp26453
(S'channel'
p26454
(lp26455
S'char'
p26456
a(lp26457
I-1
aaNtp26458
(S'data'
p26459
(lp26460
S'char'
p26461
ag19
aNtp26462
tp26463
tp26464
sS'DAQmxGetCISemiPeriodDigSyncEnable'
p26465
((lp26466
S'int32'
p26467
ag11
a((S'taskHandle'
p26468
(lp26469
S'TaskHandle'
p26470
aNtp26471
(S'channel'
p26472
(lp26473
S'char'
p26474
a(lp26475
I-1
aaNtp26476
(S'data'
p26477
(lp26478
S'bool32'
p26479
ag19
aNtp26480
tp26481
tp26482
sS'DAQmxResetAILowpassSwitchCapExtClkFreq'
p26483
((lp26484
S'int32'
p26485
ag11
a((S'taskHandle'
p26486
(lp26487
S'TaskHandle'
p26488
aNtp26489
(S'channel'
p26490
(lp26491
S'char'
p26492
a(lp26493
I-1
aaNtp26494
tp26495
tp26496
sS'DAQmxSetDigLvlPauseTrigDigFltrTimebaseRate'
p26497
((lp26498
S'int32'
p26499
ag11
a((S'taskHandle'
p26500
(lp26501
S'TaskHandle'
p26502
aNtp26503
(S'data'
p26504
(lp26505
S'float64'
p26506
aNtp26507
tp26508
tp26509
sS'DAQmxGetStartTrigType'
p26510
((lp26511
S'int32'
p26512
ag11
a((S'taskHandle'
p26513
(lp26514
S'TaskHandle'
p26515
aNtp26516
(S'data'
p26517
(lp26518
S'int32'
p26519
ag19
aNtp26520
tp26521
tp26522
sS'DAQmxGetAnlgWinPauseTrigTop'
p26523
((lp26524
S'int32'
p26525
ag11
a((S'taskHandle'
p26526
(lp26527
S'TaskHandle'
p26528
aNtp26529
(S'data'
p26530
(lp26531
S'float64'
p26532
ag19
aNtp26533
tp26534
tp26535
sS'DAQmxGetPauseTrigType'
p26536
((lp26537
S'int32'
p26538
ag11
a((S'taskHandle'
p26539
(lp26540
S'TaskHandle'
p26541
aNtp26542
(S'data'
p26543
(lp26544
S'int32'
p26545
ag19
aNtp26546
tp26547
tp26548
sS'DAQmxSetCOCtrTimebaseMasterTimebaseDiv'
p26549
((lp26550
S'int32'
p26551
ag11
a((S'taskHandle'
p26552
(lp26553
S'TaskHandle'
p26554
aNtp26555
(S'channel'
p26556
(lp26557
S'char'
p26558
a(lp26559
I-1
aaNtp26560
(S'data'
p26561
(lp26562
S'uInt32'
p26563
aNtp26564
tp26565
tp26566
sS'DAQmxResetAnlgLvlPauseTrigWhen'
p26567
((lp26568
S'int32'
p26569
ag11
a((S'taskHandle'
p26570
(lp26571
S'TaskHandle'
p26572
aNtp26573
tp26574
tp26575
sS'DAQmxSetExportedHshkEventOutputBehavior'
p26576
((lp26577
S'int32'
p26578
ag11
a((S'taskHandle'
p26579
(lp26580
S'TaskHandle'
p26581
aNtp26582
(S'data'
p26583
(lp26584
S'int32'
p26585
aNtp26586
tp26587
tp26588
sS'DAQmxGetCOCtrTimebaseDigSyncEnable'
p26589
((lp26590
S'int32'
p26591
ag11
a((S'taskHandle'
p26592
(lp26593
S'TaskHandle'
p26594
aNtp26595
(S'channel'
p26596
(lp26597
S'char'
p26598
a(lp26599
I-1
aaNtp26600
(S'data'
p26601
(lp26602
S'bool32'
p26603
ag19
aNtp26604
tp26605
tp26606
sS'DAQmxGetScalePreScaledUnits'
p26607
((lp26608
S'int32'
p26609
ag11
a((S'scaleName'
p26610
(lp26611
S'char'
p26612
a(lp26613
I-1
aaNtp26614
(S'data'
p26615
(lp26616
S'int32'
p26617
ag19
aNtp26618
tp26619
tp26620
sS'DAQmxResetAILVDTSensitivityUnits'
p26621
((lp26622
S'int32'
p26623
ag11
a((S'taskHandle'
p26624
(lp26625
S'TaskHandle'
p26626
aNtp26627
(S'channel'
p26628
(lp26629
S'char'
p26630
a(lp26631
I-1
aaNtp26632
tp26633
tp26634
sS'DAQmxResetCICtrTimebaseRate'
p26635
((lp26636
S'int32'
p26637
ag11
a((S'taskHandle'
p26638
(lp26639
S'TaskHandle'
p26640
aNtp26641
(S'channel'
p26642
(lp26643
S'char'
p26644
a(lp26645
I-1
aaNtp26646
tp26647
tp26648
sS'DAQmxGetWriteAttribute'
p26649
((lp26650
S'int32'
p26651
ag2542
a((S'taskHandle'
p26652
(lp26653
S'TaskHandle'
p26654
aNtp26655
(S'attribute'
p26656
(lp26657
S'int32'
p26658
aNtp26659
(S'value'
p26660
(lp26661
S'void'
p26662
ag19
aNtp26663
tp26664
tp26665
sS'DAQmxResetCIEncoderBInputDigFltrTimebaseSrc'
p26666
((lp26667
S'int32'
p26668
ag11
a((S'taskHandle'
p26669
(lp26670
S'TaskHandle'
p26671
aNtp26672
(S'channel'
p26673
(lp26674
S'char'
p26675
a(lp26676
I-1
aaNtp26677
tp26678
tp26679
sS'DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth'
p26680
((lp26681
S'int32'
p26682
ag11
a((S'taskHandle'
p26683
(lp26684
S'TaskHandle'
p26685
aNtp26686
(S'channel'
p26687
(lp26688
S'char'
p26689
a(lp26690
I-1
aaNtp26691
tp26692
tp26693
sS'DAQmxResetCIAngEncoderUnits'
p26694
((lp26695
S'int32'
p26696
ag11
a((S'taskHandle'
p26697
(lp26698
S'TaskHandle'
p26699
aNtp26700
(S'channel'
p26701
(lp26702
S'char'
p26703
a(lp26704
I-1
aaNtp26705
tp26706
tp26707
sS'DAQmxResetAOEnhancedImageRejectionEnable'
p26708
((lp26709
S'int32'
p26710
ag11
a((S'taskHandle'
p26711
(lp26712
S'TaskHandle'
p26713
aNtp26714
(S'channel'
p26715
(lp26716
S'char'
p26717
a(lp26718
I-1
aaNtp26719
tp26720
tp26721
sS'DAQmxGetSyncPulseSyncTime'
p26722
((lp26723
S'int32'
p26724
ag11
a((S'taskHandle'
p26725
(lp26726
S'TaskHandle'
p26727
aNtp26728
(S'data'
p26729
(lp26730
S'float64'
p26731
ag19
aNtp26732
tp26733
tp26734
sS'DAQmxDeleteSavedScale'
p26735
((lp26736
S'int32'
p26737
ag11
a((S'scaleName'
p26738
(lp26739
S'char'
p26740
a(lp26741
I-1
aaNtp26742
tp26743
tp26744
sS'DAQmxGetPersistedScaleAllowInteractiveEditing'
p26745
((lp26746
S'int32'
p26747
ag11
a((S'scaleName'
p26748
(lp26749
S'char'
p26750
a(lp26751
I-1
aaNtp26752
(S'data'
p26753
(lp26754
S'bool32'
p26755
ag19
aNtp26756
tp26757
tp26758
sS'DAQmxGetCOPrescaler'
p26759
((lp26760
S'int32'
p26761
ag11
a((S'taskHandle'
p26762
(lp26763
S'TaskHandle'
p26764
aNtp26765
(S'channel'
p26766
(lp26767
S'char'
p26768
a(lp26769
I-1
aaNtp26770
(S'data'
p26771
(lp26772
S'uInt32'
p26773
ag19
aNtp26774
tp26775
tp26776
sS'DAQmxGetAIRTDR0'
p26777
((lp26778
S'int32'
p26779
ag11
a((S'taskHandle'
p26780
(lp26781
S'TaskHandle'
p26782
aNtp26783
(S'channel'
p26784
(lp26785
S'char'
p26786
a(lp26787
I-1
aaNtp26788
(S'data'
p26789
(lp26790
S'float64'
p26791
ag19
aNtp26792
tp26793
tp26794
sS'DAQmxGetAIResistanceUnits'
p26795
((lp26796
S'int32'
p26797
ag11
a((S'taskHandle'
p26798
(lp26799
S'TaskHandle'
p26800
aNtp26801
(S'channel'
p26802
(lp26803
S'char'
p26804
a(lp26805
I-1
aaNtp26806
(S'data'
p26807
(lp26808
S'int32'
p26809
ag19
aNtp26810
tp26811
tp26812
sS'DAQmxSetCOCtrTimebaseActiveEdge'
p26813
((lp26814
S'int32'
p26815
ag11
a((S'taskHandle'
p26816
(lp26817
S'TaskHandle'
p26818
aNtp26819
(S'channel'
p26820
(lp26821
S'char'
p26822
a(lp26823
I-1
aaNtp26824
(S'data'
p26825
(lp26826
S'int32'
p26827
aNtp26828
tp26829
tp26830
sS'DAQmxGetCIFreqDigFltrMinPulseWidth'
p26831
((lp26832
S'int32'
p26833
ag11
a((S'taskHandle'
p26834
(lp26835
S'TaskHandle'
p26836
aNtp26837
(S'channel'
p26838
(lp26839
S'char'
p26840
a(lp26841
I-1
aaNtp26842
(S'data'
p26843
(lp26844
S'float64'
p26845
ag19
aNtp26846
tp26847
tp26848
sS'DAQmxResetCIGPSSyncSrc'
p26849
((lp26850
S'int32'
p26851
ag11
a((S'taskHandle'
p26852
(lp26853
S'TaskHandle'
p26854
aNtp26855
(S'channel'
p26856
(lp26857
S'char'
p26858
a(lp26859
I-1
aaNtp26860
tp26861
tp26862
sS'DAQmxResetExportedHshkEventInterlockedDeassertDelay'
p26863
((lp26864
S'int32'
p26865
ag11
a((S'taskHandle'
p26866
(lp26867
S'TaskHandle'
p26868
aNtp26869
tp26870
tp26871
sS'DAQmxSetAIConvActiveEdge'
p26872
((lp26873
S'int32'
p26874
ag11
a((S'taskHandle'
p26875
(lp26876
S'TaskHandle'
p26877
aNtp26878
(S'data'
p26879
(lp26880
S'int32'
p26881
aNtp26882
tp26883
tp26884
sS'DAQmxGetCIFreqMeasTime'
p26885
((lp26886
S'int32'
p26887
ag11
a((S'taskHandle'
p26888
(lp26889
S'TaskHandle'
p26890
aNtp26891
(S'channel'
p26892
(lp26893
S'char'
p26894
a(lp26895
I-1
aaNtp26896
(S'data'
p26897
(lp26898
S'float64'
p26899
ag19
aNtp26900
tp26901
tp26902
sS'DAQmxGetAIDataXferReqCond'
p26903
((lp26904
S'int32'
p26905
ag11
a((S'taskHandle'
p26906
(lp26907
S'TaskHandle'
p26908
aNtp26909
(S'channel'
p26910
(lp26911
S'char'
p26912
a(lp26913
I-1
aaNtp26914
(S'data'
p26915
(lp26916
S'int32'
p26917
ag19
aNtp26918
tp26919
tp26920
sS'DAQmxGetCISemiPeriodStartingEdge'
p26921
((lp26922
S'int32'
p26923
ag11
a((S'taskHandle'
p26924
(lp26925
S'TaskHandle'
p26926
aNtp26927
(S'channel'
p26928
(lp26929
S'char'
p26930
a(lp26931
I-1
aaNtp26932
(S'data'
p26933
(lp26934
S'int32'
p26935
ag19
aNtp26936
tp26937
tp26938
sS'DAQmxGetAIBridgeShuntCalGainAdjust'
p26939
((lp26940
S'int32'
p26941
ag11
a((S'taskHandle'
p26942
(lp26943
S'TaskHandle'
p26944
aNtp26945
(S'channel'
p26946
(lp26947
S'char'
p26948
a(lp26949
I-1
aaNtp26950
(S'data'
p26951
(lp26952
S'float64'
p26953
ag19
aNtp26954
tp26955
tp26956
sS'DAQmxWriteBinaryI16'
p26957
((lp26958
S'int32'
p26959
ag11
a((S'taskHandle'
p26960
(lp26961
S'TaskHandle'
p26962
aNtp26963
(S'numSampsPerChan'
p26964
(lp26965
S'int32'
p26966
aNtp26967
(S'autoStart'
p26968
(lp26969
S'bool32'
p26970
aNtp26971
(S'timeout'
p26972
(lp26973
S'float64'
p26974
aNtp26975
(S'dataLayout'
p26976
(lp26977
S'bool32'
p26978
aNtp26979
(S'writeArray'
p26980
(lp26981
S'int16'
p26982
a(lp26983
I-1
aaNtp26984
(S'sampsPerChanWritten'
p26985
(lp26986
S'int32'
p26987
ag19
aNtp26988
(S'reserved'
p26989
(lp26990
S'bool32'
p26991
ag19
aNtp26992
tp26993
tp26994
sS'DAQmxSetCICountEdgesCountDirDigSyncEnable'
p26995
((lp26996
S'int32'
p26997
ag11
a((S'taskHandle'
p26998
(lp26999
S'TaskHandle'
p27000
aNtp27001
(S'channel'
p27002
(lp27003
S'char'
p27004
a(lp27005
I-1
aaNtp27006
(S'data'
p27007
(lp27008
S'bool32'
p27009
aNtp27010
tp27011
tp27012
sS'DAQmxGetWriteNumChans'
p27013
((lp27014
S'int32'
p27015
ag11
a((S'taskHandle'
p27016
(lp27017
S'TaskHandle'
p27018
aNtp27019
(S'data'
p27020
(lp27021
S'uInt32'
p27022
ag19
aNtp27023
tp27024
tp27025
sS'DAQmxSetSampClkDigFltrEnable'
p27026
((lp27027
S'int32'
p27028
ag11
a((S'taskHandle'
p27029
(lp27030
S'TaskHandle'
p27031
aNtp27032
(S'data'
p27033
(lp27034
S'bool32'
p27035
aNtp27036
tp27037
tp27038
sS'DAQmxSetCICountEdgesDigFltrMinPulseWidth'
p27039
((lp27040
S'int32'
p27041
ag11
a((S'taskHandle'
p27042
(lp27043
S'TaskHandle'
p27044
aNtp27045
(S'channel'
p27046
(lp27047
S'char'
p27048
a(lp27049
I-1
aaNtp27050
(S'data'
p27051
(lp27052
S'float64'
p27053
aNtp27054
tp27055
tp27056
sS'DAQmxGetAnlgWinStartTrigWhen'
p27057
((lp27058
S'int32'
p27059
ag11
a((S'taskHandle'
p27060
(lp27061
S'TaskHandle'
p27062
aNtp27063
(S'data'
p27064
(lp27065
S'int32'
p27066
ag19
aNtp27067
tp27068
tp27069
sS'DAQmxCreateAIStrainGageChan'
p27070
((lp27071
S'int32'
p27072
ag11
a((S'taskHandle'
p27073
(lp27074
S'TaskHandle'
p27075
aNtp27076
(S'physicalChannel'
p27077
(lp27078
S'char'
p27079
a(lp27080
I-1
aaNtp27081
(S'nameToAssignToChannel'
p27082
(lp27083
S'char'
p27084
a(lp27085
I-1
aaNtp27086
(S'minVal'
p27087
(lp27088
S'float64'
p27089
aNtp27090
(S'maxVal'
p27091
(lp27092
S'float64'
p27093
aNtp27094
(S'units'
p27095
(lp27096
S'int32'
p27097
aNtp27098
(S'strainConfig'
p27099
(lp27100
S'int32'
p27101
aNtp27102
(S'voltageExcitSource'
p27103
(lp27104
S'int32'
p27105
aNtp27106
(S'voltageExcitVal'
p27107
(lp27108
S'float64'
p27109
aNtp27110
(S'gageFactor'
p27111
(lp27112
S'float64'
p27113
aNtp27114
(S'initialBridgeVoltage'
p27115
(lp27116
S'float64'
p27117
aNtp27118
(S'nominalGageResistance'
p27119
(lp27120
S'float64'
p27121
aNtp27122
(S'poissonRatio'
p27123
(lp27124
S'float64'
p27125
aNtp27126
(S'leadWireResistance'
p27127
(lp27128
S'float64'
p27129
aNtp27130
(S'customScaleName'
p27131
(lp27132
S'char'
p27133
a(lp27134
I-1
aaNtp27135
tp27136
tp27137
sS'DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth'
p27138
((lp27139
S'int32'
p27140
ag11
a((S'taskHandle'
p27141
(lp27142
S'TaskHandle'
p27143
aNtp27144
(S'data'
p27145
(lp27146
S'float64'
p27147
ag19
aNtp27148
tp27149
tp27150
sS'DAQmxResetSampClkTimebaseSrc'
p27151
((lp27152
S'int32'
p27153
ag11
a((S'taskHandle'
p27154
(lp27155
S'TaskHandle'
p27156
aNtp27157
tp27158
tp27159
sS'DAQmxResetCICtrTimebaseDigFltrEnable'
p27160
((lp27161
S'int32'
p27162
ag11
a((S'taskHandle'
p27163
(lp27164
S'TaskHandle'
p27165
aNtp27166
(S'channel'
p27167
(lp27168
S'char'
p27169
a(lp27170
I-1
aaNtp27171
tp27172
tp27173
sS'DAQmxGetSysNIDAQMinorVersion'
p27174
((lp27175
S'int32'
p27176
ag11
a((S'data'
p27177
(lp27178
S'uInt32'
p27179
ag19
aNtp27180
tp27181
tp27182
sS'DAQmxAOSeriesCalAdjust'
p27183
((lp27184
S'int32'
p27185
ag11
a((S'calHandle'
p27186
(lp27187
S'uInt32'
p27188
aNtp27189
(S'referenceVoltage'
p27190
(lp27191
S'float64'
p27192
aNtp27193
tp27194
tp27195
sS'DAQmxSetAOEnhancedImageRejectionEnable'
p27196
((lp27197
S'int32'
p27198
ag11
a((S'taskHandle'
p27199
(lp27200
S'TaskHandle'
p27201
aNtp27202
(S'channel'
p27203
(lp27204
S'char'
p27205
a(lp27206
I-1
aaNtp27207
(S'data'
p27208
(lp27209
S'bool32'
p27210
aNtp27211
tp27212
tp27213
sS'DAQmxSetCIAngEncoderUnits'
p27214
((lp27215
S'int32'
p27216
ag11
a((S'taskHandle'
p27217
(lp27218
S'TaskHandle'
p27219
aNtp27220
(S'channel'
p27221
(lp27222
S'char'
p27223
a(lp27224
I-1
aaNtp27225
(S'data'
p27226
(lp27227
S'int32'
p27228
aNtp27229
tp27230
tp27231
sS'DAQmxGetReadNumChans'
p27232
((lp27233
S'int32'
p27234
ag11
a((S'taskHandle'
p27235
(lp27236
S'TaskHandle'
p27237
aNtp27238
(S'data'
p27239
(lp27240
S'uInt32'
p27241
ag19
aNtp27242
tp27243
tp27244
sS'DAQmxGetCITwoEdgeSepFirstDigFltrEnable'
p27245
((lp27246
S'int32'
p27247
ag11
a((S'taskHandle'
p27248
(lp27249
S'TaskHandle'
p27250
aNtp27251
(S'channel'
p27252
(lp27253
S'char'
p27254
a(lp27255
I-1
aaNtp27256
(S'data'
p27257
(lp27258
S'bool32'
p27259
ag19
aNtp27260
tp27261
tp27262
sS'DAQmxResetAODACRefExtSrc'
p27263
((lp27264
S'int32'
p27265
ag11
a((S'taskHandle'
p27266
(lp27267
S'TaskHandle'
p27268
aNtp27269
(S'channel'
p27270
(lp27271
S'char'
p27272
a(lp27273
I-1
aaNtp27274
tp27275
tp27276
sS'DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth'
p27277
((lp27278
S'int32'
p27279
ag11
a((S'taskHandle'
p27280
(lp27281
S'TaskHandle'
p27282
aNtp27283
(S'channel'
p27284
(lp27285
S'char'
p27286
a(lp27287
I-1
aaNtp27288
(S'data'
p27289
(lp27290
S'float64'
p27291
aNtp27292
tp27293
tp27294
sS'DAQmxSetCIEncoderZIndexEnable'
p27295
((lp27296
S'int32'
p27297
ag11
a((S'taskHandle'
p27298
(lp27299
S'TaskHandle'
p27300
aNtp27301
(S'channel'
p27302
(lp27303
S'char'
p27304
a(lp27305
I-1
aaNtp27306
(S'data'
p27307
(lp27308
S'bool32'
p27309
aNtp27310
tp27311
tp27312
sS'DAQmxSetCOPulseTimeInitialDelay'
p27313
((lp27314
S'int32'
p27315
ag11
a((S'taskHandle'
p27316
(lp27317
S'TaskHandle'
p27318
aNtp27319
(S'channel'
p27320
(lp27321
S'char'
p27322
a(lp27323
I-1
aaNtp27324
(S'data'
p27325
(lp27326
S'float64'
p27327
aNtp27328
tp27329
tp27330
sS'DAQmxSetCIFreqDigFltrTimebaseRate'
p27331
((lp27332
S'int32'
p27333
ag11
a((S'taskHandle'
p27334
(lp27335
S'TaskHandle'
p27336
aNtp27337
(S'channel'
p27338
(lp27339
S'char'
p27340
a(lp27341
I-1
aaNtp27342
(S'data'
p27343
(lp27344
S'float64'
p27345
aNtp27346
tp27347
tp27348
sS'DAQmxSetAIMicrophoneSensitivity'
p27349
((lp27350
S'int32'
p27351
ag11
a((S'taskHandle'
p27352
(lp27353
S'TaskHandle'
p27354
aNtp27355
(S'channel'
p27356
(lp27357
S'char'
p27358
a(lp27359
I-1
aaNtp27360
(S'data'
p27361
(lp27362
S'float64'
p27363
aNtp27364
tp27365
tp27366
sS'DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc'
p27367
((lp27368
S'int32'
p27369
ag11
a((S'taskHandle'
p27370
(lp27371
S'TaskHandle'
p27372
aNtp27373
(S'channel'
p27374
(lp27375
S'char'
p27376
a(lp27377
I-1
aaNtp27378
tp27379
tp27380
sS'DAQmxSetCOPulseDutyCyc'
p27381
((lp27382
S'int32'
p27383
ag11
a((S'taskHandle'
p27384
(lp27385
S'TaskHandle'
p27386
aNtp27387
(S'channel'
p27388
(lp27389
S'char'
p27390
a(lp27391
I-1
aaNtp27392
(S'data'
p27393
(lp27394
S'float64'
p27395
aNtp27396
tp27397
tp27398
sS'DAQmxResetAILowpassCutoffFreq'
p27399
((lp27400
S'int32'
p27401
ag11
a((S'taskHandle'
p27402
(lp27403
S'TaskHandle'
p27404
aNtp27405
(S'channel'
p27406
(lp27407
S'char'
p27408
a(lp27409
I-1
aaNtp27410
tp27411
tp27412
sS'DAQmxResetRefTrigType'
p27413
((lp27414
S'int32'
p27415
ag11
a((S'taskHandle'
p27416
(lp27417
S'TaskHandle'
p27418
aNtp27419
tp27420
tp27421
sS'DAQmxGetCIFreqTerm'
p27422
((lp27423
S'int32'
p27424
ag11
a((S'taskHandle'
p27425
(lp27426
S'TaskHandle'
p27427
aNtp27428
(S'channel'
p27429
(lp27430
S'char'
p27431
a(lp27432
I-1
aaNtp27433
(S'data'
p27434
(lp27435
S'char'
p27436
ag19
aNtp27437
(S'bufferSize'
p27438
(lp27439
S'uInt32'
p27440
aNtp27441
tp27442
tp27443
sS'DAQmxResetCIFreqDigFltrTimebaseSrc'
p27444
((lp27445
S'int32'
p27446
ag11
a((S'taskHandle'
p27447
(lp27448
S'TaskHandle'
p27449
aNtp27450
(S'channel'
p27451
(lp27452
S'char'
p27453
a(lp27454
I-1
aaNtp27455
tp27456
tp27457
sS'DAQmxResetCOPrescaler'
p27458
((lp27459
S'int32'
p27460
ag11
a((S'taskHandle'
p27461
(lp27462
S'TaskHandle'
p27463
aNtp27464
(S'channel'
p27465
(lp27466
S'char'
p27467
a(lp27468
I-1
aaNtp27469
tp27470
tp27471
sS'DAQmxResetCOPulseTerm'
p27472
((lp27473
S'int32'
p27474
ag11
a((S'taskHandle'
p27475
(lp27476
S'TaskHandle'
p27477
aNtp27478
(S'channel'
p27479
(lp27480
S'char'
p27481
a(lp27482
I-1
aaNtp27483
tp27484
tp27485
sS'DAQmxGetScaleDescr'
p27486
((lp27487
S'int32'
p27488
ag11
a((S'scaleName'
p27489
(lp27490
S'char'
p27491
a(lp27492
I-1
aaNtp27493
(S'data'
p27494
(lp27495
S'char'
p27496
ag19
aNtp27497
(S'bufferSize'
p27498
(lp27499
S'uInt32'
p27500
aNtp27501
tp27502
tp27503
sS'DAQmxGetAnlgWinStartTrigCoupling'
p27504
((lp27505
S'int32'
p27506
ag11
a((S'taskHandle'
p27507
(lp27508
S'TaskHandle'
p27509
aNtp27510
(S'data'
p27511
(lp27512
S'int32'
p27513
ag19
aNtp27514
tp27515
tp27516
sS'DAQmxGetAnlgLvlPauseTrigLvl'
p27517
((lp27518
S'int32'
p27519
ag11
a((S'taskHandle'
p27520
(lp27521
S'TaskHandle'
p27522
aNtp27523
(S'data'
p27524
(lp27525
S'float64'
p27526
ag19
aNtp27527
tp27528
tp27529
sS'DAQmxResetCISemiPeriodStartingEdge'
p27530
((lp27531
S'int32'
p27532
ag11
a((S'taskHandle'
p27533
(lp27534
S'TaskHandle'
p27535
aNtp27536
(S'channel'
p27537
(lp27538
S'char'
p27539
a(lp27540
I-1
aaNtp27541
tp27542
tp27543
sS'DAQmxGetSysTasks'
p27544
((lp27545
S'int32'
p27546
ag11
a((S'data'
p27547
(lp27548
S'char'
p27549
ag19
aNtp27550
(S'bufferSize'
p27551
(lp27552
S'uInt32'
p27553
aNtp27554
tp27555
tp27556
sS'DAQmxSetCISemiPeriodDigFltrEnable'
p27557
((lp27558
S'int32'
p27559
ag11
a((S'taskHandle'
p27560
(lp27561
S'TaskHandle'
p27562
aNtp27563
(S'channel'
p27564
(lp27565
S'char'
p27566
a(lp27567
I-1
aaNtp27568
(S'data'
p27569
(lp27570
S'bool32'
p27571
aNtp27572
tp27573
tp27574
sS'DAQmxSetAnlgEdgeStartTrigSrc'
p27575
((lp27576
S'int32'
p27577
ag11
a((S'taskHandle'
p27578
(lp27579
S'TaskHandle'
p27580
aNtp27581
(S'data'
p27582
(lp27583
S'char'
p27584
ag19
aNtp27585
tp27586
tp27587
sS'DAQmxResetBufInputBufSize'
p27588
((lp27589
S'int32'
p27590
ag11
a((S'taskHandle'
p27591
(lp27592
S'TaskHandle'
p27593
aNtp27594
tp27595
tp27596
sS'DAQmxSetCICountEdgesDigFltrTimebaseSrc'
p27597
((lp27598
S'int32'
p27599
ag11
a((S'taskHandle'
p27600
(lp27601
S'TaskHandle'
p27602
aNtp27603
(S'channel'
p27604
(lp27605
S'char'
p27606
a(lp27607
I-1
aaNtp27608
(S'data'
p27609
(lp27610
S'char'
p27611
ag19
aNtp27612
tp27613
tp27614
sS'DAQmxResetReadOverWrite'
p27615
((lp27616
S'int32'
p27617
ag11
a((S'taskHandle'
p27618
(lp27619
S'TaskHandle'
p27620
aNtp27621
tp27622
tp27623
sS'DAQmxGetTaskComplete'
p27624
((lp27625
S'int32'
p27626
ag11
a((S'taskHandle'
p27627
(lp27628
S'TaskHandle'
p27629
aNtp27630
(S'data'
p27631
(lp27632
S'bool32'
p27633
ag19
aNtp27634
tp27635
tp27636
sS'DAQmxGetSysGlobalChans'
p27637
((lp27638
S'int32'
p27639
ag11
a((S'data'
p27640
(lp27641
S'char'
p27642
ag19
aNtp27643
(S'bufferSize'
p27644
(lp27645
S'uInt32'
p27646
aNtp27647
tp27648
tp27649
sS'DAQmxResetCICustomScaleName'
p27650
((lp27651
S'int32'
p27652
ag11
a((S'taskHandle'
p27653
(lp27654
S'TaskHandle'
p27655
aNtp27656
(S'channel'
p27657
(lp27658
S'char'
p27659
a(lp27660
I-1
aaNtp27661
tp27662
tp27663
sS'DAQmxReadDigitalU32'
p27664
((lp27665
S'int32'
p27666
ag11
a((S'taskHandle'
p27667
(lp27668
S'TaskHandle'
p27669
aNtp27670
(S'numSampsPerChan'
p27671
(lp27672
S'int32'
p27673
aNtp27674
(S'timeout'
p27675
(lp27676
S'float64'
p27677
aNtp27678
(S'fillMode'
p27679
(lp27680
S'bool32'
p27681
aNtp27682
(S'readArray'
p27683
(lp27684
S'uInt32'
p27685
a(lp27686
I-1
aaNtp27687
(S'arraySizeInSamps'
p27688
(lp27689
S'uInt32'
p27690
aNtp27691
(S'sampsPerChanRead'
p27692
(lp27693
S'int32'
p27694
ag19
aNtp27695
(S'reserved'
p27696
(lp27697
S'bool32'
p27698
ag19
aNtp27699
tp27700
tp27701
sS'DAQmxGetPhysicalChanTEDSVersionLetter'
p27702
((lp27703
S'int32'
p27704
ag11
a((S'physicalChannel'
p27705
(lp27706
S'char'
p27707
a(lp27708
I-1
aaNtp27709
(S'data'
p27710
(lp27711
S'char'
p27712
ag19
aNtp27713
(S'bufferSize'
p27714
(lp27715
S'uInt32'
p27716
aNtp27717
tp27718
tp27719
sS'DAQmxGetCIPeriodDigFltrMinPulseWidth'
p27720
((lp27721
S'int32'
p27722
ag11
a((S'taskHandle'
p27723
(lp27724
S'TaskHandle'
p27725
aNtp27726
(S'channel'
p27727
(lp27728
S'char'
p27729
a(lp27730
I-1
aaNtp27731
(S'data'
p27732
(lp27733
S'float64'
p27734
ag19
aNtp27735
tp27736
tp27737
sS'DAQmxGetDODataXferReqCond'
p27738
((lp27739
S'int32'
p27740
ag11
a((S'taskHandle'
p27741
(lp27742
S'TaskHandle'
p27743
aNtp27744
(S'channel'
p27745
(lp27746
S'char'
p27747
a(lp27748
I-1
aaNtp27749
(S'data'
p27750
(lp27751
S'int32'
p27752
ag19
aNtp27753
tp27754
tp27755
sS'DAQmxResetDIDataXferReqCond'
p27756
((lp27757
S'int32'
p27758
ag11
a((S'taskHandle'
p27759
(lp27760
S'TaskHandle'
p27761
aNtp27762
(S'channel'
p27763
(lp27764
S'char'
p27765
a(lp27766
I-1
aaNtp27767
tp27768
tp27769
sS'DAQmxReadCounterScalarF64'
p27770
((lp27771
S'int32'
p27772
ag11
a((S'taskHandle'
p27773
(lp27774
S'TaskHandle'
p27775
aNtp27776
(S'timeout'
p27777
(lp27778
S'float64'
p27779
aNtp27780
(S'value'
p27781
(lp27782
S'float64'
p27783
ag19
aNtp27784
(S'reserved'
p27785
(lp27786
S'bool32'
p27787
ag19
aNtp27788
tp27789
tp27790
sS'DAQmxGetAIDataXferCustomThreshold'
p27791
((lp27792
S'int32'
p27793
ag11
a((S'taskHandle'
p27794
(lp27795
S'TaskHandle'
p27796
aNtp27797
(S'channel'
p27798
(lp27799
S'char'
p27800
a(lp27801
I-1
aaNtp27802
(S'data'
p27803
(lp27804
S'uInt32'
p27805
ag19
aNtp27806
tp27807
tp27808
sS'DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate'
p27809
((lp27810
S'int32'
p27811
ag11
a((S'taskHandle'
p27812
(lp27813
S'TaskHandle'
p27814
aNtp27815
(S'channel'
p27816
(lp27817
S'char'
p27818
a(lp27819
I-1
aaNtp27820
tp27821
tp27822
sS'DAQmxSetAIMemMapEnable'
p27823
((lp27824
S'int32'
p27825
ag11
a((S'taskHandle'
p27826
(lp27827
S'TaskHandle'
p27828
aNtp27829
(S'channel'
p27830
(lp27831
S'char'
p27832
a(lp27833
I-1
aaNtp27834
(S'data'
p27835
(lp27836
S'bool32'
p27837
aNtp27838
tp27839
tp27840
sS'DAQmxResetCOCtrTimebaseMasterTimebaseDiv'
p27841
((lp27842
S'int32'
p27843
ag11
a((S'taskHandle'
p27844
(lp27845
S'TaskHandle'
p27846
aNtp27847
(S'channel'
p27848
(lp27849
S'char'
p27850
a(lp27851
I-1
aaNtp27852
tp27853
tp27854
sS'DAQmxGetCOPulseIdleState'
p27855
((lp27856
S'int32'
p27857
ag11
a((S'taskHandle'
p27858
(lp27859
S'TaskHandle'
p27860
aNtp27861
(S'channel'
p27862
(lp27863
S'char'
p27864
a(lp27865
I-1
aaNtp27866
(S'data'
p27867
(lp27868
S'int32'
p27869
ag19
aNtp27870
tp27871
tp27872
sS'DAQmxResetCOPulseIdleState'
p27873
((lp27874
S'int32'
p27875
ag11
a((S'taskHandle'
p27876
(lp27877
S'TaskHandle'
p27878
aNtp27879
(S'channel'
p27880
(lp27881
S'char'
p27882
a(lp27883
I-1
aaNtp27884
tp27885
tp27886
sS'DAQmxResetDigPatternStartTrigPattern'
p27887
((lp27888
S'int32'
p27889
ag11
a((S'taskHandle'
p27890
(lp27891
S'TaskHandle'
p27892
aNtp27893
tp27894
tp27895
sS'DAQmxGetAIFreqUnits'
p27896
((lp27897
S'int32'
p27898
ag11
a((S'taskHandle'
p27899
(lp27900
S'TaskHandle'
p27901
aNtp27902
(S'channel'
p27903
(lp27904
S'char'
p27905
a(lp27906
I-1
aaNtp27907
(S'data'
p27908
(lp27909
S'int32'
p27910
ag19
aNtp27911
tp27912
tp27913
sS'DAQmxGetPhysicalChanTEDSSerialNum'
p27914
((lp27915
S'int32'
p27916
ag11
a((S'physicalChannel'
p27917
(lp27918
S'char'
p27919
a(lp27920
I-1
aaNtp27921
(S'data'
p27922
(lp27923
S'uInt32'
p27924
ag19
aNtp27925
tp27926
tp27927
sS'DAQmxGetDigLvlPauseTrigSrc'
p27928
((lp27929
S'int32'
p27930
ag11
a((S'taskHandle'
p27931
(lp27932
S'TaskHandle'
p27933
aNtp27934
(S'data'
p27935
(lp27936
S'char'
p27937
ag19
aNtp27938
(S'bufferSize'
p27939
(lp27940
S'uInt32'
p27941
aNtp27942
tp27943
tp27944
sS'DAQmxSetDigLvlPauseTrigDigFltrEnable'
p27945
((lp27946
S'int32'
p27947
ag11
a((S'taskHandle'
p27948
(lp27949
S'TaskHandle'
p27950
aNtp27951
(S'data'
p27952
(lp27953
S'bool32'
p27954
aNtp27955
tp27956
tp27957
sS'DAQmxGetExtCalLastDateAndTime'
p27958
((lp27959
S'int32'
p27960
ag11
a((S'deviceName'
p27961
(lp27962
S'char'
p27963
a(lp27964
I-1
aaNtp27965
(S'year'
p27966
(lp27967
S'uInt32'
p27968
ag19
aNtp27969
(S'month'
p27970
(lp27971
S'uInt32'
p27972
ag19
aNtp27973
(S'day'
p27974
(lp27975
S'uInt32'
p27976
ag19
aNtp27977
(S'hour'
p27978
(lp27979
S'uInt32'
p27980
ag19
aNtp27981
(S'minute'
p27982
(lp27983
S'uInt32'
p27984
ag19
aNtp27985
tp27986
tp27987
sS'DAQmxGetAODevScalingCoeff'
p27988
((lp27989
S'int32'
p27990
ag11
a((S'taskHandle'
p27991
(lp27992
S'TaskHandle'
p27993
aNtp27994
(S'channel'
p27995
(lp27996
S'char'
p27997
a(lp27998
I-1
aaNtp27999
(S'data'
p28000
(lp28001
S'float64'
p28002
ag19
aNtp28003
(S'arraySizeInSamples'
p28004
(lp28005
S'uInt32'
p28006
aNtp28007
tp28008
tp28009
sS'DAQmxSetAIStrainGagePoissonRatio'
p28010
((lp28011
S'int32'
p28012
ag11
a((S'taskHandle'
p28013
(lp28014
S'TaskHandle'
p28015
aNtp28016
(S'channel'
p28017
(lp28018
S'char'
p28019
a(lp28020
I-1
aaNtp28021
(S'data'
p28022
(lp28023
S'float64'
p28024
aNtp28025
tp28026
tp28027
sS'DAQmxGetCIPeriodDiv'
p28028
((lp28029
S'int32'
p28030
ag11
a((S'taskHandle'
p28031
(lp28032
S'TaskHandle'
p28033
aNtp28034
(S'channel'
p28035
(lp28036
S'char'
p28037
a(lp28038
I-1
aaNtp28039
(S'data'
p28040
(lp28041
S'uInt32'
p28042
ag19
aNtp28043
tp28044
tp28045
sS'DAQmxGetAnlgWinStartTrigTop'
p28046
((lp28047
S'int32'
p28048
ag11
a((S'taskHandle'
p28049
(lp28050
S'TaskHandle'
p28051
aNtp28052
(S'data'
p28053
(lp28054
S'float64'
p28055
ag19
aNtp28056
tp28057
tp28058
sS'DAQmxGetAOOutputImpedance'
p28059
((lp28060
S'int32'
p28061
ag11
a((S'taskHandle'
p28062
(lp28063
S'TaskHandle'
p28064
aNtp28065
(S'channel'
p28066
(lp28067
S'char'
p28068
a(lp28069
I-1
aaNtp28070
(S'data'
p28071
(lp28072
S'float64'
p28073
ag19
aNtp28074
tp28075
tp28076
ssS'enums'
p28077
(dp28078
sS'variables'
p28079
(dp28080
S'int64'
p28081
(N(lp28082
S'typedef'
p28083
atp28084
ssS'macros'
p28085
(dp28086
S'DAQmx_Dev_DI_Ports'
p28087
S'0x2321'
p28088
sS'DAQmxErrorChannelNotReservedForRouting'
p28089
S'(-200186)'
p28090
sS'DAQmx_AI_RTD_B'
p28091
S'0x1011'
p28092
sS'DAQmx_AI_RTD_C'
p28093
S'0x1013'
p28094
sS'DAQmx_AI_RTD_A'
p28095
S'0x1010'
p28096
sS'DAQmxErrorCantSetWatchdogExpirationOnDigInChan'
p28097
S'(-200651)'
p28098
sS'DAQmx_AIConv_MaxRate'
p28099
S'0x22C9'
p28100
sS'DAQmxErrorSampToWritePerChanNotMultipleOfIncr'
p28101
S'(-200584)'
p28102
sS'DAQmx_SwitchDev_NumRows'
p28103
S'0x18E9'
p28104
sS'DAQmxWarningPALTransferOverread'
p28105
S'(50411)'
p28106
sS'DAQmxErrorWriteNotCompleteBeforeSampClk'
p28107
S'(-209801)'
p28108
sS'DAQmxErrorSpecifiedAttrNotValid'
p28109
S'(-200233)'
p28110
sS'DAQmx_Val_Switch_Topology_2575_2_Wire_95x1_Mux'
p28111
S'"2575/2-Wire 95x1 Mux"'
p28112
sS'DAQmx_AI_TermCfg'
p28113
S'0x1097'
p28114
sS'DAQmxErrorCounterTimebaseRateNotSpecified'
p28115
S'(-200143)'
p28116
sS'DAQmxErrorHWUnexpectedlyPoweredOffAndOn'
p28117
S'(-200194)'
p28118
sS'DAQmx_AI_Excit_Val'
p28119
S'0x17F5'
p28120
sS'DAQmx_Val_FullBridgeIII'
p28121
S'10185'
p28122
sS'DAQmxErrorDigitalWaveformExpected'
p28123
S'(-200094)'
p28124
sS'DAQmx_DigEdge_AdvTrig_Edge'
p28125
S'0x1360'
p28126
sS'DAQmxErrorCAPISyncEventsTaskStateChangeNotAllowedFromDifferentThread'
p28127
S'(-200979)'
p28128
sS'DAQmxErrorInadequateResolutionForTimebaseCal'
p28129
S'(-200721)'
p28130
sS'DAQmxErrorInterpolationRateNotPossible'
p28131
S'(-200270)'
p28132
sS'DAQmxErrorRequestedSignalInversionForRoutingNotPossible'
p28133
S'(-200042)'
p28134
sS'DAQmx_Val_Bits'
p28135
S'10109'
p28136
sS'DAQmxErrorInvalidIdentifierFollowingSeparatorInList'
p28137
S'(-200051)'
p28138
sS'DAQmx_CI_SemiPeriod_DigFltr_TimebaseRate'
p28139
S'0x221C'
p28140
sS'DAQmx_SwitchDev_SettlingTime'
p28141
S'0x1244'
p28142
sS'DAQmxErrorInvalidAsynOpHandle'
p28143
S'(-200616)'
p28144
sS'DAQmx_CI_SemiPeriod_DigFltr_MinPulseWidth'
p28145
S'0x221A'
p28146
sS'DAQmx_AO_DataXferReqCond'
p28147
S'0x183C'
p28148
sS'DAQmxErrorTimebaseCalFailedToConverge'
p28149
S'(-200722)'
p28150
sS'DAQmx_SwitchDev_RelayList'
p28151
S'0x17DC'
p28152
sS'DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo2'
p28153
S'(-200745)'
p28154
sS'DAQmxErrorInvalidGlobalChan'
p28155
S'(-200882)'
p28156
sS'DAQmxErrorSwitchDifferentTopologyWhenScanning'
p28157
S'(-200191)'
p28158
sS'DAQmxErrorPROMOnTEDSContainsBasicTEDSData'
p28159
S'(-200824)'
p28160
sS'DAQmx_Val_LargeRng2Ctr'
p28161
S'10205'
p28162
sS'DAQmxErrorMeasCalAdjustDirectPathOutputImpedance'
p28163
S'(-200507)'
p28164
sS'DAQmxErrorCantAllowConnectDACToGnd'
p28165
S'(-200669)'
p28166
sS'DAQmxErrorPALPhysicalBufferEmpty'
p28167
S'(-50408)'
p28168
sS'DAQmxErrorResourcesInUseForInversionInTask_Routing'
p28169
S'(-89135)'
p28170
sS'DAQmxErrorSampPerChanNotMultOfXferSize'
p28171
S'(-200837)'
p28172
sS'DAQmxErrorHandshakeEventOutputTermNotSupportedGivenTimingType'
p28173
S'(-200915)'
p28174
sS'DAQmxErrorSwitchScanlistTooBig'
p28175
S'(-200201)'
p28176
sS'DAQmxErrorPALTransferTimedOut'
p28177
S'(-50400)'
p28178
sS'DAQmxErrorSensorInvalidCompletionResistance'
p28179
S'(-200163)'
p28180
sS'DAQmxErrorTEDSSensorPhysicalChannelConflict'
p28181
S'(-201053)'
p28182
sS'DAQmxErrorPALBadMode'
p28183
S'(-50006)'
p28184
sS'DAQmxWarningWriteNotCompleteBeforeSampClk'
p28185
S'(209801)'
p28186
sS'DAQmxErrorNoForwardPolyScaleCoeffs'
p28187
S'(-200405)'
p28188
sS'DAQmxErrorPowerupTristateNotSpecdForEntirePort'
p28189
S'(-200653)'
p28190
sS'DAQmxErrorChannelSizeTooBigForPortReadType'
p28191
S'(-200466)'
p28192
sS'DAQmxErrorInvalidAIAttenuation'
p28193
S'(-200412)'
p28194
sS'DAQmxErrorDeviceShutDownDueToHighTemp'
p28195
S'(-200680)'
p28196
sS'DAQmxErrorBufferWithOnDemandSampTiming'
p28197
S'(-200217)'
p28198
sS'DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseSrc'
p28199
S'0x2216'
p28200
sS'DAQmxErrorChanSizeTooBigForU32PortRead'
p28201
S'(-200564)'
p28202
sS'DAQmx_AI_ChanCal_Desc'
p28203
S'0x22A4'
p28204
sS'DAQmxErrorCantSetPropertyTaskNotRunningCommitted'
p28205
S'(-200971)'
p28206
sS'DAQmx_CO_Pulse_Freq'
p28207
S'0x1178'
p28208
sS'DAQmxErrorDataNotAvailable'
p28209
S'(-200005)'
p28210
sS'DAQmx_SwitchChan_WireMode'
p28211
S'0x18E5'
p28212
sS'DAQmx_RealTime_WaitForNextSampClkWaitMode'
p28213
S'0x22EF'
p28214
sS'DAQmxWarningPALHardwareFault'
p28215
S'(50152)'
p28216
sS'DAQmx_Val_RightJustified'
p28217
S'10279'
p28218
sS'DAQmxErrorCouldNotDownloadFirmwareFileMissingOrDamaged'
p28219
S'(-200961)'
p28220
sS'DAQmxErrorCOWritePulseHighTimeOutOfRange'
p28221
S'(-200686)'
p28222
sS'DAQmxErrorWaveformNotInMem'
p28223
S'(-200312)'
p28224
sS'DAQmxErrorTaskNotInDataNeighborhood'
p28225
S'(-200485)'
p28226
sS'DAQmxErrorInterconnectBridgeRouteNotPossible'
p28227
S'(-54011)'
p28228
sS'DAQmx_CI_Timestamp_Units'
p28229
S'0x22B3'
p28230
sS'DAQmxErrorPropertyNotSupportedWhenRefClkSrcNone'
p28231
S'(-200581)'
p28232
sS'DAQmx_SwitchChan_Usage'
p28233
S'0x18E4'
p28234
sS'DAQmx_AI_Thrmstr_A'
p28235
S'0x18C9'
p28236
sS'DAQmx_AI_Thrmstr_B'
p28237
S'0x18CB'
p28238
sS'DAQmx_AI_Thrmstr_C'
p28239
S'0x18CA'
p28240
sS'DAQmx_Task_NumChans'
p28241
S'0x2181'
p28242
sS'DAQmxErrorAnalogTrigChanNotFirstInScanList'
p28243
S'(-200131)'
p28244
sS'DAQmx_Exported_HshkEvent_Pulse_Width'
p28245
S'0x22C1'
p28246
sS'DAQmx_Val_QuarterBridge'
p28247
S'10270'
p28248
sS'DAQmxErrorInvalidLineGrouping'
p28249
S'(-200528)'
p28250
sS'DAQmx_SampClk_Src'
p28251
S'0x1852'
p28252
sS'DAQmxErrorSampClkTimebaseDCMLock'
p28253
S'(-200237)'
p28254
sS'DAQmxErrorEveryNSampsEventAlreadyRegistered'
p28255
S'(-200881)'
p28256
sS'DAQmxWarningPALBadPointer'
p28257
S'(50004)'
p28258
sS'DAQmxErrorNegativeReadSampleNumber'
p28259
S'(-200277)'
p28260
sS'DAQmxErrorCannotReadWhenAutoStartFalseBufSizeZeroAndTaskNotRunning'
p28261
S'(-200834)'
p28262
sS'DAQmx_Val_Position_LVDT'
p28263
S'10352'
p28264
sS'DAQmxErrorChanCalTablePreScaledValsNotSpecd'
p28265
S'(-200936)'
p28266
sS'DAQmx_Val_FullBridgeI'
p28267
S'10183'
p28268
sS'DAQmxWarningPALOSUnsupported'
p28269
S'(50200)'
p28270
sS'DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseRate'
p28271
S'0x2212'
p28272
sS'DAQmxWarningPALResourceOwnedBySystem'
p28273
S'(50100)'
p28274
sS'DAQmxErrorScriptNotInMem'
p28275
S'(-200342)'
p28276
sS'DAQmxErrorPALHardwareFault'
p28277
S'(-50152)'
p28278
sS'DAQmxErrorPhysChanMeasType'
p28279
S'(-200431)'
p28280
sS'DAQmxWarningPALValueConflict'
p28281
S'(50000)'
p28282
sS'DAQmxErrorMarkerPositionOutsideSubsetInScript'
p28283
S'(-200034)'
p28284
sS'DAQmx_Val_PulseWidth'
p28285
S'10359'
p28286
sS'DAQmxErrorPLLLock'
p28287
S'(-200245)'
p28288
sS'DAQmx_Val_WaitForHandshakeTriggerAssert'
p28289
S'12550'
p28290
sS'DAQmxErrorSpecdDeviceIsAlreadyOnRTSIBus'
p28291
S'(-201029)'
p28292
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_64x1_Mux'
p28293
S'"2576/2-Wire 64x1 Mux"'
p28294
sS'DAQmxErrorInvalidRefClkSrc'
p28295
S'(-200415)'
p28296
sS'DAQmx_CO_Pulse_Term'
p28297
S'0x18E1'
p28298
sS'DAQmx_DO_DataXferReqCond'
p28299
S'0x2267'
p28300
sS'DAQmx_CI_Freq_DigFltr_TimebaseRate'
p28301
S'0x21EA'
p28302
sS'DAQmxErrorAcqStoppedToPreventIntermediateBufferOverflow'
p28303
S'(-200283)'
p28304
sS'DAQmxErrorWaitForNextSampClkNotSupported'
p28305
S'(-200863)'
p28306
sS'DAQmxErrorDeviceInfoFailedPXIChassisNotIdentified'
p28307
S'(-201059)'
p28308
sS'DAQmxErrorNoAnalogTrigHW'
p28309
S'(-200214)'
p28310
sS'DAQmx_AI_Lowpass_SwitchCap_ExtClkFreq'
p28311
S'0x1885'
p28312
sS'DAQmx_AI_Resistance_Units'
p28313
S'0x0955'
p28314
sS'DAQmxErrorWriteOffsetNotMultOfIncr'
p28315
S'(-200630)'
p28316
sS'DAQmx_Val_Seconds'
p28317
S'10364'
p28318
sS'DAQmxErrorClockMasterForExternalClockNotLongestPipeline'
p28319
S'(-201018)'
p28320
sS'DAQmx_PersistedScale_Author'
p28321
S'0x22D4'
p28322
sS'DAQmx_Dev_IsSimulated'
p28323
S'0x22CA'
p28324
sS'DAQmx_Exported_HshkEvent_Delay'
p28325
S'0x22BC'
p28326
sS'DAQmx_AnlgWin_PauseTrig_Coupling'
p28327
S'0x2237'
p28328
sS'DAQmx_AnlgWin_PauseTrig_Btm'
p28329
S'0x1375'
p28330
sS'DAQmx_Val_Switch_Topology_2585_1_Wire_10x1_Mux'
p28331
S'"2585/1-Wire 10x1 Mux"'
p28332
sS'DAQmxErrorPhysChanOutputType'
p28333
S'(-200432)'
p28334
sS'DAQmxWarningSampValCoercedToMin'
p28335
S'(200022)'
p28336
sS'DAQmxErrorNoReversePolyScaleCoeffs'
p28337
S'(-200406)'
p28338
sS'DAQmxErrorPALComponentAlreadyLoaded'
p28339
S'(-50260)'
p28340
sS'DAQmxErrorPhysChanNotInTask'
p28341
S'(-200649)'
p28342
sS'CVICDECL'
p28343
S'__cdecl'
p28344
sS'DAQmxErrorRefClkSrcNotSupported'
p28345
S'(-200903)'
p28346
sS'DAQmxErrorPALComponentInitializationFault'
p28347
S'(-50258)'
p28348
sS'DAQmx_Exported_HshkEvent_OutputBehavior'
p28349
S'0x22BB'
p28350
sS'DAQmx_Val_IRIGB'
p28351
S'10070'
p28352
sS'DAQmx_Val_Position_LinEncoder'
p28353
S'10361'
p28354
sS'DAQmxErrorNoPatternMatcherAvailable'
p28355
S'(-200382)'
p28356
sS'DAQmx_Read_WaitMode'
p28357
S'0x2232'
p28358
sS'DAQmxErrorResourcesInUseForRoute'
p28359
S'(-200369)'
p28360
sS'DAQmx_Val_Switch_Topology_1166_32_SPDT'
p28361
S'"1166/32-SPDT"'
p28362
sS'DAQmxErrorPALTransferInProgress'
p28363
S'(-50403)'
p28364
sS'DAQmx_CI_Max'
p28365
S'0x189C'
p28366
sS'DAQmxErrorExtCalDateTimeNotDAQmx'
p28367
S'(-200543)'
p28368
sS'DAQmxErrorLineNumIncompatibleWithVideoSignalFormat'
p28369
S'(-200424)'
p28370
sS'DAQmx_Exported_RdyForXferEvent_Lvl_ActiveLvl'
p28371
S'0x22B6'
p28372
sS'DAQmxErrorPALDeviceNotFound'
p28373
S'(-50300)'
p28374
sS'DAQmxErrorMStudioMultiplePhysChansNotSupported'
p28375
S'(-200792)'
p28376
sS'DAQmxErrorADCOverrun'
p28377
S'(-200019)'
p28378
sS'DAQmxErrorCounterTimebaseRateNotFound'
p28379
S'(-200142)'
p28380
sS'DAQmxErrorPALLogicalBufferFull'
p28381
S'(-50407)'
p28382
sS'DAQmx_CO_CtrTimebaseRate'
p28383
S'0x18C2'
p28384
sS'DAQmx_Val_MapRanges'
p28385
S'10448'
p28386
sS'DAQmx_Val_Switch_Topology_2593_Dual_8x1_Mux'
p28387
S'"2593/Dual 8x1 Mux"'
p28388
sS'DAQmx_CI_Encoder_AInputTerm'
p28389
S'0x219D'
p28390
sS'TRUE'
p28391
S'(1L)'
p28392
sS'DAQmxErrorExpectedNumberOfChannelsVerificationFailed'
p28393
S'(-200464)'
p28394
sS'DAQmxErrorInvalidSCCSlotNumberSpecd'
p28395
S'(-201079)'
p28396
sS'DAQmxErrorTrigLineNotFound'
p28397
S'(-200224)'
p28398
sS'DAQmx_SwitchDev_AutoConnAnlgBus'
p28399
S'0x17DA'
p28400
sS'DAQmxErrorExternalTimebaseRateNotknownForRate'
p28401
S'(-200132)'
p28402
sS'DAQmx_Val_CO'
p28403
S'10132'
p28404
sS'DAQmxErrorReadChanTypeMismatch'
p28405
S'(-200525)'
p28406
sS'DAQmx_Val_CI'
p28407
S'10131'
p28408
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_4x64_Matrix'
p28409
S'"2532/1-Wire Dual 4x64 Matrix"'
p28410
sS'DAQmx_CO_Pulse_DutyCyc'
p28411
S'0x1176'
p28412
sS'DAQmxErrorPALThreadCouldNotRun'
p28413
S'(-50600)'
p28414
sS'DAQmxErrorAddressAlreadyInUse'
p28415
S'(-201031)'
p28416
sS'DAQmxErrorCannotWriteAfterStartWithOnboardMemory'
p28417
S'(-200295)'
p28418
sS'DAQmx_Val_Radians'
p28419
S'10273'
p28420
sS'DAQmxErrorDrivePhaseShiftDCMBecameUnlocked'
p28421
S'(-200390)'
p28422
sS'DAQmxWarningPALLogicalBufferFull'
p28423
S'(50407)'
p28424
sS'DAQmx_DigEdge_ArmStartTrig_DigFltr_MinPulseWidth'
p28425
S'0x222E'
p28426
sS'DAQmxErrorTEDSSensorDataError'
p28427
S'(-200826)'
p28428
sS'DAQmx_Val_Switch_Topology_2584_1_Wire_15x1_Mux'
p28429
S'"2584/1-Wire 15x1 Mux"'
p28430
sS'DAQmxErrorSampleTimebaseDivisorNotSupportedGivenTimingType'
p28431
S'(-200916)'
p28432
sS'DAQmxErrorFewerThan2ScaledValues'
p28433
S'(-200433)'
p28434
sS'DAQmx_SampQuant_SampMode'
p28435
S'0x1300'
p28436
sS'DAQmxErrorResourcesInUseForExportSignalPolarity'
p28437
S'(-200367)'
p28438
sS'DAQmx_CI_CountEdges_Term'
p28439
S'0x18C7'
p28440
sS'DAQmxErrorProductTypeAndProductNumberConflict'
p28441
S'(-201041)'
p28442
sS'DAQmxErrorAnalogTrigChanNotExternal'
p28443
S'(-200711)'
p28444
sS'DAQmxErrorInvalidAIOffsetCalConst'
p28445
S'(-200717)'
p28446
sS'DAQmxErrorCouldNotReserveRequestedTrigLine'
p28447
S'(-200225)'
p28448
sS'DAQmxErrorTimingSrcDoesNotExist'
p28449
S'(-200738)'
p28450
sS'DAQmx_AI_ChanCal_Verif_AcqVals'
p28451
S'0x22A2'
p28452
sS'DAQmx_CI_CtrTimebase_DigFltr_TimebaseRate'
p28453
S'0x2274'
p28454
sS'DAQmx_Val_Switch_Topology_2595_4x1_Mux'
p28455
S'"2595/4x1 Mux"'
p28456
sS'DAQmx_Val_Switch_Topology_1193_32x1_Mux'
p28457
S'"1193/32x1 Mux"'
p28458
sS'DAQmxErrorSendAdvCmpltAfterWaitForTrigInScanlist'
p28459
S'(-200640)'
p28460
sS'DAQmxErrorInvalidTriggerLineInList'
p28461
S'(-200048)'
p28462
sS'DAQmx_CI_AngEncoder_Units'
p28463
S'0x18A6'
p28464
sS'DAQmxErrorLocalRemoteDriverVersionMismatch_Routing'
p28465
S'(-88716)'
p28466
sS'DAQmx_Val_ProgrammedIO'
p28467
S'10264'
p28468
sS'DAQmxErrorTableScaleScaledValsNotSpecd'
p28469
S'(-200348)'
p28470
sS'DAQmx_DI_InvertLines'
p28471
S'0x0793'
p28472
sS'DAQmxErrorLinesReservedForSCXIControl'
p28473
S'(-200159)'
p28474
sS'DAQmx_Exported_SampClk_OutputBehavior'
p28475
S'0x186B'
p28476
sS'DAQmx_Scale_Type'
p28477
S'0x1929'
p28478
sS'CVICALLBACK'
p28479
S'__cdecl'
p28480
sS'DAQmxErrorMStudioCppRemoveEventsBeforeStop'
p28481
S'(-200991)'
p28482
sS'DAQmxWarningPALTransferStopped'
p28483
S'(50404)'
p28484
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_Octal_8x1_Mux'
p28485
S'"2576/2-Wire Octal 8x1 Mux"'
p28486
sS'DAQmx_CO_OutputType'
p28487
S'0x18B5'
p28488
sS'DAQmx_CI_Encoder_BInput_DigFltr_MinPulseWidth'
p28489
S'0x2201'
p28490
sS'DAQmxErrorInvalidCalGain'
p28491
S'(-200749)'
p28492
sS'DAQmxErrorScriptHasInvalidIdentifier'
p28493
S'(-200024)'
p28494
sS'DAQmxErrorCfgTEDSNotSupportedOnRT'
p28495
S'(-200808)'
p28496
sS'DAQmxErrorPALDeviceUnknown'
p28497
S'(-50301)'
p28498
sS'DAQmxErrorInternalAIInputSrcInMultipleChanGroups'
p28499
S'(-200571)'
p28500
sS'DAQmxErrorAcqStoppedToPreventInputBufferOverwrite'
p28501
S'(-200222)'
p28502
sS'DAQmxErrorSpecdSlotAlreadyOccupied'
p28503
S'(-201033)'
p28504
sS'DAQmxErrorInvalidVoltageReadingDuringExtCal'
p28505
S'(-200446)'
p28506
sS'DAQmxErrorWaveformWriteOutOfBounds'
p28507
S'(-200311)'
p28508
sS'DAQmx_CI_CountEdges_DigSync_Enable'
p28509
S'0x21FA'
p28510
sS'DAQmxErrorInvalidRoutingDestinationTerminalName_Routing'
p28511
S'(-89121)'
p28512
sS'DAQmxWarningUserDefinedInfoTooLong'
p28513
S'(200025)'
p28514
sS'DAQmxErrorDuplicatedChannel'
p28515
S'(-200003)'
p28516
sS'DAQmxErrorTooManyInstructionsInLoopInScript'
p28517
S'(-201016)'
p28518
sS'DAQmx_Val_Pulse'
p28519
S'10265'
p28520
sS'DAQmx_CI_Encoder_BInput_DigFltr_TimebaseSrc'
p28521
S'0x2202'
p28522
sS'DAQmx_DI_DataXferMech'
p28523
S'0x2263'
p28524
sS'DAQmx_Read_ReadAllAvailSamp'
p28525
S'0x1215'
p28526
sS'DAQmxErrorDAQmxCantUseStringDueToUnknownChar'
p28527
S'(-200811)'
p28528
sS'DAQmxErrorOddTotalNumSampsToWrite'
p28529
S'(-200692)'
p28530
sS'DAQmxErrorSampTbRateSampTbSrcMismatch'
p28531
S'(-200308)'
p28532
sS'DAQmxErrorCIHWTimedSinglePointNotSupportedForMeasType'
p28533
S'(-200998)'
p28534
sS'DAQmxErrorInvalidChanName'
p28535
S'(-200461)'
p28536
sS'DAQmx_DO_NumLines'
p28537
S'0x2179'
p28538
sS'DAQmx_Val_TEDS_Sensor'
p28539
S'12531'
p28540
sS'DAQmxErrorCppCantRemoveEventHandlerTwice'
p28541
S'(-200589)'
p28542
sS'DAQmxErrorPALFileSeekFault'
p28543
S'(-50206)'
p28544
sS'DAQmx_Val_ALowBHigh'
p28545
S'10042'
p28546
sS'DAQmx_Task_Name'
p28547
S'0x1276'
p28548
sS'DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseRate'
p28549
S'0x222B'
p28550
sS'DAQmxErrorWriteFailedMultipleCOOutputTypes'
p28551
S'(-200829)'
p28552
sS'DAQmx_CI_Period_MeasTime'
p28553
S'0x192D'
p28554
sS'DAQmx_Exported_HshkEvent_Interlocked_AssertedLvl'
p28555
S'0x22BD'
p28556
sS'DAQmxErrorConnectionInScanlistMustWaitForTrig'
p28557
S'(-200636)'
p28558
sS'DAQmxErrorPALResourceInitialized'
p28559
S'(-50105)'
p28560
sS'DAQmxErrorPALBadToken'
p28561
S'(-50020)'
p28562
sS'DAQmxErrorCannotTristateBusyTerm_Routing'
p28563
S'(-89127)'
p28564
sS'DAQmx_DigEdge_ArmStartTrig_DigFltr_Enable'
p28565
S'0x222D'
p28566
sS'DAQmxErrorDevInUnidentifiedPXIChassis'
p28567
S'(-200862)'
p28568
sS'DAQmxErrorDDCClkOutDCMBecameUnlocked'
p28569
S'(-200244)'
p28570
sS'DAQmx_SwitchDev_NumRelays'
p28571
S'0x18E6'
p28572
sS'DAQmxErrorInvalidAttentuationBasedOnMinMax'
p28573
S'(-200321)'
p28574
sS'DAQmxErrorPALThreadStackSizeNotSupported'
p28575
S'(-50603)'
p28576
sS'DAQmxErrorCannotTristateTerm'
p28577
S'(-200253)'
p28578
sS'DAQmxWarningPALResourceReserved'
p28579
S'(50103)'
p28580
sS'DAQmxErrorChanNamesNotSpecdInCfgFile'
p28581
S'(-201083)'
p28582
sS'DAQmx_CI_TwoEdgeSep_Second_DigFltr_Enable'
p28583
S'0x2214'
p28584
sS'DAQmx_Scale_Map_ScaledMin'
p28585
S'0x1230'
p28586
sS'DAQmxErrorSampClkRateAndDivCombo'
p28587
S'(-200273)'
p28588
sS'DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunningOrCommitted'
p28589
S'(-200472)'
p28590
sS'DAQmxErrorChanVersionNew'
p28591
S'(-200469)'
p28592
sS'DAQmxWarningPALResourceBusy'
p28593
S'(50106)'
p28594
sS'FALSE'
p28595
S'(0L)'
p28596
sS'DAQmxErrorCounterInputPauseTriggerAndSampleClockInvalid'
p28597
S'(-200145)'
p28598
sS'DAQmxErrorInvalidAttributeName'
p28599
S'(-201086)'
p28600
sS'DAQmxErrorCannotHaveTimedLoopAndDAQmxSignalEventsInSameTask'
p28601
S'(-200948)'
p28602
sS'DAQmx_MasterTimebase_Rate'
p28603
S'0x1495'
p28604
sS'DAQmx_Val_WriteToEEPROM'
p28605
S'12538'
p28606
sS'DAQmx_Val_Pt3851'
p28607
S'10071'
p28608
sS'DAQmxErrorInvalidLocalChanName'
p28609
S'(-201069)'
p28610
sS'DAQmx_AI_ACExcit_Freq'
p28611
S'0x0101'
p28612
sS'DAQmxErrorClkDoublerDCMBecameUnlocked'
p28613
S'(-200242)'
p28614
sS'DAQmxErrorDeviceIsNotAValidSwitch'
p28615
S'(-200069)'
p28616
sS'DAQmxErrorInvalidSectionIdentifier'
p28617
S'(-201078)'
p28618
sS'DAQmx_Read_OverWrite'
p28619
S'0x1211'
p28620
sS'DAQmxErrorTimingSrcTaskStartedBeforeTimedLoop'
p28621
S'(-200740)'
p28622
sS'DAQmxErrorDLLBecameUnlocked'
p28623
S'(-200551)'
p28624
sS'DAQmx_PhysicalChanName'
p28625
S'0x18F5'
p28626
sS'DAQmx_Val_Switch_Topology_2532_2_Wire_16x16_Matrix'
p28627
S'"2532/2-Wire 16x16 Matrix"'
p28628
sS'DAQmxErrorStreamDCMBecameUnlocked'
p28629
S'(-200314)'
p28630
sS'DAQmxErrorDifferentRawDataCompression'
p28631
S'(-200959)'
p28632
sS'DAQmx_Val_StartTrigger'
p28633
S'12491'
p28634
sS'DAQmx_AnlgWin_PauseTrig_Src'
p28635
S'0x1373'
p28636
sS'DAQmx_Val_S_Type_TC'
p28637
S'10085'
p28638
sS'DAQmxErrorMeasCalAdjustDirectPathGain'
p28639
S'(-200505)'
p28640
sS'DAQmxErrorProductOfAOMinAndGainTooSmall'
p28641
S'(-200271)'
p28642
sS'DAQmxErrorChanCalExpirationDateNotSet'
p28643
S'(-200933)'
p28644
sS'DAQmxErrorExternalSampClkAndRefClkThruSameTerm'
p28645
S'(-200276)'
p28646
sS'DAQmxErrorPortConfiguredForStaticDigitalOps'
p28647
S'(-200119)'
p28648
sS'DAQmx_Val_R_Type_TC'
p28649
S'10082'
p28650
sS'DAQmx_Read_OverloadedChansExist'
p28651
S'0x2174'
p28652
sS'DAQmxErrorRepeatLoopNestingTooDeepInScript'
p28653
S'(-200035)'
p28654
sS'DAQmxErrorOutputCantStartChangedRegenerationMode'
p28655
S'(-200568)'
p28656
sS'DAQmxErrorInvalidNumSampsToWrite'
p28657
S'(-200622)'
p28658
sS'DAQmxErrorRecordNotAvailable'
p28659
S'(-200007)'
p28660
sS'_NI_uInt8_DEFINED_'
p28661
S''
p28662
sS'DAQmx_Scale_Map_PreScaledMax'
p28663
S'0x1231'
p28664
sS'DAQmxErrorCantSaveChanWithoutReplace'
p28665
S'(-200483)'
p28666
sS'DAQmxErrorPALBadReadCount'
p28667
S'(-50011)'
p28668
sS'DAQmx_CI_Period_DigFltr_MinPulseWidth'
p28669
S'0x21ED'
p28670
sS'DAQmx_Val_Switch_Topology_1127_Independent'
p28671
S'"1127/Independent"'
p28672
sS'DAQmxErrorInputBoardClkDCMBecameUnlocked'
p28673
S'(-200387)'
p28674
sS'DAQmxErrorHiddenChanMissingInChansPropertyInCfgFile'
p28675
S'(-201084)'
p28676
sS'DAQmx_PersistedScale_AllowInteractiveEditing'
p28677
S'0x22D5'
p28678
sS'DAQmxErrorCannotConnectSrcChans'
p28679
S'(-200188)'
p28680
sS'DAQmx_Val_CurrWritePos'
p28681
S'10430'
p28682
sS'DAQmx_Val_WaitInfinitely'
p28683
S'-1.0'
p28684
sS'DAQmxErrorSelfCalTemperatureNotDAQmx'
p28685
S'(-200542)'
p28686
sS'DAQmxErrorInvalidSectionName'
p28687
S'(-201077)'
p28688
sS'DAQmxErrorChanIndexInvalid'
p28689
S'(-200606)'
p28690
sS'DAQmx_Val_ActiveHigh'
p28691
S'10095'
p28692
sS'DAQmxErrorWatchdogExpirationTristateNotSpecdForEntirePort'
p28693
S'(-200654)'
p28694
sS'DAQmx_AI_ACExcit_WireMode'
p28695
S'0x18CD'
p28696
sS'DAQmxErrorMeasCalAdjustCalADC'
p28697
S'(-200509)'
p28698
sS'DAQmxErrorStrobePhaseShiftDCMBecameUnlocked'
p28699
S'(-200391)'
p28700
sS'DAQmx_DigLvl_PauseTrig_When'
p28701
S'0x1380'
p28702
sS'DAQmx_CI_Encoder_BInput_DigFltr_Enable'
p28703
S'0x2200'
p28704
sS'DAQmx_Val_AIConvertClock'
p28705
S'12484'
p28706
sS'DAQmx_Read_OverloadedChans'
p28707
S'0x2175'
p28708
sS'DAQmxErrorCollectionDoesNotMatchChanType'
p28709
S'(-200569)'
p28710
sS'DAQmxErrorInvalidRoutingSourceTerminalName_Routing'
p28711
S'(-89120)'
p28712
sS'DAQmx_SyncPulse_SyncTime'
p28713
S'0x223E'
p28714
sS'DAQmxErrorActiveChanTooManyLinesSpecdWhenGettingPrpty'
p28715
S'(-200643)'
p28716
sS'DAQmxErrorReferenceVoltageInvalid'
p28717
S'(-200153)'
p28718
sS'DAQmx_ChanIsGlobal'
p28719
S'0x2304'
p28720
sS'DAQmxErrorWriteFailedBecauseWatchdogExpired'
p28721
S'(-200678)'
p28722
sS'DAQmx_Scale_Lin_Slope'
p28723
S'0x1227'
p28724
sS'DAQmx_Val_OverwriteUnreadSamps'
p28725
S'10252'
p28726
sS'DAQmxErrorCalTempNotSupported'
p28727
S'(-200338)'
p28728
sS'DAQmxErrorUnsupportedTrigTypeSendsSWTrig'
p28729
S'(-200373)'
p28730
sS'DAQmxErrorInvalidLoopIterationsInScript'
p28731
S'(-200036)'
p28732
sS'DAQmxErrorSelfCalConstsInvalid'
p28733
S'(-200549)'
p28734
sS'DAQmxWarningTimestampCounterRolledOver'
p28735
S'(200003)'
p28736
sS'DAQmxErrorInversionNotSupportedByHW'
p28737
S'(-200363)'
p28738
sS'DAQmxErrorSCXISerialCommunication'
p28739
S'(-200015)'
p28740
sS'DAQmx_Val_Yield'
p28741
S'12525'
p28742
sS'DAQmxErrorCabledModuleCannotRouteSSH'
p28743
S'(-200320)'
p28744
sS'___nidaqmx_h___'
p28745
g28662
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_Quad_32x1_Mux'
p28746
S'"2530/1-Wire Quad 32x1 Mux"'
p28747
sS'DAQmxErrorNoInputOnPortCfgdForWatchdogOutput'
p28748
S'(-200666)'
p28749
sS'DAQmxErrorSampClkTimingTypeWhenTristateIsFalse'
p28750
S'(-200839)'
p28751
sS'DAQmxErrorInvalidSignalTypeExportSignal'
p28752
S'(-200374)'
p28753
sS'DAQmxErrorOneChanReadForMultiChanTask'
p28754
S'(-200523)'
p28755
sS'DAQmxErrorNoAcqStarted'
p28756
S'(-200286)'
p28757
sS'DAQmxErrorDuplicatePropertyInObject'
p28758
S'(-201055)'
p28759
sS'DAQmx_Val_PathStatus_ChannelReservedForRouting'
p28760
S'10436'
p28761
sS'DAQmx_Val_DoNotInvertPolarity'
p28762
S'0'
p28763
sS'DAQmxErrorInvalidSwitchChan'
p28764
S'(-200181)'
p28765
sS'DAQmxErrorSampleValueOutOfRange'
p28766
S'(-200490)'
p28767
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_128x1_Mux'
p28768
S'"2530/1-Wire 128x1 Mux"'
p28769
sS'DAQmx_Val_Ohms'
p28770
S'10384'
p28771
sS'DAQmxErrorActiveChanNotSpecdWhenGetting1LinePrpty'
p28772
S'(-200642)'
p28773
sS'DAQmxErrorDigFilterIntervalAlreadyCfgd'
p28774
S'(-200645)'
p28775
sS'DAQmx_Val_Switch_Topology_1128_Independent'
p28776
S'"1128/Independent"'
p28777
sS'DAQmxErrorMultipleDevIDsPerChassisSpecifiedInList'
p28778
S'(-200210)'
p28779
sS'DAQmxErrorWriteNoOutputChansInTask'
p28780
S'(-200459)'
p28781
sS'DAQmxErrorUnexpectedIDFollowingSwitchChanName'
p28782
S'(-200532)'
p28783
sS'DAQmxErrorSessionCorruptedByDLLReload'
p28784
S'(-201095)'
p28785
sS'DAQmxWarningPossiblyInvalidCTRSampsInFiniteDMAAcq'
p28786
S'(200028)'
p28787
sS'DAQmx_Val_Pulse_Time'
p28788
S'10269'
p28789
sS'DAQmx_Dev_ProductType'
p28790
S'0x0631'
p28791
sS'DAQmxErrorTEDSMultipleCalTemplatesNotSupported'
p28792
S'(-200755)'
p28793
sS'DAQmx_SampClk_DigFltr_TimebaseRate'
p28794
S'0x2221'
p28795
sS'DAQmxErrorDigFilterEnabledMinPulseWidthNotCfg'
p28796
S'(-200771)'
p28797
sS'DAQmx_Val_20MHzTimebase'
p28798
S'12537'
p28799
sS'DAQmx_AI_DataXferMech'
p28800
S'0x1821'
p28801
sS'DAQmxWarningPALPhysicalBufferFull'
p28802
S'(50409)'
p28803
sS'DAQmx_Write_NumChans'
p28804
S'0x217E'
p28805
sS'DAQmx_Val_DC'
p28806
S'10050'
p28807
sS'DAQmx_Val_DI'
p28808
S'10151'
p28809
sS'DAQmx_Val_FromTEDS'
p28810
S'12516'
p28811
sS'DAQmx_AI_Freq_ThreshVoltage'
p28812
S'0x0815'
p28813
sS'DAQmx_AI_InputSrc'
p28814
S'0x2198'
p28815
sS'DAQmx_Val_DO'
p28816
S'10153'
p28817
sS'DAQmxErrorSampRateTooLow'
p28818
S'(-200331)'
p28819
sS'DAQmxErrorPFI0UsedForAnalogAndDigitalSrc'
p28820
S'(-200330)'
p28821
sS'DAQmxErrorBufferedOperationsNotSupportedOnSelectedLines'
p28822
S'(-201062)'
p28823
sS'DAQmx_CI_Encoder_DecodingType'
p28824
S'0x21E6'
p28825
sS'DAQmxErrorInvalidTimeoutVal'
p28826
S'(-200453)'
p28827
sS'DAQmxErrorMeasuredBridgeOffsetTooHigh'
p28828
S'(-200788)'
p28829
sS'DAQmxErrorInvalidNumberInRepeatStatementInList'
p28830
S'(-200049)'
p28831
sS'DAQmxErrorMStudioNoForwardPolyScaleCoeffs'
p28832
S'(-200783)'
p28833
sS'DAQmxErrorValueNotInSet'
p28834
S'(-54022)'
p28835
sS'DAQmx_Val_Switch_Topology_2564_16_SPST'
p28836
S'"2564/16-SPST"'
p28837
sS'DAQmx_RealTime_WriteRecoveryMode'
p28838
S'0x231A'
p28839
sS'DAQmxErrorPALPhysicalBufferFull'
p28840
S'(-50409)'
p28841
sS'DAQmxWarningInvalidCalConstValueForAO'
p28842
S'(200042)'
p28843
sS'DAQmxErrorPropertyNotSupportedNotInputTask'
p28844
S'(-200457)'
p28845
sS'DAQmxWarningInvalidCalConstValueForAI'
p28846
S'(200041)'
p28847
sS'DAQmxErrorPropertyValNotSupportedByHW'
p28848
S'(-200355)'
p28849
sS'DAQmx_AI_Resolution'
p28850
S'0x1765'
p28851
sS'DAQmxErrorInvalidSCCModuleForSlotSpecd'
p28852
S'(-201080)'
p28853
sS'DAQmxErrorInvalidChannelNameInList'
p28854
S'(-200050)'
p28855
sS'DAQmx_Val_InvertPolarity'
p28856
S'1'
p28857
sS'DAQmxErrorDifferentPrptyValsNotSupportedOnDev'
p28858
S'(-200629)'
p28859
sS'DAQmx_CI_Freq_Units'
p28860
S'0x18A1'
p28861
sS'DAQmxErrorInvalidDeviceIDInList'
p28862
S'(-200207)'
p28863
sS'DAQmxErrorIncorrectReadFunction'
p28864
S'(-200100)'
p28865
sS'DAQmxWarningPALBadCount'
p28866
S'(50008)'
p28867
sS'DAQmxErrorPROMOnTEDSAlreadyWritten'
p28868
S'(-200823)'
p28869
sS'DAQmxErrorPALThreadAlreadyDead'
p28870
S'(-50604)'
p28871
sS'DAQmx_AI_RTD_Type'
p28872
S'0x1032'
p28873
sS'DAQmxErrorWfmNameSameAsScriptName'
p28874
S'(-200634)'
p28875
sS'DAQmx_Val_Position_RVDT'
p28876
S'10353'
p28877
sS'DAQmx_Exported_ChangeDetectEvent_OutputTerm'
p28878
S'0x2197'
p28879
sS'DAQmx_Val_AnlgWin'
p28880
S'10103'
p28881
sS'DAQmx_Val_PatternDoesNotMatch'
p28882
S'10253'
p28883
sS'DAQmxErrorInvalidTEDSPhysChanNotAI'
p28884
S'(-200969)'
p28885
sS'DAQmx_Val_HWTimedSinglePoint'
p28886
S'12522'
p28887
sS'DAQmxErrorOperationNotPermittedWhileScanning'
p28888
S'(-200176)'
p28889
sS'DAQmx_Val_AIHoldCmpltEvent'
p28890
S'12493'
p28891
sS'DAQmxErrorAIMinTooLarge'
p28892
S'(-200577)'
p28893
sS'DAQmxErrorSampClkRateMustBeSpecd'
p28894
S'(-201087)'
p28895
sS'DAQmx_DigPattern_StartTrig_When'
p28896
S'0x1411'
p28897
sS'DAQmxErrorRoutingHardwareBusy_Routing'
p28898
S'(-89123)'
p28899
sS'DAQmxWarningSampClkRateTooLow'
p28900
S'(200027)'
p28901
sS'DAQmx_AO_Voltage_Units'
p28902
S'0x1184'
p28903
sS'DAQmx_Val_Switch_Topology_2530_4_Wire_32x1_Mux'
p28904
S'"2530/4-Wire 32x1 Mux"'
p28905
sS'DAQmxErrorLabVIEWEmptyTaskOrChans'
p28906
S'(-200429)'
p28907
sS'DAQmxErrorExportTwoSignalsOnSameTerminal'
p28908
S'(-200607)'
p28909
sS'DAQmx_SampClk_Timebase_Src'
p28910
S'0x1308'
p28911
sS'DAQmx_Val_Switch_Topology_2527_4_Wire_16x1_Mux'
p28912
S'"2527/4-Wire 16x1 Mux"'
p28913
sS'DAQmxErrorCabledModuleNotCapableOfRoutingAI'
p28914
S'(-200151)'
p28915
sS'DAQmx_SampClk_ActiveEdge'
p28916
S'0x1301'
p28917
sS'DAQmxErrorRoutingSrcTermPXIStarInSlot2'
p28918
S'(-200700)'
p28919
sS'DAQmxWarningPropertyVersionNew'
p28920
S'(200024)'
p28921
sS'DAQmxErrorMaxSoundPressureMicSensitivitRelatedAIPropertiesNotSupportedByDev'
p28922
S'(-200861)'
p28923
sS'DAQmxErrorInvalidAOOffsetCalConst'
p28924
S'(-200719)'
p28925
sS'DAQmx_PhysicalChan_TEDS_SerialNum'
p28926
S'0x21DC'
p28927
sS'DAQmx_Val_Switch_Topology_1130_2_Wire_128x1_Mux'
p28928
S'"1130/2-Wire 128x1 Mux"'
p28929
sS'DAQmx_Buf_Input_OnbrdBufSize'
p28930
S'0x230A'
p28931
sS'DAQmx_Val_External'
p28932
S'10167'
p28933
sS'DAQmx_CI_Period_StartingEdge'
p28934
S'0x0852'
p28935
sS'DAQmxErrorResourcesInUseForRouteInTask_Routing'
p28936
S'(-89138)'
p28937
sS'DAQmxErrorPhysicalChannelNotSpecified'
p28938
S'(-200099)'
p28939
sS'DAQmxErrorWriteDataTypeTooSmall'
p28940
S'(-200790)'
p28941
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_Dual_32x1_Mux'
p28942
S'"2576/2-Wire Dual 32x1 Mux"'
p28943
sS'DAQmxErrorAOMinMaxNotInGainRange'
p28944
S'(-200760)'
p28945
sS'DAQmxErrorEmptyStringTermNameNotSupported'
p28946
S'(-200797)'
p28947
sS'DAQmxErrorIfElseBlockNotAllowedInFiniteRepeatLoopInScript'
p28948
S'(-201014)'
p28949
sS'DAQmxErrorWriteWhenTaskNotRunningCOTime'
p28950
S'(-200874)'
p28951
sS'DAQmx_ReadWaitMode'
p28952
S'0x2232'
p28953
sS'DAQmx_Sys_Scales'
p28954
S'0x1266'
p28955
sS'DAQmxErrorPALTransferStopped'
p28956
S'(-50404)'
p28957
sS'DAQmx_AnlgLvl_PauseTrig_When'
p28958
S'0x1371'
p28959
sS'DAQmx_Val_BurstHandshake'
p28960
S'12548'
p28961
sS'_NI_int8_DEFINED_'
p28962
g28662
sS'DAQmx_CI_Encoder_AInput_DigFltr_MinPulseWidth'
p28963
S'0x21FC'
p28964
sS'DAQmxErrorDSFStopClock'
p28965
S'(-200632)'
p28966
sS'DAQmxErrorDevAbsentOrUnavailable_Routing'
p28967
S'(-89130)'
p28968
sS'DAQmx_Read_NumChans'
p28969
S'0x217B'
p28970
sS'DAQmx_Val_Switch_Topology_1192_8_SPDT'
p28971
S'"1192/8-SPDT"'
p28972
sS'DAQmx_Val_Software'
p28973
S'10292'
p28974
sS'DAQmx_DigEdge_StartTrig_DigFltr_TimebaseRate'
p28975
S'0x2226'
p28976
sS'DAQmxErrorInvalidEscapeCharacterInString'
p28977
S'(-201068)'
p28978
sS'DAQmxErrorCOWriteFreqOutOfRange'
p28979
S'(-200685)'
p28980
sS'DAQmxErrorWriteToTEDSNotSupportedOnRT'
p28981
S'(-200828)'
p28982
sS'DAQmxErrorAutoStartReadNotAllowedEventRegistered'
p28983
S'(-200984)'
p28984
sS'DAQmx_Val_Linear'
p28985
S'10447'
p28986
sS'DAQmx_CI_Period_Units'
p28987
S'0x18A3'
p28988
sS'DAQmxErrorPALComponentNeverLoaded'
p28989
S'(-50261)'
p28990
sS'DAQmx_Dev_CO_PhysicalChans'
p28991
S'0x2325'
p28992
sS'DAQmx_AI_Lowpass_CutoffFreq'
p28993
S'0x1803'
p28994
sS'DAQmx_Val_CurrReadPos'
p28995
S'10425'
p28996
sS'DAQmx_CI_Period_Term'
p28997
S'0x18A4'
p28998
sS'DAQmx_AO_DevScalingCoeff'
p28999
S'0x1931'
p29000
sS'DAQmxErrorIncapableSCCDigitizingDeviceSpecd'
p29001
S'(-201049)'
p29002
sS'DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove_Routing'
p29003
S'(-89145)'
p29004
sS'DAQmx_CI_PulseWidth_DigFltr_TimebaseSrc'
p29005
S'0x220C'
p29006
sS'DAQmx_Val_Switch_Topology_2530_2_Wire_Quad_16x1_Mux'
p29007
S'"2530/2-Wire Quad 16x1 Mux"'
p29008
sS'DAQmx_Val_Switch_Topology_1128_1_Wire_64x1_Mux'
p29009
S'"1128/1-Wire 64x1 Mux"'
p29010
sS'DAQmxErrorAIMaxNotSpecified'
p29011
S'(-200695)'
p29012
sS'DAQmxErrorNoSyncPulseAnotherTaskRunning'
p29013
S'(-200761)'
p29014
sS'DAQmx_SwitchChan_MaxDCCarryPwr'
p29015
S'0x0643'
p29016
sS'DAQmxErrorRequestedSignalInversionForRoutingNotPossible_Routing'
p29017
S'(-89122)'
p29018
sS'DAQmxErrorInvalidSubsetLengthBeforeIfElseBlockInScript'
p29019
S'(-201009)'
p29020
sS'DAQmx_AI_Rng_Low'
p29021
S'0x1816'
p29022
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_16x16_Matrix'
p29023
S'"1129/2-Wire 16x16 Matrix"'
p29024
sS'DAQmx_CI_Count'
p29025
S'0x0148'
p29026
sS'DAQmx_Val_NoBridge'
p29027
S'10228'
p29028
sS'DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseSrc'
p29029
S'0x2211'
p29030
sS'DAQmx_Val_Save_Overwrite'
p29031
S'(1<<0)'
p29032
sS'DAQmx_Val_USBbulk'
p29033
S'12590'
p29034
sS'DAQmx_AnlgEdge_StartTrig_Slope'
p29035
S'0x1397'
p29036
sS'DAQmxErrorEveryNSampsAcqIntoBufferNotForOutput'
p29037
S'(-200964)'
p29038
sS'DAQmx_Val_Switch_Topology_1193_Quad_4x1_Terminated_Mux'
p29039
S'"1193/Quad 4x1 Terminated Mux"'
p29040
sS'DAQmxErrorCouldNotReserveLinesForSCXIControl'
p29041
S'(-200158)'
p29042
sS'DAQmx_Exported_CtrOutEvent_OutputTerm'
p29043
S'0x1717'
p29044
sS'DAQmx_Exported_SyncPulseEvent_OutputTerm'
p29045
S'0x223C'
p29046
sS'DAQmxErrorRangeSyntaxNumberTooBig'
p29047
S'(-200605)'
p29048
sS'DAQmx_AI_Excit_VoltageOrCurrent'
p29049
S'0x17F6'
p29050
sS'DAQmx_Val_USB'
p29051
S'12586'
p29052
sS'DAQmx_DigEdge_RefTrig_Src'
p29053
S'0x1434'
p29054
sS'DAQmxErrorCantGetPropertyTaskNotRunning'
p29055
S'(-200973)'
p29056
sS'DAQmxErrorCannotSelfCalDuringExtCal'
p29057
S'(-200522)'
p29058
sS'DAQmxErrorPropertyConflictsWithScale'
p29059
S'(-201061)'
p29060
sS'DAQmxErrorInvalidIdentifierInListFollowingDeviceID'
p29061
S'(-200047)'
p29062
sS'DAQmxErrorPALTransferOverwritten'
p29063
S'(-50410)'
p29064
sS'DAQmx_AO_Max'
p29065
S'0x1186'
p29066
sS'DAQmx_DigLvl_PauseTrig_DigFltr_Enable'
p29067
S'0x2228'
p29068
sS'DAQmxErrorCalibrationFailed'
p29069
S'(-200157)'
p29070
sS'DAQmxErrorInvalidAOChanOrder'
p29071
S'(-200219)'
p29072
sS'DAQmxErrorInvalidCalLowPassCutoffFreq'
p29073
S'(-200857)'
p29074
sS'DAQmxErrorInvalidGainBasedOnMinMax'
p29075
S'(-200258)'
p29076
sS'DAQmxErrorInvalidAIChanOrder'
p29077
S'(-200618)'
p29078
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_4x6_Matrix'
p29079
S'"2501/2-Wire 4x6 Matrix"'
p29080
sS'DAQmx_Val_RisingSlope'
p29081
S'10280'
p29082
sS'DAQmxErrorPALComponentCircularDependency'
p29083
S'(-50259)'
p29084
sS'DAQmxErrorDigFilterIntervalNotEqualForLines'
p29085
S'(-200646)'
p29086
sS'DAQmx_DO_InvertLines'
p29087
S'0x1133'
p29088
sS'DAQmxErrorMultipleActivePhysChansNotSupported'
p29089
S'(-200752)'
p29090
sS'DAQmxErrorInvalidRangeOfObjectsSyntaxInString'
p29091
S'(-200498)'
p29092
sS'DAQmxWarningCOPrevDAQmxWriteSettingsOverwrittenForHWTimedSinglePoint'
p29093
S'(200037)'
p29094
sS'DAQmxErrorNoPathToDisconnect'
p29095
S'(-200182)'
p29096
sS'DAQmxErrorEEPROMDataInvalid'
p29097
S'(-200152)'
p29098
sS'DAQmx_Val_Switch_Topology_1191_Quad_4x1_Mux'
p29099
S'"1191/Quad 4x1 Mux"'
p29100
sS'DAQmx_Dev_PXI_SlotNum'
p29101
S'0x232A'
p29102
sS'DAQmx_AO_DAC_Offset_ExtSrc'
p29103
S'0x2254'
p29104
sS'DAQmx_Val_Temp_RTD'
p29105
S'10301'
p29106
sS'DAQmx_AnlgWin_PauseTrig_When'
p29107
S'0x1374'
p29108
sS'DAQmxErrorAIMinTooSmall'
p29109
S'(-200578)'
p29110
sS'DAQmx_AIConv_Timebase_Src'
p29111
S'0x1339'
p29112
sS'DAQmxErrorInvalidWaveformLengthBeforeIfElseBlockInScript'
p29113
S'(-201008)'
p29114
sS'DAQmx_AI_Thrmstr_R1'
p29115
S'0x1061'
p29116
sS'DAQmx_Val_ActiveLow'
p29117
S'10096'
p29118
sS'DAQmx_SampQuant_SampPerChan'
p29119
S'0x1310'
p29120
sS'DAQmx_Val_Task_Abort'
p29121
S'6'
p29122
sS'DAQmx_AI_MeasType'
p29123
S'0x0695'
p29124
sS'DAQmxErrorInvalidExtClockFreqAndDivCombo'
p29125
S'(-200379)'
p29126
sS'DAQmxErrorFREQOUTCannotProduceDesiredFrequency'
p29127
S'(-200148)'
p29128
sS'DAQmxErrorNoRegenWhenUsingBrdMem'
p29129
S'(-200656)'
p29130
sS'DAQmx_Val_Switch_Topology_1130_4_Wire_64x1_Mux'
p29131
S'"1130/4-Wire 64x1 Mux"'
p29132
sS'DAQmxErrorWaitUntilDoneDoesNotIndicateDone'
p29133
S'(-200560)'
p29134
sS'DAQmxErrorTEDSIncompatibleSensorAndMeasType'
p29135
S'(-200756)'
p29136
sS'DAQmx_Val_Switch_Topology_2599_2_SPDT'
p29137
S'"2599/2-SPDT"'
p29138
sS'DAQmx_RealTime_NumOfWarmupIters'
p29139
S'0x22ED'
p29140
sS'DAQmx_AI_RawDataCompressionType'
p29141
S'0x22D8'
p29142
sS'DAQmx_AI_SoundPressure_Units'
p29143
S'0x1528'
p29144
sS'_NI_uInt16_DEFINED_'
p29145
g28662
sS'DAQmxWarningInputTerminationOverloaded'
p29146
S'(200004)'
p29147
sS'DAQmx_Val_DegC'
p29148
S'10143'
p29149
sS'DAQmxErrorEmptyPhysChanInPowerUpStatesArray'
p29150
S'(-200626)'
p29151
sS'DAQmx_Val_DegF'
p29152
S'10144'
p29153
sS'DAQmxErrorSampRateTooHigh'
p29154
S'(-200332)'
p29155
sS'DAQmx_Val_DegR'
p29156
S'10145'
p29157
sS'DAQmx_Val_Internal'
p29158
S'10200'
p29159
sS'DAQmx_CI_TwoEdgeSep_Units'
p29160
S'0x18AC'
p29161
sS'DAQmx_SwitchScan_BreakMode'
p29162
S'0x1247'
p29163
sS'DAQmxErrorHWTimedSinglePointAOAndDataXferNotProgIO'
p29164
S'(-200769)'
p29165
sS'DAQmxErrorPALRetryLimitExceeded'
p29166
S'(-50412)'
p29167
sS'DAQmxErrorDACRngLowNotMinusRefValNorZero'
p29168
S'(-200449)'
p29169
sS'DAQmxErrorMasterTbRateMasterTbSrcMismatch'
p29170
S'(-200307)'
p29171
sS'DAQmx_Write_SpaceAvail'
p29172
S'0x1460'
p29173
sS'DAQmx_SwitchChan_MaxACSwitchCurrent'
p29174
S'0x0646'
p29175
sS'DAQmx_Val_Strain_Gage'
p29176
S'10300'
p29177
sS'DAQmxErrorCannotCreateChannelAfterTaskVerified'
p29178
S'(-200160)'
p29179
sS'DAQmx_Val_E_Type_TC'
p29180
S'10055'
p29181
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_4x32_Matrix'
p29182
S'"2530/1-Wire 4x32 Matrix"'
p29183
sS'DAQmx_Val_T_Type_TC'
p29184
S'10086'
p29185
sS'DAQmx_AI_Impedance'
p29186
S'0x0062'
p29187
sS'DAQmx_SwitchDev_SwitchChanList'
p29188
S'0x18E7'
p29189
sS'DAQmx_Val_MostRecentSamp'
p29190
S'10428'
p29191
sS'DAQmxErrorInvalidSampAndMasterTimebaseRateCombo'
p29192
S'(-200173)'
p29193
sS'DAQmxErrorFinitePulseTrainNotPossible'
p29194
S'(-200305)'
p29195
sS'DAQmxErrorExpectedConnectOperatorInList'
p29196
S'(-200062)'
p29197
sS'DAQmx_Read_AvailSampPerChan'
p29198
S'0x1223'
p29199
sS'DAQmxErrorInvalidCalConstCalADCAdjustment'
p29200
S'(-200520)'
p29201
sS'DAQmxErrorInvalidSampRateConsiderRIS'
p29202
S'(-200420)'
p29203
sS'DAQmx_Val_Switch_Topology_2566_16_SPDT'
p29204
S'"2566/16-SPDT"'
p29205
sS'DAQmxErrorIncapableTEDSInterfaceControllingDeviceSpecd'
p29206
S'(-201051)'
p29207
sS'DAQmx_Val_Switch_Topology_1130_4_Wire_Quad_16x1_Mux'
p29208
S'"1130/4-Wire Quad 16x1 Mux"'
p29209
sS'DAQmx_ChangeDetect_DI_RisingEdgePhysicalChans'
p29210
S'0x2195'
p29211
sS'DAQmx_Dev_SerialNum'
p29212
S'0x0632'
p29213
sS'DAQmx_AnlgEdge_StartTrig_Hyst'
p29214
S'0x1395'
p29215
sS'DAQmx_Val_AHighBHigh'
p29216
S'10040'
p29217
sS'DAQmxErrorGlobalTaskNameAlreadyChanName'
p29218
S'(-200919)'
p29219
sS'DAQmxErrorTableScalePreScaledValsNotSpecd'
p29220
S'(-200349)'
p29221
sS'DAQmxErrorPALBadReadOffset'
p29222
S'(-50010)'
p29223
sS'DAQmxErrorZeroBasedChanIndexInvalid'
p29224
S'(-200612)'
p29225
sS'DAQmxErrorNonBufferedAOAndDataXferNotProgIO'
p29226
S'(-200768)'
p29227
sS'DAQmx_AI_ACExcit_SyncEnable'
p29228
S'0x0102'
p29229
sS'DAQmxErrorNoChansOfGivenTypeInTask'
p29230
S'(-200611)'
p29231
sS'DAQmxErrorChanNotInTask'
p29232
S'(-200486)'
p29233
sS'DAQmxErrorDuplicateDeviceIDInListWhenSettling'
p29234
S'(-200057)'
p29235
sS'DAQmx_Val_OpenCollector'
p29236
S'12574'
p29237
sS'DAQmxErrorSelfCalDateTimeNotDAQmx'
p29238
S'(-200541)'
p29239
sS'__CFUNCPTRVAR'
p29240
S'__cdecl'
p29241
sS'DAQmx_Val_Switch_Topology_2530_2_Wire_Dual_32x1_Mux'
p29242
S'"2530/2-Wire Dual 32x1 Mux"'
p29243
sS'DAQmx_CI_Freq_DigFltr_TimebaseSrc'
p29244
S'0x21E9'
p29245
sS'DAQmxErrorNoSyncPulseExtSampClkTimebase'
p29246
S'(-200762)'
p29247
sS'DAQmxErrorValueOutOfRange'
p29248
S'(-54021)'
p29249
sS'DAQmxErrorDeviceDoesNotSupportDMADataXferForNonBufferedAcq'
p29250
S'(-200734)'
p29251
sS'DAQmxWarningPALTransferNotInProgress'
p29252
S'(50402)'
p29253
sS'DAQmxErrorBufferWithHWTimedSinglePointSampMode'
p29254
S'(-200690)'
p29255
sS'DAQmxErrorWaveformPreviouslyAllocated'
p29256
S'(-200310)'
p29257
sS'DAQmxErrorAnalogWaveformExpected'
p29258
S'(-200095)'
p29259
sS'DAQmx_DigLvl_PauseTrig_Src'
p29260
S'0x1379'
p29261
sS'DAQmx_Val_Task_Commit'
p29262
S'3'
p29263
sS'DAQmx_AnlgEdge_StartTrig_Src'
p29264
S'0x1398'
p29265
sS'DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove'
p29266
S'(-200702)'
p29267
sS'DAQmxErrorTaskVersionNew'
p29268
S'(-200470)'
p29269
sS'DAQmx_AI_Rng_High'
p29270
S'0x1815'
p29271
sS'DAQmxErrorPALSyncTimedOut'
p29272
S'(-50550)'
p29273
sS'DAQmxErrorTrigLineNotFoundSingleDevRoute'
p29274
S'(-200574)'
p29275
sS'DAQmx_Dev_AO_PhysicalChans'
p29276
S'0x231F'
p29277
sS'DAQmxErrorFullySpecifiedPathInListContainsRange'
p29278
S'(-200060)'
p29279
sS'DAQmxWarningValueNotInSet'
p29280
S'(54022)'
p29281
sS'DAQmx_Val_Switch_Topology_2575_2_Wire_98x1_Mux'
p29282
S'"2575/2-Wire 98x1 Mux"'
p29283
sS'DAQmx_CI_Freq_StartingEdge'
p29284
S'0x0799'
p29285
sS'DAQmxErrorCOCannotKeepUpInHWTimedSinglePointPolled'
p29286
S'(-201022)'
p29287
sS'DAQmxErrorPALMemoryFull'
p29288
S'(-50352)'
p29289
sS'DAQmxErrorDSFFailedToResetStream'
p29290
S'(-200586)'
p29291
sS'DAQmxErrorInvalidActionInControlTask'
p29292
S'(-200538)'
p29293
sS'DAQmxErrorMarkerPositionNotAlignedInScript'
p29294
S'(-200031)'
p29295
sS'DAQmx_Val_None'
p29296
S'10230'
p29297
sS'DAQmxErrorDAQmxSignalEventTypeNotSupportedByChanTypesOrDevicesInTask'
p29298
S'(-200987)'
p29299
sS'DAQmxWarningPALBadWriteMode'
p29300
S'(50012)'
p29301
sS'DAQmxErrorWriteFailedMultipleCtrsWithFREQOUT'
p29302
S'(-200844)'
p29303
sS'DAQmxErrorPortConfiguredForOutput'
p29304
S'(-200121)'
p29305
sS'DAQmxErrorParsingTEDSData'
p29306
S'(-200753)'
p29307
sS'DAQmxWarningPALOSFault'
p29308
S'(50202)'
p29309
sS'DAQmx_Val_ReferenceTrigger'
p29310
S'12490'
p29311
sS'DAQmx_Write_RegenMode'
p29312
S'0x1453'
p29313
sS'DAQmx_Val_Switch_Topology_2527_2_Wire_32x1_Mux'
p29314
S'"2527/2-Wire 32x1 Mux"'
p29315
sS'DAQmxErrorInvalidTimingType'
p29316
S'(-200300)'
p29317
sS'DAQmxErrorBufferNameExpectedInScript'
p29318
S'(-200026)'
p29319
sS'DAQmxErrorConfiguredTEDSInterfaceDevNotDetected'
p29320
S'(-200958)'
p29321
sS'DAQmx_AO_ReglitchEnable'
p29322
S'0x0133'
p29323
sS'DAQmx_SwitchDev_Topology'
p29324
S'0x193D'
p29325
sS'DAQmxErrorRoutingSrcTermPXIStarInSlot2_Routing'
p29326
S'(-89143)'
p29327
sS'DAQmx_AI_Strain_Units'
p29328
S'0x0981'
p29329
sS'DAQmxErrorTaskMissingChannelProperty'
p29330
S'(-201070)'
p29331
sS'DAQmxErrorSCCCarrierSpecdIsMissing'
p29332
S'(-201050)'
p29333
sS'DAQmx_Scale_Poly_ForwardCoeff'
p29334
S'0x1234'
p29335
sS'DAQmxErrorNoChansSpecdForChangeDetect'
p29336
S'(-200751)'
p29337
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACRange'
p29338
S'(-200872)'
p29339
sS'DAQmx_SwitchChan_Impedance'
p29340
S'0x0641'
p29341
sS'DAQmxErrorEventDelayOutOfRange'
p29342
S'(-200345)'
p29343
sS'DAQmxErrorPALResourceBusy'
p29344
S'(-50106)'
p29345
sS'DAQmx_DigEdge_WatchdogExpirTrig_Edge'
p29346
S'0x21A5'
p29347
sS'DAQmx_AnlgWin_StartTrig_Top'
p29348
S'0x1403'
p29349
sS'DAQmx_Val_Low'
p29350
S'10214'
p29351
sS'DAQmxErrorChannelNameGenerationNumberTooBig'
p29352
S'(-200600)'
p29353
sS'DAQmx_Val_FirstSample'
p29354
S'10424'
p29355
sS'DAQmxErrorExtSampClkSrcNotSpecified'
p29356
S'(-200303)'
p29357
sS'DAQmxErrorPortConfiguredForInput'
p29358
S'(-200120)'
p29359
sS'DAQmx_DigEdge_RefTrig_Edge'
p29360
S'0x1430'
p29361
sS'DAQmx_Exported_HshkEvent_OutputTerm'
p29362
S'0x22BA'
p29363
sS'DAQmx_Read_AutoStart'
p29364
S'0x1826'
p29365
sS'DAQmx_ExtCal_LastTemp'
p29366
S'0x1867'
p29367
sS'DAQmxErrorPALSoftwareFault'
p29368
S'(-50150)'
p29369
sS'DAQmxErrorInterconnectBridgeRouteReserved'
p29370
S'(-54012)'
p29371
sS'DAQmx_Val_ChanForAllLines'
p29372
g28857
sS'DAQmx_Val_HandshakeTriggerAsserts'
p29373
S'12552'
p29374
sS'DAQmxErrorExtSampClkRateTooHighForBackplane'
p29375
S'(-200274)'
p29376
sS'DAQmx_CI_SemiPeriod_Units'
p29377
S'0x18AF'
p29378
sS'DAQmxErrorHWTimedAndDataXferPIO'
p29379
S'(-201026)'
p29380
sS'DAQmx_Read_RelativeTo'
p29381
S'0x190A'
p29382
sS'DAQmxErrorCAPICannotPerformTaskOperationInAsyncCallback'
p29383
S'(-200968)'
p29384
sS'DAQmxErrorNotEnoughSampsWrittenForInitialXferRqstCondition'
p29385
S'(-200294)'
p29386
sS'DAQmxErrorAIDuringCounter0DMAConflict'
p29387
S'(-200078)'
p29388
sS'DAQmx_DigEdge_ArmStartTrig_DigSync_Enable'
p29389
S'0x2231'
p29390
sS'DAQmxWarningPotentialGlitchDuringWrite'
p29391
S'(200015)'
p29392
sS'DAQmx_AI_Bridge_InitialVoltage'
p29393
S'0x17ED'
p29394
sS'DAQmx_CI_PulseWidth_DigFltr_MinPulseWidth'
p29395
S'0x220B'
p29396
sS'DAQmxErrorRefTrigDigPatternSizeDoesNotMatchSourceSize'
p29397
S'(-200895)'
p29398
sS'DAQmx_Val_Switch_Topology_2569_100_SPST'
p29399
S'"2569/100-SPST"'
p29400
sS'DAQmx_AI_RVDT_Units'
p29401
S'0x0877'
p29402
sS'DAQmx_Val_Current'
p29403
S'10134'
p29404
sS'DAQmxErrorIncompatibleSensorOutputAndDeviceInputRanges'
p29405
S'(-200357)'
p29406
sS'DAQmx_Val_N_Type_TC'
p29407
S'10077'
p29408
sS'DAQmxErrorTermWithoutDevInMultiDevTask'
p29409
S'(-200853)'
p29410
sS'DAQmxErrorNoHWTimingWithOnDemand'
p29411
S'(-200731)'
p29412
sS'DAQmx_SampClk_Rate'
p29413
S'0x1344'
p29414
sS'DAQmx_Val_Task_Unreserve'
p29415
S'5'
p29416
sS'DAQmxErrorRefTrigOutputTermNotSupportedGivenTimingType'
p29417
S'(-200912)'
p29418
sS'DAQmxErrorExtSampClkRateTooLowForClkIn'
p29419
S'(-200275)'
p29420
sS'DAQmxErrorInvalidReadPosDuringRIS'
p29421
S'(-200419)'
p29422
sS'DAQmxErrorUnexpectedIDFollowingRelayNameInList'
p29423
S'(-200530)'
p29424
sS'DAQmxErrorTEDSNotSupported'
p29425
S'(-200741)'
p29426
sS'DAQmxErrorWriteBufferTooSmall'
p29427
S'(-200234)'
p29428
sS'DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod'
p29429
S'(-200993)'
p29430
sS'DAQmx_CI_Encoder_ZInput_DigFltr_MinPulseWidth'
p29431
S'0x2206'
p29432
sS'DAQmxError3InputPortCombinationGivenSampTimingType653x'
p29433
S'(-200931)'
p29434
sS'DAQmxErrorReadNotCompleteBefore3SampClkEdges'
p29435
S'(-200843)'
p29436
sS'DAQmxErrorRefTrigMasterSessionUnavailable'
p29437
S'(-200682)'
p29438
sS'DAQmx_CI_Encoder_AInput_DigFltr_TimebaseSrc'
p29439
S'0x21FD'
p29440
sS'DAQmxErrorSwitchDifferentSettlingTimeWhenScanning'
p29441
S'(-200178)'
p29442
sS'DAQmx_Val_Once'
p29443
S'10244'
p29444
sS'DAQmxErrorRefTrigDigPatternChanNotTristated'
p29445
S'(-200888)'
p29446
sS'DAQmx_AnlgWin_RefTrig_When'
p29447
S'0x1427'
p29448
sS'DAQmxErrorCanNotPerformOpWhileTaskRunning'
p29449
S'(-200479)'
p29450
sS'DAQmxErrorRangeWithTooManyObjects'
p29451
S'(-200592)'
p29452
sS'DAQmxErrorDevAlreadyInTask'
p29453
S'(-200481)'
p29454
sS'DAQmx_Val_OnbrdMemCustomThreshold'
p29455
S'12577'
p29456
sS'DAQmxErrorInterruptsInsufficientDataXferMech'
p29457
S'(-200322)'
p29458
sS'DAQmx_AI_Thrmcpl_CJCVal'
p29459
S'0x1036'
p29460
sS'DAQmxErrorCAPIReservedParamNotZero'
p29461
S'(-200491)'
p29462
sS'DAQmx_Val_CounterOutputEvent'
p29463
S'12494'
p29464
sS'DAQmx_Scale_Descr'
p29465
S'0x1226'
p29466
sS'DAQmx_Val_Switch_Topology_1190_Quad_4x1_Mux'
p29467
S'"1190/Quad 4x1 Mux"'
p29468
sS'DAQmxErrorSCXI1126ThreshHystCombination'
p29469
S'(-200223)'
p29470
sS'DAQmx_CI_Encoder_AInput_DigFltr_TimebaseRate'
p29471
S'0x21FE'
p29472
sS'DAQmx_AIConv_TimebaseDiv'
p29473
S'0x1335'
p29474
sS'DAQmxErrorSMIOPauseTriggersNotSupportedWithChannelExpansion'
p29475
S'(-201019)'
p29476
sS'DAQmxErrorMemMapOnlyForProgIOXfer'
p29477
S'(-200169)'
p29478
sS'DAQmxErrorVirtualTEDSDataFileError'
p29479
S'(-200827)'
p29480
sS'DAQmx_Val_Switch_Topology_1193_Quad_8x1_Mux'
p29481
S'"1193/Quad 8x1 Mux"'
p29482
sS'DAQmxErrorWhenAcqCompAndNoRefTrig'
p29483
S'(-200864)'
p29484
sS'DAQmxErrorTrigWindowAIMinAIMaxCombo'
p29485
S'(-200423)'
p29486
sS'DAQmxErrorPauseTrigTypeNotSupportedGivenTimingType'
p29487
S'(-200906)'
p29488
sS'DAQmx_AI_Thrmcpl_CJCChan'
p29489
S'0x1034'
p29490
sS'DAQmxErrorReadAllAvailableDataWithoutBuffer'
p29491
S'(-200340)'
p29492
sS'DAQmx_CI_CountEdges_DigFltr_Enable'
p29493
S'0x21F6'
p29494
sS'DAQmx_Val_Switch_Topology_2503_1_Wire_48x1_Mux'
p29495
S'"2503/1-Wire 48x1 Mux"'
p29496
sS'DAQmxErrorIncorrectNumChannelsToWrite'
p29497
S'(-200101)'
p29498
sS'DAQmxWarningPALBadThreadMultitask'
p29499
S'(50019)'
p29500
sS'DAQmx_Write_CurrWritePos'
p29501
S'0x1458'
p29502
sS'DAQmxErrorRoutingDestTermPXIStarXNotInSlot2'
p29503
S'(-200705)'
p29504
sS'DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseRate'
p29505
S'0x2208'
p29506
sS'DAQmx_Val_Rising'
p29507
S'10280'
p29508
sS'DAQmx_Val_2Wire'
p29509
S'2'
p29510
sS'DAQmxErrorDigFilterAndSyncBothEnabled'
p29511
S'(-200770)'
p29512
sS'DAQmxErrorPALBadWriteMode'
p29513
S'(-50012)'
p29514
sS'DAQmxErrorMinAndMaxNotSymmetric'
p29515
S'(-200266)'
p29516
sS'DAQmx_Val_Task_Verify'
p29517
g29510
sS'DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandHWTimedSglPt'
p29518
S'(-200803)'
p29519
sS'DAQmx_Val_Switch_Topology_2598_Dual_Transfer'
p29520
S'"2598/Dual Transfer"'
p29521
sS'DAQmx_CI_PulseWidth_Units'
p29522
S'0x0823'
p29523
sS'DAQmxErrorPALFileFault'
p29524
S'(-50209)'
p29525
sS'DAQmx_Val_Switch_Topology_1169_100_SPST'
p29526
S'"1169/100-SPST"'
p29527
sS'DAQmxErrorGetPropertyNotInputBufferedTask'
p29528
S'(-200455)'
p29529
sS'DAQmx_AO_DAC_Offset_Val'
p29530
S'0x2255'
p29531
sS'DAQmx_Val_Switch_Topology_2532_2_Wire_4x64_Matrix'
p29532
S'"2532/2-Wire 4x64 Matrix"'
p29533
sS'DAQmx_Val_X4'
p29534
S'10092'
p29535
sS'DAQmx_Val_X1'
p29536
S'10090'
p29537
sS'DAQmx_Val_X2'
p29538
S'10091'
p29539
sS'DAQmx_RefClk_Src'
p29540
S'0x1316'
p29541
sS'DAQmxErrorWaitForNextSampClkDetected3OrMoreSampClks'
p29542
S'(-209803)'
p29543
sS'DAQmxErrorPALComponentBusy'
p29544
S'(-50264)'
p29545
sS'DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthByAnotherTask1PerDev'
p29546
S'(-200806)'
p29547
sS'DAQmxWarningChanCalExpired'
p29548
S'(200043)'
p29549
sS'DAQmxErrorLinesUsedForHandshakingInputNotForStaticInput'
p29550
S'(-200725)'
p29551
sS'DAQmx_Val_Pulse_Ticks'
p29552
S'10268'
p29553
sS'DAQmxErrorEmptyString'
p29554
S'(-200467)'
p29555
sS'DAQmxErrorOpNotSupportedWhenRefClkSrcNone'
p29556
S'(-200661)'
p29557
sS'DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalNoIrqOnDev'
p29558
S'(-200920)'
p29559
sS'_NI_int16_DEFINED_'
p29560
g28662
sS'DAQmxErrorInputFIFOOverflow'
p29561
S'(-200010)'
p29562
sS'DAQmx_CI_LinEncoder_InitialPos'
p29563
S'0x0915'
p29564
sS'DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriodPolled'
p29565
S'(-201024)'
p29566
sS'DAQmxErrorSamplesNoLongerAvailable'
p29567
S'(-200279)'
p29568
sS'DAQmx_Val_J_Type_TC'
p29569
S'10072'
p29570
sS'DAQmx_Val_Switch_Topology_1160_16_SPDT'
p29571
S'"1160/16-SPDT"'
p29572
sS'DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseSrc'
p29573
S'0x21F3'
p29574
sS'DAQmxErrorDigDevChansSpecdInModeOtherThanParallel'
p29575
S'(-201035)'
p29576
sS'DAQmxErrorChanCalExpired'
p29577
S'(-200934)'
p29578
sS'DAQmxWarningAIConvRateTooLow'
p29579
S'(200018)'
p29580
sS'DAQmx_AI_Microphone_Sensitivity'
p29581
S'0x1536'
p29582
sS'DAQmxErrorSuitableTimebaseNotFoundTimeCombo2'
p29583
S'(-200746)'
p29584
sS'DAQmx_CI_TwoEdgeSep_SecondEdge'
p29585
S'0x0834'
p29586
sS'DAQmx_Val_Temp_TC'
p29587
S'10303'
p29588
sS'DAQmx_Val_Voltage_CustomWithExcitation'
p29589
S'10323'
p29590
sS'DAQmxErrorExtCalFunctionOutsideExtCalSession'
p29591
S'(-200439)'
p29592
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_Quad_4x16_Matrix'
p29593
S'"1129/2-Wire Quad 4x16 Matrix"'
p29594
sS'DAQmxErrorCannotRegisterDAQmxSoftwareEventWhileTaskIsRunning'
p29595
S'(-200960)'
p29596
sS'DAQmxErrorDAQmxSWEventsWithDifferentCallMechanisms'
p29597
S'(-200978)'
p29598
sS'DAQmxErrorRoutingPathNotAvailable'
p29599
S'(-200044)'
p29600
sS'DAQmxErrorCantMaintainExistingValueAOSync'
p29601
S'(-200793)'
p29602
sS'DAQmx_AI_ChanCal_ScaleType'
p29603
S'0x229C'
p29604
sS'DAQmxErrorDevCannotBeAccessed'
p29605
S'(-201003)'
p29606
sS'DAQmx_CO_CtrTimebase_DigFltr_MinPulseWidth'
p29607
S'0x2277'
p29608
sS'DAQmx_SampClk_Timebase_ActiveEdge'
p29609
S'0x18EC'
p29610
sS'DAQmxErrorMultiDevsInTask'
p29611
S'(-200558)'
p29612
sS'DAQmxErrorCVIFailedToLoadDAQmxDLL'
p29613
S'(-200397)'
p29614
sS'DAQmxErrorInvalidCfgCalAdjustDirectPathOutputImpedance'
p29615
S'(-200514)'
p29616
sS'DAQmxErrorInvalidDateTimeInEEPROM'
p29617
S'(-200501)'
p29618
sS'DAQmx_Val_Switch_Topology_2527_Independent'
p29619
S'"2527/Independent"'
p29620
sS'DAQmxErrorNoDevMemForWaveform'
p29621
S'(-200315)'
p29622
sS'DAQmxErrorCannotSetPropertyWhenHWTimedSinglePointTaskIsRunning'
p29623
S'(-200994)'
p29624
sS'DAQmx_Val_Toggle'
p29625
S'10307'
p29626
sS'DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2'
p29627
S'(-200704)'
p29628
sS'DAQmx_AI_Dither_Enable'
p29629
S'0x0068'
p29630
sS'DAQmxWarningPALBadWriteCount'
p29631
S'(50014)'
p29632
sS'DAQmx_AnlgWin_StartTrig_Btm'
p29633
S'0x1402'
p29634
sS'DAQmxErrorPALValueConflict'
p29635
S'(-50000)'
p29636
sS'DAQmxErrorInvalidRelayName'
p29637
S'(-200202)'
p29638
sS'DAQmx_ChangeDetect_DI_FallingEdgePhysicalChans'
p29639
S'0x2196'
p29640
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACOffsetVal'
p29641
S'(-200869)'
p29642
sS'DAQmx_Scale_Table_ScaledVals'
p29643
S'0x1236'
p29644
sS'DAQmxErrorScriptNameSameAsWfmName'
p29645
S'(-200633)'
p29646
sS'DAQmxErrorPALBusResetOccurred'
p29647
S'(-50800)'
p29648
sS'DAQmx_CI_Freq_Div'
p29649
S'0x0147'
p29650
sS'DAQmxErrorPropertyUnavailWhenUsingOnboardMemory'
p29651
S'(-200297)'
p29652
sS'DAQmxErrorCppCantRemoveInvalidEventHandler'
p29653
S'(-200590)'
p29654
sS'DAQmx_AI_ResistanceCfg'
p29655
S'0x1881'
p29656
sS'DAQmx_Cal_DevTemp'
p29657
S'0x223B'
p29658
sS'DAQmxErrorInputCfgFailedBecauseWatchdogExpired'
p29659
S'(-200712)'
p29660
sS'DAQmx_Val_Voltage'
p29661
S'10322'
p29662
sS'DAQmx_Exported_RefTrig_OutputTerm'
p29663
S'0x0590'
p29664
sS'DAQmxErrorPALBadCount'
p29665
S'(-50008)'
p29666
sS'DAQmx_Val_Switch_Topology_2503_2_Wire_Dual_12x1_Mux'
p29667
S'"2503/2-Wire Dual 12x1 Mux"'
p29668
sS'DAQmx_Val_Table'
p29669
S'10450'
p29670
sS'DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove'
p29671
S'(-200703)'
p29672
sS'DAQmxErrorNoAvailTrigLinesOnDevice'
p29673
S'(-200227)'
p29674
sS'DAQmx_AnlgEdge_RefTrig_Lvl'
p29675
S'0x1422'
p29676
sS'DAQmxErrorCalFunctionNotSupported'
p29677
S'(-200445)'
p29678
sS'DAQmx_Val_PCIe'
p29679
S'13612'
p29680
sS'DAQmxErrorMemMapDataXferModeSampTimingCombo'
p29681
S'(-200260)'
p29682
sS'DAQmx_Val_Pt3750'
p29683
S'12481'
p29684
sS'DAQmxErrorSampClkRateUnavailable'
p29685
S'(-200660)'
p29686
sS'DAQmx_Exported_AIHoldCmpltEvent_PulsePolarity'
p29687
S'0x18EE'
p29688
sS'DAQmxErrorReadDataTypeTooSmall'
p29689
S'(-200789)'
p29690
sS'DAQmxErrorAcqStoppedToPreventInputBufferOverwriteOneDataXferMech'
p29691
S'(-200613)'
p29692
sS'DAQmx_Val_Open'
p29693
S'10437'
p29694
sS'DAQmx_DigEdge_StartTrig_DigFltr_MinPulseWidth'
p29695
S'0x2224'
p29696
sS'DAQmx_Task_Channels'
p29697
S'0x1273'
p29698
sS'DAQmxErrorPatternMatcherMayBeUsedByOneTrigOnly'
p29699
S'(-200928)'
p29700
sS'DAQmx_Val_Pt3916'
p29701
S'10069'
p29702
sS'DAQmx_Exported_SampClkTimebase_OutputTerm'
p29703
S'0x18F9'
p29704
sS'DAQmxErrorInvalidAttributeValue'
p29705
S'(-200077)'
p29706
sS'DAQmx_Val_Pt3911'
p29707
S'12482'
p29708
sS'DAQmxErrorGlobalChanNameAlreadyTaskName'
p29709
S'(-200918)'
p29710
sS'DAQmxErrorInversionNotSupportedByHW_Routing'
p29711
S'(-89133)'
p29712
sS'DAQmxErrorCannotHaveCJTempWithOtherChans'
p29713
S'(-200167)'
p29714
sS'DAQmxErrorMissingStartOfTable'
p29715
S'(-201065)'
p29716
sS'DAQmx_AI_DevScalingCoeff'
p29717
S'0x1930'
p29718
sS'DAQmx_Val_LosslessPacking'
p29719
S'12555'
p29720
sS'DAQmx_AI_Excit_DCorAC'
p29721
S'0x17FB'
p29722
sS'DAQmxErrorDigSyncNotAvailableOnTerm'
p29723
S'(-200773)'
p29724
sS'DAQmxWarningLowpassFilterSettlingTimeExceedsUserTimeBetween2ADCConversions'
p29725
S'(200038)'
p29726
sS'DAQmx_Val_Switch_Topology_1193_Independent'
p29727
S'"1193/Independent"'
p29728
sS'DAQmx_AIConv_Src'
p29729
S'0x1502'
p29730
sS'DAQmx_SampTimingType'
p29731
S'0x1347'
p29732
sS'DAQmxWarningPALDispatcherAlreadyExported'
p29733
S'(50500)'
p29734
sS'DAQmx_Exported_AdvTrig_OutputTerm'
p29735
S'0x1645'
p29736
sS'DAQmxWarningPALBadDataSize'
p29737
S'(50005)'
p29738
sS'DAQmxErrorPALBadWindowType'
p29739
S'(-50016)'
p29740
sS'DAQmxErrorInvalidHWProductType'
p29741
S'(-201057)'
p29742
sS'DAQmxErrorUnsupportedSignalTypeExportSignal'
p29743
S'(-200375)'
p29744
sS'DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandBufSizeZero'
p29745
S'(-200802)'
p29746
sS'DAQmxErrorTimeoutExceeded'
p29747
S'(-200221)'
p29748
sS'DAQmxErrorOnboardMemTooSmall'
p29749
S'(-200341)'
p29750
sS'DAQmx_Val_Switch_Topology_1167_Independent'
p29751
S'"1167/Independent"'
p29752
sS'DAQmxErrorMStudioPropertyGetWhileTaskNotVerified'
p29753
S'(-200593)'
p29754
sS'DAQmxErrorCounterNoTimebaseEdgesBetweenGates'
p29755
S'(-200140)'
p29756
sS'DAQmxErrorHWTimedSinglePointOddNumChansInAITask'
p29757
S'(-200820)'
p29758
sS'DAQmxErrorRangeWithoutAConnectActionInList'
p29759
S'(-200052)'
p29760
sS'DAQmxErrorPALMessageQueueFull'
p29761
S'(-50108)'
p29762
sS'DAQmx_CI_Encoder_BInputTerm'
p29763
S'0x219E'
p29764
sS'DAQmx_AnlgLvl_PauseTrig_Hyst'
p29765
S'0x1368'
p29766
sS'DAQmxErrorCOInvalidTimingSrcDueToSignal'
p29767
S'(-200801)'
p29768
sS'DAQmx_AI_Temp_Units'
p29769
S'0x1033'
p29770
sS'DAQmxErrorChanDoesNotSupportCJC'
p29771
S'(-200976)'
p29772
sS'DAQmxErrorCustomScaleNameUsed'
p29773
S'(-200356)'
p29774
sS'DAQmxErrorTrigLineNotFoundSingleDevRoute_Routing'
p29775
S'(-89140)'
p29776
sS'DAQmx_PhysicalChan_TEDS_BitStream'
p29777
S'0x21DF'
p29778
sS'DAQmx_AI_EnhancedAliasRejectionEnable'
p29779
S'0x2294'
p29780
sS'DAQmxErrorPALMemoryAlignmentFault'
p29781
S'(-50351)'
p29782
sS'DAQmxErrorAttributeNotSupportedInTaskContext'
p29783
S'(-200452)'
p29784
sS'DAQmxErrorInvalidRefClkRate'
p29785
S'(-200427)'
p29786
sS'DAQmxErrorDeviceDoesNotSupportScanning'
p29787
S'(-200068)'
p29788
sS'DAQmxWarningRateViolatesMaxADCRate'
p29789
S'(200012)'
p29790
sS'DAQmxErrorWhenAcqCompAndNumSampsPerChanExceedsOnBrdBufSize'
p29791
S'(-200865)'
p29792
sS'DAQmx_Val_CountUp'
p29793
S'10128'
p29794
sS'DAQmxErrorPALResourceAmbiguous'
p29795
S'(-50107)'
p29796
sS'DAQmxErrorIncorrectDigitalPattern'
p29797
S'(-200102)'
p29798
sS'DAQmxErrorDCMLock'
p29799
S'(-200385)'
p29800
sS'DAQmxErrorTwoWaitForTrigsAfterConnectionInScanlist'
p29801
S'(-200638)'
p29802
sS'DAQmx_Val_WriteToPROM'
p29803
S'12539'
p29804
sS'DAQmx_CI_Encoder_AInput_DigSync_Enable'
p29805
S'0x21FF'
p29806
sS'DAQmxErrorMeasCalAdjustMainPathPostAmpGainAndOffset'
p29807
S'(-200504)'
p29808
sS'DAQmx_Val_Switch_Topology_1193_Dual_16x1_Mux'
p29809
S'"1193/Dual 16x1 Mux"'
p29810
sS'DAQmx_Hshk_StartCond'
p29811
S'0x22C3'
p29812
sS'DAQmx_CI_CountEdges_CountDir_DigSync_Enable'
p29813
S'0x21F5'
p29814
sS'DAQmx_SwitchChan_MaxDCVoltage'
p29815
S'0x0650'
p29816
sS'DAQmxErrorInvalidSampClkSrc'
p29817
S'(-200414)'
p29818
sS'DAQmx_SampClk_Timebase_Rate'
p29819
S'0x1303'
p29820
sS'DAQmxErrorCtrMinMax'
p29821
S'(-200527)'
p29822
sS'DAQmx_Val_OnBrdMemEmpty'
p29823
S'10235'
p29824
sS'DAQmx_Task_Devices'
p29825
S'0x230E'
p29826
sS'DAQmxErrorCannotGetPropertyWhenTaskNotCommittedOrRunning'
p29827
S'(-200556)'
p29828
sS'DAQmxErrorCantSaveNonPortMultiLineDigChanSoInteractiveEditsAllowed'
p29829
S'(-200921)'
p29830
sS'DAQmxErrorInputFIFOUnderflow'
p29831
S'(-200017)'
p29832
sS'DAQmxErrorLinesUsedForStaticInputNotForHandshakingControl'
p29833
S'(-200728)'
p29834
sS'DAQmx_CI_CtrTimebase_DigFltr_Enable'
p29835
S'0x2271'
p29836
sS'DAQmxErrorDSFReadyForOutputNotAsserted'
p29837
S'(-200585)'
p29838
sS'DAQmxErrorInternalSampClkNotRisingEdge'
p29839
S'(-200890)'
p29840
sS'DAQmx_SwitchChan_MaxDCCarryCurrent'
p29841
S'0x0647'
p29842
sS'DAQmxErrorConnectionNotPermittedOnChanReservedForRouting'
p29843
S'(-200189)'
p29844
sS'DAQmx_CI_TwoEdgeSep_First_DigFltr_MinPulseWidth'
p29845
S'0x2210'
p29846
sS'DAQmxErrorBracketPairingMismatchInList'
p29847
S'(-200104)'
p29848
sS'DAQmxErrorInconsistentChannelDirections'
p29849
S'(-200011)'
p29850
sS'DAQmxErrorExplanationNotFound'
p29851
S'(-200235)'
p29852
sS'DAQmx_Val_MaintainExistingValue'
p29853
S'12528'
p29854
sS'DAQmx_Read_TotalSampPerChanAcquired'
p29855
S'0x192A'
p29856
sS'DAQmx_SampClk_DigFltr_MinPulseWidth'
p29857
S'0x221F'
p29858
sS'DAQmx_Dev_PCI_DevNum'
p29859
S'0x2328'
p29860
sS'DAQmx_Dev_DI_Lines'
p29861
S'0x2320'
p29862
sS'DAQmxWarningPALResourceAmbiguous'
p29863
S'(50107)'
p29864
sS'DAQmxErrorPALReceiverSocketInvalid'
p29865
S'(-50503)'
p29866
sS'DAQmxErrorNoCommonTrigLineForImmedRoute'
p29867
S'(-200396)'
p29868
sS'DAQmx_SwitchChan_MaxACVoltage'
p29869
S'0x0651'
p29870
sS'DAQmxWarningPALBadReadMode'
p29871
S'(50009)'
p29872
sS'DAQmxErrorPALResourceReserved'
p29873
S'(-50103)'
p29874
sS'DAQmxErrorSampClkTimebaseRateInvalid'
p29875
S'(-201089)'
p29876
sS'DAQmx_AI_ChanCal_HasValidCalInfo'
p29877
S'0x2297'
p29878
sS'DAQmxErrorRefTrigTypeNotSupportedGivenTimingType'
p29879
S'(-200907)'
p29880
sS'DAQmx_Val_Transferred_From_Buffer'
p29881
g29510
sS'DAQmx_CO_Pulse_Freq_Units'
p29882
S'0x18D5'
p29883
sS'DAQmxErrorInvalidRoutingDestinationTerminalName'
p29884
S'(-200041)'
p29885
sS'DAQmx_Val_ClearExpiration'
p29886
g28857
sS'DAQmx_Val_Task_Start'
p29887
g28763
sS'DAQmxErrorCouldNotDownloadFirmwareHWDamaged'
p29888
S'(-200962)'
p29889
sS'DAQmxErrorWaitForNextSampleClockOrReadDetected3OrMoreMissedSampClks'
p29890
S'(-201027)'
p29891
sS'DAQmxErrorWriteNumChansMismatch'
p29892
S'(-200524)'
p29893
sS'DAQmxErrorNoAdvTrigForMultiDevScan'
p29894
S'(-200323)'
p29895
sS'DAQmxErrorTooManyChansForAnalogPauseTrig'
p29896
S'(-200263)'
p29897
sS'DAQmx_AI_TEDS_Units'
p29898
S'0x21E0'
p29899
sS'DAQmxErrorCannotStoreCalConst'
p29900
S'(-200074)'
p29901
sS'DAQmx_CO_Pulse_Time_Units'
p29902
S'0x18D6'
p29903
sS'DAQmx_Val_Switch_Topology_1175_2_Wire_98x1_Mux'
p29904
S'"1175/2-Wire 98x1 Mux"'
p29905
sS'DAQmxErrorTooManyPhysicalChansForTEDSInterfaceSpecd'
p29906
S'(-201052)'
p29907
sS'DAQmxErrorCannotTristateTerm_Routing'
p29908
S'(-89128)'
p29909
sS'DAQmxErrorPALDeviceNotSupported'
p29910
S'(-50302)'
p29911
sS'DAQmx_Val_GND'
p29912
S'10066'
p29913
sS'DAQmxErrorSwitchNotResetBeforeScan'
p29914
S'(-200199)'
p29915
sS'DAQmxErrorNoDivisorForExternalSignal'
p29916
S'(-200130)'
p29917
sS'DAQmx_SwitchChan_MaxDCSwitchCurrent'
p29918
S'0x0645'
p29919
sS'DAQmxErrorRepeatedAIPhysicalChan'
p29920
S'(-200620)'
p29921
sS'DAQmxErrorInvalidTimeValue'
p29922
S'(-201037)'
p29923
sS'DAQmx_AnlgWin_RefTrig_Coupling'
p29924
S'0x1857'
p29925
sS'DAQmxErrorDigInputNotSupported'
p29926
S'(-200647)'
p29927
sS'DAQmxErrorSampClkOutputTermIncludesStartTrigSrc'
p29928
S'(-200954)'
p29929
sS'DAQmx_AI_SoundPressure_MaxSoundPressureLvl'
p29930
S'0x223A'
p29931
sS'DAQmxErrorCantResetExpiredWatchdog'
p29932
S'(-200644)'
p29933
sS'DAQmxErrorInvalidSyntaxForPhysicalChannelRange'
p29934
S'(-200086)'
p29935
sS'DAQmxErrorNonZeroBufferSizeInProgIOXfer'
p29936
S'(-200172)'
p29937
sS'DAQmx_Val_QuarterBridgeII'
p29938
S'10272'
p29939
sS'DAQmxErrorInputBufSizeTooSmallToStartAcq'
p29940
S'(-200608)'
p29941
sS'DAQmx_AdvTrig_Type'
p29942
S'0x1365'
p29943
sS'DAQmx_PhysicalChan_TEDS_VersionLetter'
p29944
S'0x21DE'
p29945
sS'DAQmxErrorDataSizeMoreThanSizeOfEEPROMOnTEDS'
p29946
S'(-200825)'
p29947
sS'DAQmx_Val_K_Type_TC'
p29948
S'10073'
p29949
sS'DAQmxErrorTEDSLegacyTemplateIDInvalidOrUnsupported'
p29950
S'(-200766)'
p29951
sS'DAQmx_CI_CountEdges_ActiveEdge'
p29952
S'0x0697'
p29953
sS'DAQmxErrorRepeatedNumberInScaledValues'
p29954
S'(-200599)'
p29955
sS'DAQmx_Exported_AdvTrig_Pulse_WidthUnits'
p29956
S'0x1647'
p29957
sS'DAQmxErrorInvalidWaitDurationBeforeIfElseBlockInScript'
p29958
S'(-201011)'
p29959
sS'DAQmx_CI_SemiPeriod_Term'
p29960
S'0x18B0'
p29961
sS'DAQmx_AI_LossyLSBRemoval_CompressedSampSize'
p29962
S'0x22D9'
p29963
sS'DAQmxErrorSuppliedCurrentDataOutsideSpecifiedRange'
p29964
S'(-200076)'
p29965
sS'DAQmxErrorSampPerChanNotMultipleOfIncr'
p29966
S'(-200344)'
p29967
sS'DAQmx_Val_Chan'
p29968
S'10113'
p29969
sS'DAQmxErrorRoutingNotSupportedForDevice'
p29970
S'(-200039)'
p29971
sS'DAQmxErrorCOSampModeSampTimingTypeSampClkConflict'
p29972
S'(-200778)'
p29973
sS'DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunning'
p29974
S'(-200846)'
p29975
sS'DAQmx_CI_LinEncoder_Units'
p29976
S'0x18A9'
p29977
sS'DAQmx_Val_Switch_Topology_1130_2_Wire_Octal_16x1_Mux'
p29978
S'"1130/2-Wire Octal 16x1 Mux"'
p29979
sS'DAQmx_Exported_HshkEvent_Interlocked_DeassertDelay'
p29980
S'0x22BF'
p29981
sS'DAQmx_CI_CountEdges_DigFltr_TimebaseSrc'
p29982
S'0x21F8'
p29983
sS'DAQmxErrorLines4To7ConfiguredForOutput'
p29984
S'(-200125)'
p29985
sS'DAQmx_Val_SampleCompleteEvent'
p29986
S'12530'
p29987
sS'DAQmxErrorStrainGageCalibration'
p29988
S'(-200380)'
p29989
sS'DAQmxWarningPALIrrelevantAttribute'
p29990
S'(50001)'
p29991
sS'DAQmxErrorNumSampsToWaitNotGreaterThanZeroInScript'
p29992
S'(-200850)'
p29993
sS'DAQmx_CI_Prescaler'
p29994
S'0x2239'
p29995
sS'DAQmxErrorReversePolynomialCoefNotSpecd'
p29996
S'(-200325)'
p29997
sS'DAQmx_Val_OnBrdMemHalfFullOrLess'
p29998
S'10239'
p29999
sS'DAQmxErrorOnDemandNotSupportedWithHWTimedSinglePoint'
p30000
S'(-200997)'
p30001
sS'DAQmxErrorSimulationCannotBeDisabledForDevCreatedAsSimulatedDev'
p30002
S'(-200856)'
p30003
sS'DAQmx_AI_Lowpass_SwitchCap_ExtClkDiv'
p30004
S'0x1886'
p30005
sS'DAQmx_PhysicalChan_TEDS_VersionNum'
p30006
S'0x21DD'
p30007
sS'DAQmx_Scale_Lin_YIntercept'
p30008
S'0x1228'
p30009
sS'DAQmxErrorCannotTristateBusyTerm'
p30010
S'(-200252)'
p30011
sS'DAQmxErrorRoutingDestTermPXIStarInSlot2_Routing'
p30012
S'(-89144)'
p30013
sS'DAQmxErrorRepeatedNumberInPreScaledValues'
p30014
S'(-200598)'
p30015
sS'DAQmx_Val_Pt3928'
p30016
S'12483'
p30017
sS'DAQmx_Val_PathStatus_AlreadyExists'
p30018
S'10432'
p30019
sS'DAQmxErrorWaitModeValueNotSupportedNonBuffered'
p30020
S'(-200924)'
p30021
sS'DAQmx_Val_Pt3920'
p30022
S'10053'
p30023
sS'DAQmxErrorSCXIModuleIncorrect'
p30024
S'(-200107)'
p30025
sS'DAQmx_Val_Polynomial'
p30026
S'10449'
p30027
sS'DAQmx_Val_Implicit'
p30028
S'10451'
p30029
sS'DAQmxErrorPLLBecameUnlocked'
p30030
S'(-200246)'
p30031
sS'DAQmxErrorCAPICannotRegisterSyncEventsFromMultipleThreads'
p30032
S'(-200990)'
p30033
sS'DAQmxErrorPrptyGetSpecdActiveChanFailedDueToDifftVals'
p30034
S'(-200657)'
p30035
sS'DAQmxErrorTimebaseCalFreqVarianceTooLarge'
p30036
S'(-200723)'
p30037
sS'DAQmx_DigLvl_PauseTrig_DigFltr_MinPulseWidth'
p30038
S'0x2229'
p30039
sS'DAQmxErrorDelayFromSampClkTooShort'
p30040
S'(-200336)'
p30041
sS'DAQmxErrorNoRefTrigConfigured'
p30042
S'(-200282)'
p30043
sS'DAQmx_Val_Switch_Topology_2501_4_Wire_12x1_Mux'
p30044
S'"2501/4-Wire 12x1 Mux"'
p30045
sS'DAQmxError3OutputPortCombinationGivenSampTimingType653x'
p30046
S'(-200932)'
p30047
sS'DAQmx_CO_Prescaler'
p30048
S'0x226D'
p30049
sS'DAQmxErrorAIEveryNSampsEventIntervalNotMultipleOf2'
p30050
S'(-200970)'
p30051
sS'DAQmxErrorReferenceCurrentInvalid'
p30052
S'(-200154)'
p30053
sS'DAQmx_AI_LVDT_Units'
p30054
S'0x0910'
p30055
sS'DAQmxErrorLines0To3ConfiguredForInput'
p30056
S'(-200122)'
p30057
sS'DAQmx_Val_DMA'
p30058
S'10054'
p30059
sS'DAQmx_DigPattern_RefTrig_When'
p30060
S'0x1438'
p30061
sS'DAQmxErrorCalChanReversePolyCoefNotSpecd'
p30062
S'(-200941)'
p30063
sS'DAQmxErrorTopologyNotSupportedByCfgTermBlock'
p30064
S'(-200256)'
p30065
sS'DAQmx_Val_Accelerometer'
p30066
S'10356'
p30067
sS'DAQmx_CI_Period_Div'
p30068
S'0x192E'
p30069
sS'DAQmxErrorRegisterNotWritable'
p30070
S'(-200393)'
p30071
sS'DAQmx_DO_DataXferMech'
p30072
S'0x2266'
p30073
sS'DAQmxErrorPALComponentTooOld'
p30074
S'(-50252)'
p30075
sS'DAQmx_Write_SleepTime'
p30076
S'0x22B2'
p30077
sS'DAQmxErrorCOReadyForNewValNotSupportedWithOnDemand'
p30078
S'(-200999)'
p30079
sS'DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2_Routing'
p30080
S'(-89149)'
p30081
sS'DAQmxErrorDevNotInTask'
p30082
S'(-200482)'
p30083
sS'DAQmx_Val_Switch_Topology_2501_1_Wire_48x1_Mux'
p30084
S'"2501/1-Wire 48x1 Mux"'
p30085
sS'DAQmx_Val_NoChange'
p30086
S'10160'
p30087
sS'DAQmxErrorAIMaxTooLarge'
p30088
S'(-200579)'
p30089
sS'DAQmxErrorPALCalculationOverflow'
p30090
S'(-50175)'
p30091
sS'DAQmx_DigEdge_StartTrig_Src'
p30092
S'0x1407'
p30093
sS'DAQmx_CI_CtrTimebaseSrc'
p30094
S'0x0143'
p30095
sS'DAQmxErrorUnsupportedUnicodeByteOrderMarker'
p30096
S'(-201017)'
p30097
sS'DAQmxErrorDevOnlySupportsSampClkTimingAI'
p30098
S'(-200757)'
p30099
sS'DAQmx_DI_DataXferReqCond'
p30100
S'0x2264'
p30101
sS'DAQmxErrorPhysicalChanNotSupportedGivenSampTimingType653x'
p30102
S'(-200897)'
p30103
sS'DAQmxErrorDevOnlySupportsSampClkTimingAO'
p30104
S'(-200758)'
p30105
sS'DAQmx_PhysicalChan_TEDS_TemplateIDs'
p30106
S'0x228F'
p30107
sS'DAQmxErrorInvalidExcitValForScaling'
p30108
S'(-200318)'
p30109
sS'DAQmxErrorNoLastExtCalDateTimeLastExtCalNotDAQmx'
p30110
S'(-200804)'
p30111
sS'DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2_Routing'
p30112
S'(-89147)'
p30113
sS'DAQmxErrorDisconnectionRequiredInScanlist'
p30114
S'(-200639)'
p30115
sS'DAQmxErrorMultiChanTypesInTask'
p30116
S'(-200559)'
p30117
sS'DAQmx_Val_Hz'
p30118
S'10373'
p30119
sS'DAQmxErrorOperationOnlyPermittedWhileScanning'
p30120
S'(-200177)'
p30121
sS'DAQmxErrorCannotCalculateNumSampsTaskNotStarted'
p30122
S'(-200343)'
p30123
sS'DAQmxErrorMemMapAndHWTimedSinglePoint'
p30124
S'(-200995)'
p30125
sS'DAQmxErrorValueInvalid'
p30126
S'(-54023)'
p30127
sS'DAQmxErrorSetupCalNeededBeforeAdjustCal'
p30128
S'(-201005)'
p30129
sS'DAQmxWarningPALResourceNotAvailable'
p30130
S'(50101)'
p30131
sS'DAQmxErrorCAPIReservedParamNotNULL'
p30132
S'(-200492)'
p30133
sS'DAQmx_Val_PXI'
p30134
S'12583'
p30135
sS'DAQmxErrorInvalidIdentifierInListAtEndOfSwitchAction'
p30136
S'(-200046)'
p30137
sS'DAQmxErrorExternalTimebaseRateNotKnownForDelay'
p30138
S'(-200149)'
p30139
sS'DAQmx_CO_CtrTimebase_DigSync_Enable'
p30140
S'0x227A'
p30141
sS'DAQmx_Val_SoundPressure_Microphone'
p30142
S'10354'
p30143
sS'DAQmxErrorCalChanForwardPolyCoefNotSpecd'
p30144
S'(-200940)'
p30145
sS'DAQmx_CI_CountEdges_InitialCnt'
p30146
S'0x0698'
p30147
sS'DAQmxErrorProgIODataXferForBufferedAO'
p30148
S'(-200767)'
p30149
sS'DAQmxErrorPALBadLibrarySpecifier'
p30150
S'(-50018)'
p30151
sS'DAQmxErrorFREQOUTCannotProduceDesiredFrequency2'
p30152
S'(-200736)'
p30153
sS'DAQmxErrorTooManyPretrigPlusMinPostTrigSamps'
p30154
S'(-200213)'
p30155
sS'DAQmx_Val_PatternMatches'
p30156
S'10254'
p30157
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_8x32_Matrix'
p30158
S'"2532/1-Wire Dual 8x32 Matrix"'
p30159
sS'DAQmxErrorDriverDeviceGUIDNotFound_Routing'
p30160
S'(-88705)'
p30161
sS'DAQmxErrorTooManyPostTrigSampsPerChan'
p30162
S'(-200575)'
p30163
sS'DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalWhenDMA'
p30164
S'(-200877)'
p30165
sS'DAQmxErrorAIConvRateTooHigh'
p30166
S'(-200335)'
p30167
sS'DAQmx_AI_Bridge_ShuntCal_Select'
p30168
S'0x21D5'
p30169
sS'DAQmx_Val_ReservedForRouting'
p30170
S'10441'
p30171
sS'DAQmx_AI_AutoZeroMode'
p30172
S'0x1760'
p30173
sS'DAQmxError2InputPortCombinationGivenSampTimingType653x'
p30174
S'(-200929)'
p30175
sS'DAQmx_AO_DAC_Rng_Low'
p30176
S'0x182D'
p30177
sS'DAQmxErrorLinesAlreadyReservedForOutput'
p30178
S'(-200597)'
p30179
sS'DAQmxErrorDigPrptyCannotBeSetPerLine'
p30180
S'(-200641)'
p30181
sS'DAQmx_AnlgLvl_PauseTrig_Src'
p30182
S'0x1370'
p30183
sS'DAQmxErrorStartTrigTypeNotSupportedGivenTimingType'
p30184
S'(-200904)'
p30185
sS'DAQmxErrorPALLogicalBufferEmpty'
p30186
S'(-50406)'
p30187
sS'DAQmx_Sys_NIDAQMajorVersion'
p30188
S'0x1272'
p30189
sS'DAQmxErrorSwitchOpFailedDueToPrevError'
p30190
S'(-200674)'
p30191
sS'DAQmxErrorAOMinMaxNotSupportedDACRangeTooSmall'
p30192
S'(-200873)'
p30193
sS'DAQmx_CI_CtrTimebaseRate'
p30194
S'0x18B2'
p30195
sS'DAQmx_Exported_AdvCmpltEvent_Pulse_Width'
p30196
S'0x1654'
p30197
sS'DAQmxErrorClearIsLastInstructionInIfElseBlockInScript'
p30198
S'(-201012)'
p30199
sS'DAQmxWarningPALBadOffset'
p30200
S'(50007)'
p30201
sS'DAQmxErrorPXIStarAndClock10Sync'
p30202
S'(-200885)'
p30203
sS'DAQmx_Val_SameAsMasterTimebase'
p30204
S'10282'
p30205
sS'DAQmxErrorInternalTimebaseSourceRateCombo'
p30206
S'(-200134)'
p30207
sS'DAQmxErrorCAPIChanIndexInvalid'
p30208
S'(-200570)'
p30209
sS'DAQmx_DI_DigFltr_MinPulseWidth'
p30210
S'0x21D7'
p30211
sS'DAQmx_Read_DigitalLines_BytesPerChan'
p30212
S'0x217C'
p30213
sS'DAQmx_CO_Pulse_Ticks_InitialDelay'
p30214
S'0x0298'
p30215
sS'DAQmxErrorNoPathAvailableBetween2SwitchChans'
p30216
S'(-200180)'
p30217
sS'DAQmxErrorCounterMaxMinRangeTime'
p30218
S'(-200138)'
p30219
sS'DAQmxErrorAOBufferSizeZeroForSampClkTimingType'
p30220
S'(-200859)'
p30221
sS'DAQmxErrorCIInvalidTimingSrcForEventCntDueToSampMode'
p30222
S'(-200799)'
p30223
sS'DAQmxErrorPALSocketListenerInvalid'
p30224
S'(-50502)'
p30225
sS'DAQmxErrorReadyForTransferOutputTermNotSupportedGivenTimingType'
p30226
S'(-200913)'
p30227
sS'DAQmxErrorSampClockOutputTermNotSupportedGivenTimingType'
p30228
S'(-200910)'
p30229
sS'DAQmxErrorPALCommunicationsFault'
p30230
S'(-50401)'
p30231
sS'DAQmx_AI_ChanCal_Poly_ReverseCoeff'
p30232
S'0x22A0'
p30233
sS'DAQmxErrorMeasCalAdjustMainPathOutputImpedance'
p30234
S'(-200506)'
p30235
sS'DAQmx_CI_DataXferMech'
p30236
S'0x0200'
p30237
sS'DAQmxErrorVirtualTEDSFileNotFound'
p30238
S'(-200784)'
p30239
sS'DAQmxErrorInvalidCalConstOscillatorPhaseDACValue'
p30240
S'(-200518)'
p30241
sS'DAQmx_AI_Thrmcpl_Type'
p30242
S'0x1050'
p30243
sS'DAQmx_Sys_Tasks'
p30244
S'0x1267'
p30245
sS'DAQmxErrorInvalidEnumValueSpecd'
p30246
S'(-201054)'
p30247
sS'DAQmxErrorStopTriggerHasNotOccurred'
p30248
S'(-200008)'
p30249
sS'DAQmxWarningPALFirmwareFault'
p30250
S'(50151)'
p30251
sS'DAQmx_AI_CurrentShunt_Resistance'
p30252
S'0x17F3'
p30253
sS'DAQmx_Val_Interlocked'
p30254
S'12549'
p30255
sS'DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherProperty'
p30256
S'(-200774)'
p30257
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_16x32_Matrix'
p30258
S'"2532/1-Wire 16x32 Matrix"'
p30259
sS'DAQmxErrorCascadeDigitizationModeNotSupported'
p30260
S'(-201034)'
p30261
sS'DAQmxErrorMeasCalAdjustOscillatorPhaseDAC'
p30262
S'(-200521)'
p30263
sS'DAQmx_Read_ChangeDetect_HasOverflowed'
p30264
S'0x2194'
p30265
sS'DAQmx_Val_Switch_Topology_2527_1_Wire_64x1_Mux'
p30266
S'"2527/1-Wire 64x1 Mux"'
p30267
sS'DAQmxErrorDeviceNameNotFound_Routing'
p30268
S'(-88717)'
p30269
sS'DAQmxErrorDataXferCustomThresholdNotSpecified'
p30270
S'(-200943)'
p30271
sS'DAQmx_CI_TwoEdgeSep_First_DigSync_Enable'
p30272
S'0x2213'
p30273
sS'DAQmxErrorSelfCalFailedExtNoiseOrRefVoltageOutOfCal'
p30274
S'(-200545)'
p30275
sS'DAQmx_Cal_UserDefinedInfo_MaxSize'
p30276
S'0x191C'
p30277
sS'DAQmxErrorActiveDevNotSupportedWithChanExpansion'
p30278
S'(-201094)'
p30279
sS'DAQmx_Val_Switch_Topology_1127_4_Wire_16x1_Mux'
p30280
S'"1127/4-Wire 16x1 Mux"'
p30281
sS'DAQmxErrorTrailingSpaceInString'
p30282
S'(-200554)'
p30283
sS'DAQmxErrorDigitalTerminalSpecifiedMoreThanOnce'
p30284
S'(-200014)'
p30285
sS'DAQmx_CI_Encoder_ZIndexEnable'
p30286
S'0x0890'
p30287
sS'DAQmx_AI_DataXferCustomThreshold'
p30288
S'0x230C'
p30289
sS'DAQmxErrorCanNotPerformOpWhenNoDevInTask'
p30290
S'(-200477)'
p30291
sS'DAQmxWarningPLLUnlocked'
p30292
S'(200007)'
p30293
sS'DAQmxErrorEveryNSampsTransferredFromBufferNotForInput'
p30294
S'(-200965)'
p30295
sS'DAQmx_Buf_Output_BufSize'
p30296
S'0x186D'
p30297
sS'DAQmxErrorRefTrigDigPatternChanNotInTask'
p30298
S'(-200889)'
p30299
sS'DAQmx_Val_mVoltsPerVoltPerMilliInch'
p30300
S'12505'
p30301
sS'DAQmx_AI_ChanCal_Poly_ForwardCoeff'
p30302
S'0x229F'
p30303
sS'DAQmxErrorSamplesNoLongerWriteable'
p30304
S'(-200289)'
p30305
sS'DAQmxErrorClearTEDSNotSupportedOnRT'
p30306
S'(-200809)'
p30307
sS'DAQmx_Val_Switch_Topology_1194_Quad_4x1_Mux'
p30308
S'"1194/Quad 4x1 Mux"'
p30309
sS'DAQmxErrorCOWritePulseHighTicksNotSupported'
p30310
S'(-200688)'
p30311
sS'DAQmxWarningLowpassFilterSettlingTimeExceedsDriverTimeBetween2ADCConversions'
p30312
S'(200039)'
p30313
sS'DAQmxErrorClearIsLastInstructionOfLoopInScript'
p30314
S'(-200037)'
p30315
sS'DAQmx_CO_CtrTimebaseSrc'
p30316
S'0x0339'
p30317
sS'DAQmxErrorPrptyGetSpecdSingleActiveChanFailedDueToDifftVals'
p30318
S'(-200659)'
p30319
sS'DAQmxErrorInvalidCfgCalAdjustMainPreAmpOffset'
p30320
S'(-200510)'
p30321
sS'DAQmxErrorWriteChanTypeMismatch'
p30322
S'(-200526)'
p30323
sS'DAQmxErrorPALFileCloseFault'
p30324
S'(-50205)'
p30325
sS'DAQmxErrorCantConfigureTEDSForChan'
p30326
S'(-200791)'
p30327
sS'DAQmx_CI_CountEdges_DirTerm'
p30328
S'0x21E1'
p30329
sS'DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseSrc'
p30330
S'0x222A'
p30331
sS'DAQmx_CI_CtrTimebaseActiveEdge'
p30332
S'0x0142'
p30333
sS'DAQmxWarningSampClkRateViolatesSettlingTimeForGen'
p30334
S'(200040)'
p30335
sS'DAQmxErrorMeasCalAdjustMainPathPreAmpOffset'
p30336
S'(-200502)'
p30337
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_24x1_Mux'
p30338
S'"2501/2-Wire 24x1 Mux"'
p30339
sS'DAQmx_CO_Count'
p30340
S'0x0293'
p30341
sS'DAQmx_DO_UseOnlyOnBrdMem'
p30342
S'0x2265'
p30343
sS'DAQmx_Val_Switch_Topology_2503_4_Wire_12x1_Mux'
p30344
S'"2503/4-Wire 12x1 Mux"'
p30345
sS'DAQmxErrorDevOnboardMemOverflowDuringHWTimedNonBufferedGen'
p30346
S'(-200795)'
p30347
sS'DAQmxErrorDigFilterMinPulseWidthSetWhenTristateIsFalse'
p30348
S'(-200733)'
p30349
sS'DAQmxWarningPALResourceNotReserved'
p30350
S'(50102)'
p30351
sS'DAQmx_PersistedTask_AllowInteractiveEditing'
p30352
S'0x22CD'
p30353
sS'DAQmxErrorPALBadWriteOffset'
p30354
S'(-50013)'
p30355
sS'DAQmxErrorCannotConnectChannelToItself'
p30356
S'(-200187)'
p30357
sS'DAQmxErrorKeywordExpectedInScript'
p30358
S'(-200027)'
p30359
sS'DAQmx_DO_Tristate'
p30360
S'0x18F3'
p30361
sS'DAQmx_Val_4Wire'
p30362
S'4'
p30363
sS'DAQmxErrorSamplesCanNotYetBeWritten'
p30364
S'(-200292)'
p30365
sS'DAQmx_CO_Pulse_HighTime'
p30366
S'0x18BA'
p30367
sS'DAQmx_Val_Switch_Topology_2567_Independent'
p30368
S'"2567/Independent"'
p30369
sS'DAQmx_SwitchChan_MaxACSwitchPwr'
p30370
S'0x0644'
p30371
sS'DAQmxErrorCantSyncToExtStimulusFreqDuringCal'
p30372
S'(-200442)'
p30373
sS'DAQmx_SelfCal_LastTemp'
p30374
S'0x1864'
p30375
sS'DAQmx_MasterTimebase_Src'
p30376
S'0x1343'
p30377
sS'DAQmx_Exported_WatchdogExpiredEvent_OutputTerm'
p30378
S'0x21AA'
p30379
sS'DAQmx_Val_SCXI'
p30380
S'12584'
p30381
sS'DAQmxErrorDevCannotProduceMinPulseWidth'
p30382
S'(-200777)'
p30383
sS'DAQmx_ChanType'
p30384
S'0x187F'
p30385
sS'DAQmxErrorZeroSlopeLinearScale'
p30386
S'(-200409)'
p30387
sS'DAQmx_CI_CtrTimebase_DigSync_Enable'
p30388
S'0x2275'
p30389
sS'DAQmxWarningSampValCoercedToMax'
p30390
S'(200021)'
p30391
sS'DAQmxErrorInvalidTrigCouplingExceptForExtTrigChan'
p30392
S'(-200548)'
p30393
sS'DAQmx_DigEdge_StartTrig_Edge'
p30394
S'0x1404'
p30395
sS'DAQmxErrorMarkerOutsideWaveformInScript'
p30396
S'(-200029)'
p30397
sS'DAQmxErrorPALMemoryPageLockFailed'
p30398
S'(-50353)'
p30399
sS'DAQmxErrorAOMinMaxNotSupportedDACRefValTooSmall'
p30400
S'(-200868)'
p30401
sS'DAQmx_HshkTrig_Type'
p30402
S'0x22B7'
p30403
sS'DAQmxErrorNoChangeDetectionOnSelectedLineForDevice'
p30404
S'(-201020)'
p30405
sS'DAQmx_AI_RVDT_Sensitivity'
p30406
S'0x0903'
p30407
sS'DAQmxErrorPALThreadControllerIsNotThreadCreator'
p30408
S'(-50602)'
p30409
sS'DAQmx_AO_DataXferMech'
p30410
S'0x0134'
p30411
sS'DAQmxWarningRateViolatesSettlingTime'
p30412
S'(200011)'
p30413
sS'DAQmxErrorDotNetAPINotUnsigned32BitNumber'
p30414
S'(-200499)'
p30415
sS'DAQmx_DO_OutputDriveType'
p30416
S'0x1137'
p30417
sS'DAQmxErrorACCouplingNotAllowedWith50OhmImpedance'
p30418
S'(-200411)'
p30419
sS'DAQmxErrorInvalidSignalModifier_Routing'
p30420
S'(-89150)'
p30421
sS'DAQmxErrorPALMemoryConfigurationFault'
p30422
S'(-50350)'
p30423
sS'DAQmxErrorDuplicatePhysicalChansNotSupported'
p30424
S'(-200072)'
p30425
sS'DAQmxErrorCantSavePerLineConfigDigChanSoInteractiveEditsAllowed'
p30426
S'(-200922)'
p30427
sS'DAQmx_AI_Thrmcpl_CJCSrc'
p30428
S'0x1035'
p30429
sS'DAQmx_AI_ResolutionUnits'
p30430
S'0x1764'
p30431
sS'DAQmxErrorInvalidJumperedAttr'
p30432
S'(-200259)'
p30433
sS'DAQmxErrorPrptyGetSpecdActiveItemFailedDueToDifftValues'
p30434
S'(-200708)'
p30435
sS'DAQmx_Val_ZeroVolts'
p30436
S'12526'
p30437
sS'DAQmxErrorSuppliedVoltageDataOutsideSpecifiedRange'
p30438
S'(-200075)'
p30439
sS'DAQmxErrorReversePolyOrderNotPositive'
p30440
S'(-200402)'
p30441
sS'_NI_uInt32_DEFINED_'
p30442
g28662
sS'DAQmxWarningPALFunctionNotFound'
p30443
S'(50255)'
p30444
sS'DAQmx_AnlgWin_RefTrig_Top'
p30445
S'0x1429'
p30446
sS'DAQmxErrorInvalidCalConstOffsetDACValue'
p30447
S'(-200517)'
p30448
sS'DAQmxErrorPropertyValNotValidTermName'
p30449
S'(-200354)'
p30450
sS'DAQmx_CI_GPS_SyncMethod'
p30451
S'0x1092'
p30452
sS'DAQmx_Val_Lvl'
p30453
S'10210'
p30454
sS'DAQmxErrorExpectedTerminatorInList'
p30455
S'(-200063)'
p30456
sS'DAQmxErrorInvalidSampModeForPositionMeas'
p30457
S'(-200813)'
p30458
sS'DAQmx_Exported_SampClk_Pulse_Polarity'
p30459
S'0x1664'
p30460
sS'DAQmx_AI_MemMapEnable'
p30461
S'0x188C'
p30462
sS'DAQmx_Val_AboveLvl'
p30463
S'10093'
p30464
sS'DAQmxErrorTEDSDoesNotContainPROM'
p30465
S'(-200822)'
p30466
sS'DAQmx_Val_OnBrdMemNotFull'
p30467
S'10242'
p30468
sS'DAQmxErrorRoutingDestTermPXIChassisNotIdentified'
p30469
S'(-200699)'
p30470
sS'DAQmxErrorIncorrectPassword'
p30471
S'(-200110)'
p30472
sS'DAQmxErrorGenStoppedToPreventIntermediateBufferRegenOfOldSamples'
p30473
S'(-200291)'
p30474
sS'DAQmxErrorWriteFailsBufferSizeAutoConfigured'
p30475
S'(-200547)'
p30476
sS'DAQmx_AI_StrainGage_Cfg'
p30477
S'0x0982'
p30478
sS'DAQmx_Exported_CtrOutEvent_Pulse_Polarity'
p30479
S'0x1718'
p30480
sS'DAQmxErrorResourceNotInPool_Routing'
p30481
S'(-88708)'
p30482
sS'DAQmx_Val_AccelUnit_g'
p30483
S'10186'
p30484
sS'DAQmx_Val_CountEdges'
p30485
S'10125'
p30486
sS'DAQmx_CI_Encoder_BInput_DigSync_Enable'
p30487
S'0x2204'
p30488
sS'DAQmx_Val_Switch_Topology_1161_8_SPDT'
p30489
S'"1161/8-SPDT"'
p30490
sS'DAQmxErrorSwitchChanInUse'
p30491
S'(-200200)'
p30492
sS'DAQmxErrorPALDispatcherAlreadyExported'
p30493
S'(-50500)'
p30494
sS'DAQmx_CI_AngEncoder_InitialAngle'
p30495
S'0x0881'
p30496
sS'DAQmxErrorChanSizeTooBigForU32PortWrite'
p30497
S'(-200566)'
p30498
sS'DAQmx_Val_Switch_Topology_1163R_Octal_4x1_Mux'
p30499
S'"1163R/Octal 4x1 Mux"'
p30500
sS'DAQmx_CI_Encoder_AInput_DigFltr_Enable'
p30501
S'0x21FB'
p30502
sS'DAQmxErrorBuiltInCJCSrcNotSupported'
p30503
S'(-200576)'
p30504
sS'DAQmxErrorCouldNotConnectToServer_Routing'
p30505
S'(-88900)'
p30506
sS'DAQmxErrorPALBadDataSize'
p30507
S'(-50005)'
p30508
sS'DAQmx_AnlgEdge_RefTrig_Src'
p30509
S'0x1424'
p30510
sS'DAQmxWarningReadOffsetCoercion'
p30511
S'(200019)'
p30512
sS'DAQmxErrorSelfTestFailed'
p30513
S'(-200020)'
p30514
sS'DAQmx_AI_LVDT_SensitivityUnits'
p30515
S'0x219A'
p30516
sS'DAQmx_Val_TwoPulseCounting'
p30517
S'10313'
p30518
sS'DAQmxErrorUnableToLocateErrorResources'
p30519
S'(-200500)'
p30520
sS'DAQmxErrorPALBadWriteCount'
p30521
S'(-50014)'
p30522
sS'DAQmxErrorPasswordRequired'
p30523
S'(-200111)'
p30524
sS'DAQmxErrorSensorValTooLow'
p30525
S'(-200536)'
p30526
sS'DAQmx_Val_Freq_Voltage'
p30527
S'10181'
p30528
sS'DAQmxErrorStartTrigDigPatternChanNotTristated'
p30529
S'(-200886)'
p30530
sS'DAQmxErrorScaledMinEqualMax'
p30531
S'(-200603)'
p30532
sS'DAQmx_Val_InsideWin'
p30533
S'10199'
p30534
sS'DAQmxErrorDACUnderflow'
p30535
S'(-200018)'
p30536
sS'DAQmxErrorCannotDetectChangesWhenTristateIsFalse'
p30537
S'(-200730)'
p30538
sS'DAQmx_Val_Switch_Topology_1127_2_Wire_4x8_Matrix'
p30539
S'"1127/2-Wire 4x8 Matrix"'
p30540
sS'DAQmx_Val_LeavingWin'
p30541
S'10208'
p30542
sS'DAQmxErrorIdentifierInUse'
p30543
S'(-201028)'
p30544
sS'DAQmx_Val_LeftJustified'
p30545
S'10209'
p30546
sS'DAQmx_Val_AnlgEdge'
p30547
S'10099'
p30548
sS'DAQmxErrorCalibrationSessionAlreadyOpen'
p30549
S'(-200108)'
p30550
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_4x64_Matrix'
p30551
S'"1129/2-Wire 4x64 Matrix"'
p30552
sS'DAQmx_DelayFromSampClk_DelayUnits'
p30553
S'0x1304'
p30554
sS'DAQmxErrorPALFunctionObsolete'
p30555
S'(-50254)'
p30556
sS'DAQmx_Val_Switch_Topology_2501_1_Wire_48x1_Amplified_Mux'
p30557
S'"2501/1-Wire 48x1 Amplified Mux"'
p30558
sS'DAQmxErrorDifftInternalAIInputSrcs'
p30559
S'(-200677)'
p30560
sS'DAQmx_AI_Accel_Units'
p30561
S'0x0673'
p30562
sS'DAQmxErrorPALMemoryBlockCheckFailed'
p30563
S'(-50354)'
p30564
sS'DAQmxErrorDeviceIDNotSpecifiedInList'
p30565
S'(-200055)'
p30566
sS'DAQmxErrorBufferedAndDataXferPIO'
p30567
S'(-200847)'
p30568
sS'DAQmx_Val_GroupByChannel'
p30569
g28763
sS'DAQmxErrorUnexpectedIDFollowingSwitchOpInList'
p30570
S'(-200529)'
p30571
sS'DAQmxErrorCAPISyncCallbackNotSupportedOnThisPlatform'
p30572
S'(-200942)'
p30573
sS'DAQmx_Exported_RdyForXferEvent_OutputTerm'
p30574
S'0x22B5'
p30575
sS'DAQmxErrorDACAllowConnToGndNotSupportedByDevWhenRefSrcExt'
p30576
S'(-200974)'
p30577
sS'DAQmx_Val_GroupByScanNumber'
p30578
g28857
sS'DAQmxErrorAnalogMultiSampWriteNotSupported'
p30579
S'(-200539)'
p30580
sS'DAQmxErrorOffsetTooSmall'
p30581
S'(-200268)'
p30582
sS'DAQmx_Val_AdvCmpltEvent'
p30583
S'12492'
p30584
sS'DAQmxErrorScriptHasInvalidCharacter'
p30585
S'(-200023)'
p30586
sS'DAQmx_Val_10MHzRefClock'
p30587
S'12536'
p30588
sS'DAQmxErrorPALSocketListenerAlreadyRegistered'
p30589
S'(-50501)'
p30590
sS'DAQmxErrorChangeDetectionOutputTermNotSupportedGivenTimingType'
p30591
S'(-200914)'
p30592
sS'DAQmxErrorInvalidSubsetLengthWithinLoopInScript'
p30593
S'(-200249)'
p30594
sS'DAQmxErrorSwitchOperationNotSupported'
p30595
S'(-200193)'
p30596
sS'DAQmxWarningPALResourceNotInitialized'
p30597
S'(50104)'
p30598
sS'DAQmxErrorActivePhysChanNotSpecdWhenGetting1LinePrpty'
p30599
S'(-200624)'
p30600
sS'DAQmxErrorGetPropertyNotOutputBufferedTask'
p30601
S'(-200454)'
p30602
sS'DAQmxErrorPrimingCfgFIFO'
p30603
S'(-200329)'
p30604
sS'DAQmx_Val_Switch_Topology_2576_Independent'
p30605
S'"2576/Independent"'
p30606
sS'DAQmx_AO_Gain'
p30607
S'0x0118'
p30608
sS'DAQmxErrorDataVoltageLowAndHighIncompatible'
p30609
S'(-200902)'
p30610
sS'DAQmxErrorTooManyEventsGenerated'
p30611
S'(-200992)'
p30612
sS'DAQmxError2OutputPortCombinationGivenSampTimingType653x'
p30613
S'(-200930)'
p30614
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_8x32_Matrix'
p30615
S'"1130/1-Wire 8x32 Matrix"'
p30616
sS'DAQmxErrorVirtualChanDoesNotExist'
p30617
S'(-200488)'
p30618
sS'DAQmx_Val_SampleClock'
p30619
S'12487'
p30620
sS'DAQmxErrorProcedureNameExpectedInScript'
p30621
S'(-200025)'
p30622
sS'DAQmx_Val_Period'
p30623
S'10256'
p30624
sS'DAQmxErrorTrigBusLineNotAvail'
p30625
S'(-200226)'
p30626
sS'DAQmx_AI_Accel_Sensitivity'
p30627
S'0x0692'
p30628
sS'DAQmxErrorReferenceFrequencyInvalid'
p30629
S'(-200156)'
p30630
sS'DAQmxErrorPrescalerNot1ForInputTerminal'
p30631
S'(-200841)'
p30632
sS'DAQmxErrorTEDSTemplateParametersNotSupported'
p30633
S'(-200754)'
p30634
sS'DAQmxErrorActivePhysChanTooManyLinesSpecdWhenGettingPrpty'
p30635
S'(-200625)'
p30636
sS'DAQmxErrorMoreThanOneMatchForSpecdDevice'
p30637
S'(-201043)'
p30638
sS'DAQmxErrorLocalChannelSpecdWithNoParentTask'
p30639
S'(-201073)'
p30640
sS'DAQmxErrorReversePowerProtectionActivated'
p30641
S'(-200617)'
p30642
sS'DAQmx_Val_Switch_Topology_2593_Independent'
p30643
S'"2593/Independent"'
p30644
sS'DAQmxErrorHWTimedSinglePointAndDataXferNotProgIO'
p30645
S'(-200996)'
p30646
sS'DAQmxErrorOnlyFrontEndChanOpsDuringScan'
p30647
S'(-200377)'
p30648
sS'DAQmxErrorMultScanOpsInOneChassis'
p30649
S'(-200619)'
p30650
sS'DAQmx_Scale_Map_ScaledMax'
p30651
S'0x1229'
p30652
sS'DAQmxErrorPreScaledMinEqualMax'
p30653
S'(-200602)'
p30654
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_4x64_Matrix'
p30655
S'"1130/1-Wire 4x64 Matrix"'
p30656
sS'DAQmx_PauseTrig_Type'
p30657
S'0x1366'
p30658
sS'DAQmx_SwitchDev_Settled'
p30659
S'0x1243'
p30660
sS'DAQmx_AnlgWin_PauseTrig_Top'
p30661
S'0x1376'
p30662
sS'DAQmx_Val_FiniteSamps'
p30663
S'10178'
p30664
sS'DAQmxErrorInvalidTimeFormat'
p30665
S'(-201036)'
p30666
sS'DAQmxErrorPALFeatureDisabled'
p30667
S'(-50265)'
p30668
sS'DAQmx_SyncPulse_MinDelayToStart'
p30669
S'0x223F'
p30670
sS'DAQmx_DelayFromSampClk_Delay'
p30671
S'0x1317'
p30672
sS'DAQmxErrorZeroForwardPolyScaleCoeffs'
p30673
S'(-200407)'
p30674
sS'DAQmx_Val_LossyLSBRemoval'
p30675
S'12556'
p30676
sS'DAQmxErrorInvalidAIGainCalConst'
p30677
S'(-200718)'
p30678
sS'DAQmx_CI_AngEncoder_PulsesPerRev'
p30679
S'0x0875'
p30680
sS'DAQmxErrorChanCalTableNumScaledNotEqualNumPrescaledVals'
p30681
S'(-200938)'
p30682
sS'DAQmxErrorInterconnectLineReserved'
p30683
S'(-54010)'
p30684
sS'DAQmxErrorChanCalTableScaledValsNotSpecd'
p30685
S'(-200937)'
p30686
sS'DAQmx_Val_Switch_Topology_1130_2_Wire_Quad_32x1_Mux'
p30687
S'"1130/2-Wire Quad 32x1 Mux"'
p30688
sS'DAQmx_ExtCal_RecommendedInterval'
p30689
S'0x1868'
p30690
sS'DAQmx_Val_Diff'
p30691
S'10106'
p30692
sS'DAQmx_ArmStartTrig_Type'
p30693
S'0x1414'
p30694
sS'DAQmx_Val_AnlgLvl'
p30695
S'10101'
p30696
sS'DAQmx_Val_OnDemand'
p30697
S'10390'
p30698
sS'DAQmx_AI_SampAndHold_Enable'
p30699
S'0x181A'
p30700
sS'DAQmx_PersistedChan_Author'
p30701
S'0x22D0'
p30702
sS'DAQmxErrorNULLPtr'
p30703
S'(-200604)'
p30704
sS'DAQmxWarningRateViolatesMinADCRate'
p30705
S'(200035)'
p30706
sS'DAQmx_Exported_StartTrig_OutputTerm'
p30707
S'0x0584'
p30708
sS'DAQmxErrorInvalidCloseAction'
p30709
S'(-200440)'
p30710
sS'DAQmxErrorInvalidDigDataWrite'
p30711
S'(-200562)'
p30712
sS'DAQmxErrorCannotPerformOpWhenTaskNotRunning'
p30713
S'(-200475)'
p30714
sS'DAQmxErrorChangeDetectionChanNotTristated'
p30715
S'(-200925)'
p30716
sS'DAQmxErrorVirtualChanNameUsed'
p30717
S'(-200171)'
p30718
sS'DAQmx_Val_Switch_Topology_1195_Quad_4x1_Mux'
p30719
S'"1195/Quad 4x1 Mux"'
p30720
sS'DAQmxErrorFailedToEnableHighSpeedInputClock'
p30721
S'(-200627)'
p30722
sS'DAQmx_AO_IdleOutputBehavior'
p30723
S'0x2240'
p30724
sS'DAQmx_Val_Volts'
p30725
S'10348'
p30726
sS'DAQmx_Dev_PCI_BusNum'
p30727
S'0x2327'
p30728
sS'DAQmxErrorCantSaveChanWithPolyCalScaleAndAllowInteractiveEdit'
p30729
S'(-200977)'
p30730
sS'DAQmx_WatchdogExpirTrig_Type'
p30731
S'0x21A3'
p30732
sS'DAQmxErrorRoutingDestTermPXIStarInSlot2'
p30733
S'(-200701)'
p30734
sS'DAQmxErrorValueFoundInInvalidColumn'
p30735
S'(-201066)'
p30736
sS'DAQmxErrorPALBadReadMode'
p30737
S'(-50009)'
p30738
sS'DAQmxErrorRouteSrcAndDestSame'
p30739
S'(-200326)'
p30740
sS'DAQmxErrorInvalidCalVoltageForGivenGain'
p30741
S'(-200750)'
p30742
sS'DAQmxErrorExtCalAdjustExtRefVoltageFailed'
p30743
S'(-200546)'
p30744
sS'DAQmxErrorCantUsePort1AloneGivenSampTimingTypeOn653x'
p30745
S'(-200899)'
p30746
sS'DAQmx_Scale_Map_PreScaledMin'
p30747
S'0x1232'
p30748
sS'DAQmxErrorSyncNoDevSampClkTimebaseOrSyncPulseInPXISlot2'
p30749
S'(-200852)'
p30750
sS'DAQmx_Val_Switch_Topology_1128_2_Wire_32x1_Mux'
p30751
S'"1128/2-Wire 32x1 Mux"'
p30752
sS'DAQmx_Val_5Wire'
p30753
g29416
sS'DAQmx_Val_Switch_Topology_1128_4_Wire_16x1_Mux'
p30754
S'"1128/4-Wire 16x1 Mux"'
p30755
sS'DAQmx_AI_RTD_R0'
p30756
S'0x1030'
p30757
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_Quad_64x1_Mux'
p30758
S'"1130/1-Wire Quad 64x1 Mux"'
p30759
sS'DAQmxErrorPALMessageUnderflow'
p30760
S'(-50651)'
p30761
sS'DAQmxErrorPALBusError'
p30762
S'(-50413)'
p30763
sS'DAQmx_Val_AandB'
p30764
S'12515'
p30765
sS'DAQmxErrorInvalidCharInPattern'
p30766
S'(-200496)'
p30767
sS'DAQmxErrorWaveformInScriptNotInMem'
p30768
S'(-200028)'
p30769
sS'DAQmx_AO_DAC_Ref_Val'
p30770
S'0x1832'
p30771
sS'DAQmxErrorCOWritePulseLowTicksNotSupported'
p30772
S'(-200689)'
p30773
sS'DAQmx_CI_GPS_SyncSrc'
p30774
S'0x1093'
p30775
sS'DAQmxErrorRepeatedPhysicalChan'
p30776
S'(-200371)'
p30777
sS'DAQmx_CO_CtrTimebase_DigFltr_TimebaseSrc'
p30778
S'0x2278'
p30779
sS'DAQmx_Watchdog_HasExpired'
p30780
S'0x21A8'
p30781
sS'DAQmxErrorEveryNSamplesAcqIntoBufferEventNotSupportedByDevice'
p30782
S'(-200981)'
p30783
sS'DAQmx_Val_CountDown'
p30784
S'10124'
p30785
sS'DAQmx_Val_Falling'
p30786
S'10171'
p30787
sS'DAQmxErrorChangeDetectionChanNotInTask'
p30788
S'(-200926)'
p30789
sS'DAQmxErrorLabVIEWInvalidTaskOrChans'
p30790
S'(-200428)'
p30791
sS'DAQmx_Hshk_DelayAfterXfer'
p30792
S'0x22C2'
p30793
sS'DAQmxErrorWatchdogExpirationStateNotEqualForLinesInPort'
p30794
S'(-200665)'
p30795
sS'DAQmx_PersistedChan_AllowInteractiveEditing'
p30796
S'0x22D1'
p30797
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_8x64_Matrix'
p30798
S'"2532/1-Wire 8x64 Matrix"'
p30799
sS'DAQmxErrorReferenceResistanceInvalid'
p30800
S'(-200155)'
p30801
sS'DAQmx_Val_Save_AllowInteractiveDeletion'
p30802
S'(1<<2)'
p30803
sS'DAQmx_DigEdge_StartTrig_DigFltr_Enable'
p30804
S'0x2223'
p30805
sS'DAQmxErrorPALTransferOverread'
p30806
S'(-50411)'
p30807
sS'DAQmx_CO_Pulse_LowTicks'
p30808
S'0x1171'
p30809
sS'DAQmx_RefTrig_Type'
p30810
S'0x1419'
p30811
sS'DAQmx_AO_OutputImpedance'
p30812
S'0x1490'
p30813
sS'DAQmx_CI_LinEncoder_DistPerPulse'
p30814
S'0x0911'
p30815
sS'DAQmx_Val_Switch_Topology_2565_16_SPST'
p30816
S'"2565/16-SPST"'
p30817
sS'DAQmx_CO_CtrTimebase_DigFltr_TimebaseRate'
p30818
S'0x2279'
p30819
sS'DAQmxErrorUnexpectedSwitchActionInList'
p30820
S'(-200065)'
p30821
sS'DAQmxErrorNoTEDSTerminalBlock'
p30822
S'(-200743)'
p30823
sS'DAQmxErrorUnexpectedIdentifierInFullySpecifiedPathInList'
p30824
S'(-200204)'
p30825
sS'DAQmx_Val_WaitForHandshakeTriggerDeassert'
p30826
S'12551'
p30827
sS'DAQmx_PersistedChan_AllowInteractiveDeletion'
p30828
S'0x22D2'
p30829
sS'DAQmxErrorResourceAlreadyReserved'
p30830
S'(-200022)'
p30831
sS'DAQmx_Val_SameAsSampTimebase'
p30832
S'10284'
p30833
sS'DAQmx_StartTrig_Delay'
p30834
S'0x1856'
p30835
sS'DAQmx_AO_Resolution'
p30836
S'0x182C'
p30837
sS'DAQmx_Val_Amps'
p30838
S'10342'
p30839
sS'DAQmx_Val_DoNotWrite'
p30840
S'12540'
p30841
sS'DAQmxErrorOddTotalBufferSizeToWrite'
p30842
S'(-200693)'
p30843
sS'DAQmxErrorActionSeparatorRequiredAfterBreakingConnectionInScanlist'
p30844
S'(-200637)'
p30845
sS'DAQmx_Val_B'
p30846
S'12514'
p30847
sS'DAQmx_Val_A'
p30848
S'12513'
p30849
sS'DAQmx_AI_Bridge_ShuntCal_GainAdjust'
p30850
S'0x193F'
p30851
sS'DAQmx_Val_Switch_Topology_2529_2_Wire_8x16_Matrix'
p30852
S'"2529/2-Wire 8x16 Matrix"'
p30853
sS'DAQmxErrorInvalidAOGainCalConst'
p30854
S'(-200720)'
p30855
sS'DAQmx_Val_High'
p30856
S'10192'
p30857
sS'DAQmxErrorWriteWhenTaskNotRunningCOTicks'
p30858
S'(-200876)'
p30859
sS'DAQmxErrorWriteRecoveryCannotKeepUpInHWTimedSinglePoint'
p30860
S'(-201021)'
p30861
sS'DAQmx_AI_Excit_UseMultiplexed'
p30862
S'0x2180'
p30863
sS'DAQmxErrorAOCallWriteBeforeStartForSampClkTimingType'
p30864
S'(-200858)'
p30865
sS'DAQmx_Val_g'
p30866
S'10186'
p30867
sS'DAQmxWarningPXIDevTempExceedsMaxOpTemp'
p30868
S'(200030)'
p30869
sS'DAQmxErrorSyncPulseMinDelayToStartNeededForExtSyncPulseSrc'
p30870
S'(-201091)'
p30871
sS'DAQmxErrorSignalEventAlreadyRegistered'
p30872
S'(-200949)'
p30873
sS'DAQmx_AnlgLvl_PauseTrig_Coupling'
p30874
S'0x2236'
p30875
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_4x128_Matrix'
p30876
S'"2532/1-Wire 4x128 Matrix"'
p30877
sS'DAQmxErrorLeadingSpaceInString'
p30878
S'(-200553)'
p30879
sS'DAQmxErrorInvalidRecordNum'
p30880
S'(-200410)'
p30881
sS'DAQmx_Interlocked_HshkTrig_AssertedLvl'
p30882
S'0x22B9'
p30883
sS'DAQmx_AI_ChanCal_OperatorName'
p30884
S'0x22A3'
p30885
sS'DAQmxErrorUnitsNotFromCustomScale'
p30886
S'(-200447)'
p30887
sS'DAQmx_Val_Task_Stop'
p30888
g28857
sS'DAQmx_Val_DigPattern'
p30889
S'10398'
p30890
sS'DAQmxErrorTEDSLinearMappingSlopeZero'
p30891
S'(-200764)'
p30892
sS'DAQmxErrorCtrExportSignalNotPossible'
p30893
S'(-200359)'
p30894
sS'DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo'
p30895
S'(-200136)'
p30896
sS'DAQmxErrorAttrCannotBeSet'
p30897
S'(-200231)'
p30898
sS'DAQmx_SampClk_DigFltr_Enable'
p30899
S'0x221E'
p30900
sS'DAQmxErrorSubsetOutsideWaveformInScript'
p30901
S'(-200030)'
p30902
sS'DAQmx_Val_BreakBeforeMake'
p30903
S'10110'
p30904
sS'DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseSrc'
p30905
S'0x222F'
p30906
sS'DAQmx_Val_NRSE'
p30907
S'10078'
p30908
sS'DAQmxErrorNoPolyScaleCoeffs'
p30909
S'(-200404)'
p30910
sS'DAQmx_Val_Temp_BuiltInSensor'
p30911
S'10311'
p30912
sS'DAQmxErrorPrescalerNot1ForTimebaseSrc'
p30913
S'(-200840)'
p30914
sS'DAQmx_Val_Switch_Topology_2529_2_Wire_Dual_4x16_Matrix'
p30915
S'"2529/2-Wire Dual 4x16 Matrix"'
p30916
sS'DAQmx_DI_NumLines'
p30917
S'0x2178'
p30918
sS'DAQmxErrorChansAlreadyConnected'
p30919
S'(-200184)'
p30920
sS'DAQmxErrorOutputBoardClkDCMBecameUnlocked'
p30921
S'(-200388)'
p30922
sS'DAQmxErrorDelayFromStartTrigTooLong'
p30923
S'(-200334)'
p30924
sS'DAQmxErrorInvalidCharInDigPatternString'
p30925
S'(-200901)'
p30926
sS'DAQmxErrorTrigAIMinAIMax'
p30927
S'(-200422)'
p30928
sS'DAQmx_CI_CtrTimebase_DigFltr_TimebaseSrc'
p30929
S'0x2273'
p30930
sS'DAQmx_PhysicalChan_TEDS_MfgID'
p30931
S'0x21DA'
p30932
sS'DAQmx_Buf_Input_BufSize'
p30933
S'0x186C'
p30934
sS'DAQmx_Val_ContSamps'
p30935
S'10123'
p30936
sS'DAQmx_Val_AHighBLow'
p30937
S'10041'
p30938
sS'DAQmx_CI_Freq_Term'
p30939
S'0x18A2'
p30940
sS'DAQmx_CI_SemiPeriod_DigFltr_Enable'
p30941
S'0x2219'
p30942
sS'DAQmx_Dev_DO_Lines'
p30943
S'0x2322'
p30944
sS'DAQmxErrorTooManyChans'
p30945
S'(-200168)'
p30946
sS'DAQmxErrorMultiRecWithRIS'
p30947
S'(-200416)'
p30948
sS'DAQmx_Val_Handshake'
p30949
S'10389'
p30950
sS'DAQmx_Val_Switch_Topology_2591_4x1_Mux'
p30951
S'"2591/4x1 Mux"'
p30952
sS'DAQmx_Val_FullBridge'
p30953
S'10182'
p30954
sS'DAQmxErrorMoreThanOneActiveChannelSpecified'
p30955
S'(-200097)'
p30956
sS'DAQmxErrorPALTransferAborted'
p30957
S'(-50405)'
p30958
sS'DAQmxErrorChanDuplicatedInPath'
p30959
S'(-200183)'
p30960
sS'DAQmxErrorInvalidCharInString'
p30961
S'(-200552)'
p30962
sS'DAQmxErrorChannelNameNotSpecifiedInList'
p30963
S'(-200056)'
p30964
sS'DAQmx_CO_Pulse_Time_InitialDelay'
p30965
S'0x18BC'
p30966
sS'DAQmx_Val_Switch_Topology_2593_16x1_Mux'
p30967
S'"2593/16x1 Mux"'
p30968
sS'DAQmxErrorSampClkTimebaseSrcInvalid'
p30969
S'(-201088)'
p30970
sS'DAQmx_Val_Switch_Topology_2570_40_SPDT'
p30971
S'"2570/40-SPDT"'
p30972
sS'DAQmxErrorMemMapEnabledForHWTimedNonBufferedAO'
p30973
S'(-200796)'
p30974
sS'DAQmx_AI_LVDT_Sensitivity'
p30975
S'0x0939'
p30976
sS'DAQmxErrorSensorValTooHigh'
p30977
S'(-200535)'
p30978
sS'DAQmxWarningPALBadWindowType'
p30979
S'(50016)'
p30980
sS'DAQmx_DigPattern_StartTrig_Src'
p30981
S'0x1410'
p30982
sS'DAQmxErrorPALComponentImageCorrupt'
p30983
S'(-50257)'
p30984
sS'DAQmxErrorTooManyPhysicalChansInList'
p30985
S'(-200071)'
p30986
sS'DAQmx_CI_PulseWidth_StartingEdge'
p30987
S'0x0825'
p30988
sS'DAQmxErrorGenerateOrFiniteWaitInstructionExpectedBeforeIfElseBlockInScript'
p30989
S'(-201007)'
p30990
sS'DAQmxErrorSampClkRateTooLowForDivDown'
p30991
S'(-200272)'
p30992
sS'DAQmx_Val_Sleep'
p30993
S'12547'
p30994
sS'DAQmxErrorFailedToAcquireCalData'
p30995
S'(-200697)'
p30996
sS'DAQmx_Dev_BusType'
p30997
S'0x2326'
p30998
sS'DAQmxErrorHystTrigLevelAIMin'
p30999
S'(-200421)'
p31000
sS'_NI_int32_DEFINED_'
p31001
g28662
sS'DAQmxErrorInconsistentUnitsSpecified'
p31002
S'(-200212)'
p31003
sS'DAQmxErrorSampClkRateDoesntMatchSampClkSrc'
p31004
S'(-201002)'
p31005
sS'DAQmx_Val_Inches'
p31006
S'10379'
p31007
sS'DAQmxSuccess'
p31008
S'(0)'
p31009
sS'DAQmxErrorInvalidRoutingSourceTerminalName'
p31010
S'(-200040)'
p31011
sS'DAQmx_Exported_20MHzTimebase_OutputTerm'
p31012
S'0x1657'
p31013
sS'DAQmx_Val_GPS_Timestamp'
p31014
S'10362'
p31015
sS'DAQmx_AI_ForceReadFromChan'
p31016
S'0x18F8'
p31017
sS'DAQmx_AI_ChanCal_Table_ScaledVals'
p31018
S'0x229E'
p31019
sS'DAQmxErrorGenStoppedToPreventRegenOfOldSamples'
p31020
S'(-200290)'
p31021
sS'DAQmxErrorCannotReadWhenAutoStartFalseOnDemandAndTaskNotRunning'
p31022
S'(-200832)'
p31023
sS'DAQmxErrorInvalidInstallation'
p31024
S'(-200683)'
p31025
sS'DAQmxErrorExtMasterTimebaseRateNotSpecified'
p31026
S'(-200304)'
p31027
sS'DAQmxErrorAccessorySettingNotApplicable'
p31028
S'(-201048)'
p31029
sS'DAQmx_Val_BelowLvl'
p31030
S'10107'
p31031
sS'DAQmx_AnlgEdge_RefTrig_Coupling'
p31032
S'0x2235'
p31033
sS'DAQmxErrorInputBufferSizeNotEqualSampsPerChanForFiniteSampMode'
p31034
S'(-200737)'
p31035
sS'DAQmx_AnlgEdge_RefTrig_Hyst'
p31036
S'0x1421'
p31037
sS'DAQmxErrorEventOutputTermIncludesTrigSrc'
p31038
S'(-200952)'
p31039
sS'DAQmxErrorInvalidSubsetLengthInScript'
p31040
S'(-200032)'
p31041
sS'DAQmxWarningDevNotSelfCalibratedWithDAQmx'
p31042
S'(200016)'
p31043
sS'DAQmxErrorExcitationNotSupportedWhenTermCfgDiff'
p31044
S'(-200817)'
p31045
sS'DAQmxErrorChanSizeTooBigForU16PortWrite'
p31046
S'(-200879)'
p31047
sS'DAQmx_Val_FallingSlope'
p31048
S'10171'
p31049
sS'DAQmxErrorInvalidCfgCalAdjustMainPathPostAmpGainAndOffset'
p31050
S'(-200512)'
p31051
sS'DAQmxErrorCouldNotReserveRequestedTrigLine_Routing'
p31052
S'(-89126)'
p31053
sS'DAQmxErrorInvalidAccessoryName'
p31054
S'(-201044)'
p31055
sS'DAQmx_Val_ResetTimer'
p31056
g28763
sS'DAQmxErrorNoChangeDetectOnNonInputDigLineForDev'
p31057
S'(-200798)'
p31058
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_Octal_32x1_Mux'
p31059
S'"1130/1-Wire Octal 32x1 Mux"'
p31060
sS'DAQmx_DI_Tristate'
p31061
S'0x1890'
p31062
sS'DAQmxErrorPALDiskFull'
p31063
S'(-50203)'
p31064
sS'DAQmxErrorExtCalNotComplete'
p31065
S'(-200443)'
p31066
sS'DAQmxErrorTaskReferencesMissingLocalChannel'
p31067
S'(-201072)'
p31068
sS'DAQmx_AO_ResolutionUnits'
p31069
S'0x182B'
p31070
sS'DAQmxErrorOutputBufferEmpty'
p31071
S'(-200462)'
p31072
sS'DAQmxErrorInvalidHWProductNumber'
p31073
S'(-201058)'
p31074
sS'DAQmx_Val_Switch_Topology_2594_4x1_Mux'
p31075
S'"2594/4x1 Mux"'
p31076
sS'DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherTask'
p31077
S'(-200775)'
p31078
sS'DAQmxErrorOutputCantStartChangedBufferSize'
p31079
S'(-200567)'
p31080
sS'DAQmxErrorFunctionNotInLibrary'
p31081
S'(-200091)'
p31082
sS'DAQmxErrorPALFileOpenFault'
p31083
S'(-50204)'
p31084
sS'DAQmxErrorCannotUnregisterDAQmxSoftwareEventWhileTaskIsRunning'
p31085
S'(-200986)'
p31086
sS'DAQmxWarningPALComponentInitializationFault'
p31087
S'(50258)'
p31088
sS'DAQmxErrorNonbufferedReadMoreThanSampsPerChan'
p31089
S'(-200655)'
p31090
sS'DAQmx_Val_Action_Commit'
p31091
g28763
sS'DAQmxErrorInvalidExtTrigImpedance'
p31092
S'(-200426)'
p31093
sS'DAQmxErrorResourcesInUseForRoute_Routing'
p31094
S'(-89137)'
p31095
sS'DAQmxErrorDifferentDITristateValsForChansInTask'
p31096
S'(-200724)'
p31097
sS'DAQmx_Val_Pascals'
p31098
S'10081'
p31099
sS'DAQmxErrorStartFailedDueToWriteFailure'
p31100
S'(-200946)'
p31101
sS'DAQmxErrorTooManyChansForAnalogRefTrig'
p31102
S'(-200264)'
p31103
sS'DAQmxErrorChangeDetectionRisingAndFallingEdgeChanDontMatch'
p31104
S'(-200893)'
p31105
sS'DAQmxWarningAISampRateTooLow'
p31106
S'(200017)'
p31107
sS'DAQmx_CI_Period_DigFltr_TimebaseRate'
p31108
S'0x21EF'
p31109
sS'DAQmxErrorStartTrigConflictWithCOHWTimedSinglePt'
p31110
S'(-200787)'
p31111
sS'DAQmxErrorDigOutputOverrun'
p31112
S'(-200716)'
p31113
sS'DAQmx_RealTime_ConvLateErrorsToWarnings'
p31114
S'0x22EE'
p31115
sS'DAQmx_Val_RSE'
p31116
S'10083'
p31117
sS'DAQmx_Val_PathStatus_Unsupported'
p31118
S'10433'
p31119
sS'DAQmxWarningPALFeatureNotSupported'
p31120
S'(50256)'
p31121
sS'DAQmxErrorCannotHandshakeWhenTristateIsFalse'
p31122
S'(-200729)'
p31123
sS'DAQmx_Dev_ProductNum'
p31124
S'0x231D'
p31125
sS'DAQmxErrorFunctionNotSupportedForDeviceTasks'
p31126
S'(-200092)'
p31127
sS'DAQmxErrorTrigWhenOnDemandSampTiming'
p31128
S'(-200262)'
p31129
sS'DAQmxErrorPALBadAddressSpace'
p31130
S'(-50017)'
p31131
sS'DAQmx_Exported_AIConvClk_OutputTerm'
p31132
S'0x1687'
p31133
sS'DAQmx_Val_PCCard'
p31134
S'12585'
p31135
sS'DAQmxErrorDACRngHighNotEqualRefVal'
p31136
S'(-200448)'
p31137
sS'DAQmxErrorCJCChanNotSpecd'
p31138
S'(-200360)'
p31139
sS'DAQmx_Val_Switch_Topology_1130_Independent'
p31140
S'"1130/Independent"'
p31141
sS'DAQmx_Val_ALowBLow'
p31142
S'10043'
p31143
sS'__CFUNC'
p31144
S'__stdcall'
p31145
sS'DAQmxErrorPLLNotLocked'
p31146
S'(-201015)'
p31147
sS'DAQmxErrorSCXIModuleNotFound'
p31148
S'(-200073)'
p31149
sS'DAQmx_Val_Switch_Topology_2530_2_Wire_4x16_Matrix'
p31150
S'"2530/2-Wire 4x16 Matrix"'
p31151
sS'DAQmx_CI_OutputState'
p31152
S'0x0149'
p31153
sS'DAQmxErrorRoutingHardwareBusy'
p31154
S'(-200043)'
p31155
sS'DAQmx_Val_ChangeDetectionEvent'
p31156
S'12511'
p31157
sS'DAQmxErrorInvalidTimingSrcDueToSampTimingType'
p31158
S'(-200785)'
p31159
sS'DAQmx_AO_Current_Units'
p31160
S'0x1109'
p31161
sS'DAQmxWarningPALSyncAbandoned'
p31162
S'(50551)'
p31163
sS'DAQmx_AI_Min'
p31164
S'0x17DE'
p31165
sS'DAQmxErrorDuplicateChanNameInCfgFile'
p31166
S'(-201081)'
p31167
sS'DAQmxErrorChansCantAppearInSameTask'
p31168
S'(-200713)'
p31169
sS'DAQmxErrorIntExcitSrcNotAvailable'
p31170
S'(-200161)'
p31171
sS'DAQmx_Val_mVoltsPerVoltPerDegree'
p31172
S'12507'
p31173
sS'DAQmx_AI_ChanCal_EnableCal'
p31174
S'0x2298'
p31175
sS'DAQmx_Read_ChannelsToRead'
p31176
S'0x1823'
p31177
sS'DAQmx_AI_StrainGage_GageFactor'
p31178
S'0x0994'
p31179
sS'DAQmx_Read_CurrReadPos'
p31180
S'0x1221'
p31181
sS'DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseRate'
p31182
S'0x21F4'
p31183
sS'DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseRate'
p31184
S'0x2230'
p31185
sS'DAQmxErrorInvalidTerm_Routing'
p31186
S'(-89129)'
p31187
sS'DAQmxErrorCppCantRemoveOtherObjectsEventHandler'
p31188
S'(-200588)'
p31189
sS'DAQmxErrorCantSetPowerupStateOnDigInChan'
p31190
S'(-200650)'
p31191
sS'DAQmx_CI_TwoEdgeSep_FirstTerm'
p31192
S'0x18AD'
p31193
sS'DAQmxErrorMinNotLessThanMax'
p31194
S'(-200082)'
p31195
sS'DAQmx_CI_TwoEdgeSep_Second_DigFltr_MinPulseWidth'
p31196
S'0x2215'
p31197
sS'DAQmx_DigLvl_PauseTrig_DigSync_Enable'
p31198
S'0x222C'
p31199
sS'DAQmxErrorInvalidTopology'
p31200
S'(-200198)'
p31201
sS'DAQmxErrorCAPINoExtendedErrorInfoAvailable'
p31202
S'(-200399)'
p31203
sS'DAQmx_Val_Switch_Topology_2593_Dual_4x1_Terminated_Mux'
p31204
S'"2593/Dual 4x1 Terminated Mux"'
p31205
sS'DAQmxErrorInvalidOutputVoltageAtSampClkRate'
p31206
S'(-200392)'
p31207
sS'DAQmx_Exported_AdvCmpltEvent_OutputTerm'
p31208
S'0x1651'
p31209
sS'DAQmx_AI_Bridge_Cfg'
p31210
S'0x0087'
p31211
sS'DAQmxWarningSampClkRateAboveDevSpecs'
p31212
S'(200036)'
p31213
sS'DAQmxErrorMoreThanOneTerminal'
p31214
S'(-200098)'
p31215
sS'DAQmxErrorDuplicateDeviceName_Routing'
p31216
S'(-88715)'
p31217
sS'DAQmxErrorConnectOperatorInvalidAtPointInList'
p31218
S'(-200066)'
p31219
sS'DAQmx_AnlgEdge_StartTrig_Lvl'
p31220
S'0x1396'
p31221
sS'DAQmxWarningPALResourceInitialized'
p31222
S'(50105)'
p31223
sS'DAQmxErrorPhysicalChanNotOnThisConnector'
p31224
S'(-200851)'
p31225
sS'DAQmxErrorAttributeInconsistentAcrossRepeatedPhysicalChannels'
p31226
S'(-200128)'
p31227
sS'DAQmxErrorChanSizeTooBigForU8PortWrite'
p31228
S'(-200565)'
p31229
sS'DAQmx_CI_CtrTimebaseMasterTimebaseDiv'
p31230
S'0x18B3'
p31231
sS'DAQmx_Val_20MHzTimebaseClock'
p31232
S'12486'
p31233
sS'DAQmxErrorBufferAndDataXferMode'
p31234
S'(-200216)'
p31235
sS'_NI_float64_DEFINED_'
p31236
g28662
sS'DAQmx_AO_DAC_Ref_ExtSrc'
p31237
S'0x2252'
p31238
sS'DAQmx_Val_3Wire'
p31239
g29263
sS'DAQmx_Val_ActiveDrive'
p31240
S'12573'
p31241
sS'DAQmx_Val_Ticks'
p31242
S'10304'
p31243
sS'_NI_int64_DEFINED_'
p31244
g28662
sS'DAQmxErrorIntegerExpectedInScript'
p31245
S'(-200247)'
p31246
sS'DAQmxErrorCOWritePulseLowTimeOutOfRange'
p31247
S'(-200687)'
p31248
sS'DAQmx_SampClk_Timebase_MasterTimebaseDiv'
p31249
S'0x1305'
p31250
sS'DAQmxErrorSuitableTimebaseNotFoundTimeCombo'
p31251
S'(-200137)'
p31252
sS'DAQmxErrorCJCChanAlreadyUsed'
p31253
S'(-200352)'
p31254
sS'DAQmxErrorChanAlreadyInTask'
p31255
S'(-200489)'
p31256
sS'DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthBySameTask1PerDev'
p31257
S'(-200807)'
p31258
sS'DAQmxErrorPropertyNotSupportedForScaleType'
p31259
S'(-200601)'
p31260
sS'DAQmxWarningPALBadMode'
p31261
S'(50006)'
p31262
sS'DAQmx_DigEdge_StartTrig_DigFltr_TimebaseSrc'
p31263
S'0x2225'
p31264
sS'DAQmx_Val_Switch_Topology_2503_2_Wire_Quad_6x1_Mux'
p31265
S'"2503/2-Wire Quad 6x1 Mux"'
p31266
sS'DAQmxErrorWriteToTEDSFailed'
p31267
S'(-200836)'
p31268
sS'DAQmx_CO_Pulse_LowTime'
p31269
S'0x18BB'
p31270
sS'DAQmxErrorHystTrigLevelAIMax'
p31271
S'(-200425)'
p31272
sS'DAQmx_RefTrig_PretrigSamples'
p31273
S'0x1445'
p31274
sS'DAQmxErrorPropertyNotSupportedForTimingSrc'
p31275
S'(-200739)'
p31276
sS'DAQmx_Val_Switch_Topology_1193_Dual_8x1_Terminated_Mux'
p31277
S'"1193/Dual 8x1 Terminated Mux"'
p31278
sS'DAQmxErrorTypeUnknown'
p31279
S'(-54020)'
p31280
sS'DAQmxErrorCounterMaxMinRangeFreq'
p31281
S'(-200139)'
p31282
sS'DAQmx_Val_NoAction'
p31283
S'10227'
p31284
sS'DAQmxWarningPALBadSelector'
p31285
S'(50003)'
p31286
sS'DAQmxErrorNULLPtrForC_Api'
p31287
S'(-200230)'
p31288
sS'DAQmx_AnlgLvl_PauseTrig_Lvl'
p31289
S'0x1369'
p31290
sS'DAQmx_Val_Closed'
p31291
S'10438'
p31292
sS'DAQmxErrorPhysicalChansForChangeDetectionAndPatternMatch653x'
p31293
S'(-200892)'
p31294
sS'DAQmxErrorPowerupStateNotSpecdForEntirePort'
p31295
S'(-200652)'
p31296
sS'DAQmxErrorReadNotCompleteBeforeSampClk'
p31297
S'(-209800)'
p31298
sS'DAQmx_Val_Switch_Topology_1193_16x1_Terminated_Mux'
p31299
S'"1193/16x1 Terminated Mux"'
p31300
sS'DAQmx_Exported_CtrOutEvent_Toggle_IdleState'
p31301
S'0x186A'
p31302
sS'DAQmxErrorPolyCoeffsInconsistent'
p31303
S'(-200537)'
p31304
sS'DAQmxErrorOperationTimedOut'
p31305
S'(-200474)'
p31306
sS'DAQmxWarningUserDefInfoStringTooLong'
p31307
S'(200013)'
p31308
sS'DAQmxErrorLoadTaskFailsBecauseNoTimingOnDev'
p31309
S'(-200494)'
p31310
sS'DAQmxErrorIllegalAccessoryTypeForDeviceSpecd'
p31311
S'(-201046)'
p31312
sS'DAQmxErrorHardwareNotResponding'
p31313
S'(-200175)'
p31314
sS'DAQmxErrorInvalidTerm'
p31315
S'(-200254)'
p31316
sS'DAQmxErrorSampClkDCMLock'
p31317
S'(-200239)'
p31318
sS'DAQmxErrorPartialUseOfPhysicalLinesWithinPortNotSupported653x'
p31319
S'(-200898)'
p31320
sS'DAQmx_Exported_AdvTrig_Pulse_Width'
p31321
S'0x1648'
p31322
sS'DAQmx_AI_Bridge_ShuntCal_Enable'
p31323
S'0x0094'
p31324
sS'DAQmxErrorDoneEventAlreadyRegistered'
p31325
S'(-200950)'
p31326
sS'DAQmxErrorInvalidOptionForDigitalPortChannel'
p31327
S'(-200376)'
p31328
sS'DAQmx_StartTrig_Retriggerable'
p31329
S'0x190F'
p31330
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Sixteen_2x16_Matrix'
p31331
S'"2532/1-Wire Sixteen 2x16 Matrix"'
p31332
sS'DAQmx_Watchdog_Timeout'
p31333
S'0x21A9'
p31334
sS'DAQmxErrorInvalidNumCalADCReadsToAverage'
p31335
S'(-200515)'
p31336
sS'DAQmxWarningPALTransferAborted'
p31337
S'(50405)'
p31338
sS'DAQmxWarningDeviceMayShutDownDueToHighTemp'
p31339
S'(200034)'
p31340
sS'DAQmxErrorTaskReferencesLocalChannelFromOtherTask'
p31341
S'(-201071)'
p31342
sS'DAQmxErrorCounterOverflow'
p31343
S'(-200141)'
p31344
sS'DAQmxErrorLinesUsedForHandshakingControlNotForStaticInput'
p31345
S'(-200727)'
p31346
sS'DAQmxErrorEveryNSamplesEventNotSupportedForNonBufferedTasks'
p31347
S'(-200848)'
p31348
sS'DAQmx_Exported_AdvTrig_Pulse_Polarity'
p31349
S'0x1646'
p31350
sS'DAQmxErrorHandshakeTrigTypeNotSupportedGivenTimingType'
p31351
S'(-200905)'
p31352
sS'DAQmxErrorTEDSMinElecValGEMaxElecVal'
p31353
S'(-200816)'
p31354
sS'DAQmxErrorCannotUpdatePulseGenProperty'
p31355
S'(-200301)'
p31356
sS'DAQmxErrorWaitModePropertyNotSupportedNonBuffered'
p31357
S'(-200923)'
p31358
sS'DAQmxErrorExtSyncPulseSrcCannotBeExported'
p31359
S'(-201092)'
p31360
sS'DAQmx_CI_PulseWidth_DigFltr_Enable'
p31361
S'0x220A'
p31362
sS'DAQmx_Val_Save_AllowInteractiveEditing'
p31363
S'(1<<1)'
p31364
sS'DAQmx_Val_WhenAcqComplete'
p31365
S'12546'
p31366
sS'DAQmxErrorHWObjectsFoundInFile'
p31367
S'(-201074)'
p31368
sS'DAQmx_Val_mVoltsPerVoltPerMillimeter'
p31369
S'12506'
p31370
sS'DAQmxErrorPALDeviceInitializationFault'
p31371
S'(-50303)'
p31372
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_256x1_Mux'
p31373
S'"1130/1-Wire 256x1 Mux"'
p31374
sS'DAQmxErrorResourcesInUseForInversion_Routing'
p31375
S'(-89134)'
p31376
sS'DAQmxErrorPALOSFault'
p31377
S'(-50202)'
p31378
sS'DAQmx_CI_CountEdges_CountDir_DigFltr_MinPulseWidth'
p31379
S'0x21F2'
p31380
sS'DAQmxErrorBufferWithWaitMode'
p31381
S'(-200691)'
p31382
sS'DAQmxErrorPALOSUnsupported'
p31383
S'(-50200)'
p31384
sS'DAQmx_DigEdge_ArmStartTrig_Edge'
p31385
S'0x1415'
p31386
sS'DAQmxErrorPALBadPointer'
p31387
S'(-50004)'
p31388
sS'DAQmxErrorResourcesInUseForProperty'
p31389
S'(-200353)'
p31390
sS'DAQmxErrorTriggerPolarityConflict'
p31391
S'(-200206)'
p31392
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_Dual_12x1_Mux'
p31393
S'"2501/2-Wire Dual 12x1 Mux"'
p31394
sS'DAQmxErrorDigFilterEnableSetWhenTristateIsFalse'
p31395
S'(-200732)'
p31396
sS'DAQmxErrorProductOfAOMaxAndGainTooLarge'
p31397
S'(-200267)'
p31398
sS'DAQmxErrorEveryNSampsEventIntervalZeroNotSupported'
p31399
S'(-200880)'
p31400
sS'DAQmxErrorInterconnectBusNotFound'
p31401
S'(-54002)'
p31402
sS'DAQmx_Val_Switch_Topology_2590_4x1_Mux'
p31403
S'"2590/4x1 Mux"'
p31404
sS'DAQmx_AI_Excit_ActualVal'
p31405
S'0x1883'
p31406
sS'DAQmxErrorDeviceRemoved'
p31407
S'(-200045)'
p31408
sS'DAQmx_DigPattern_StartTrig_Pattern'
p31409
S'0x2186'
p31410
sS'DAQmxErrorDSFReadyForStartClock'
p31411
S'(-200631)'
p31412
sS'DAQmxErrorInvalidNumericFormatSpecd'
p31413
S'(-201056)'
p31414
sS'DAQmx_AI_ChanCal_Table_PreScaledVals'
p31415
S'0x229D'
p31416
sS'DAQmxWarningPALTransferInProgress'
p31417
S'(50403)'
p31418
sS'DAQmxErrorEveryNSampsTransferredFromBufferEventNotSupportedByDevice'
p31419
S'(-200980)'
p31420
sS'DAQmx_CI_Min'
p31421
S'0x189D'
p31422
sS'DAQmx_Val_FromCustomScale'
p31423
S'10065'
p31424
sS'DAQmxErrorRuntimeAborting_Routing'
p31425
S'(-88710)'
p31426
sS'DAQmxWarningPALComponentAlreadyLoaded'
p31427
S'(50260)'
p31428
sS'DAQmx_Val_OnBrdMemMoreThanHalfFull'
p31429
S'10237'
p31430
sS'DAQmx_SampClk_DigFltr_TimebaseSrc'
p31431
S'0x2220'
p31432
sS'DAQmx_Watchdog_DO_ExpirState'
p31433
S'0x21A7'
p31434
sS'DAQmxErrorFailedToEnableHighSpeedOutput'
p31435
S'(-200615)'
p31436
sS'DAQmx_Val_Custom'
p31437
S'10137'
p31438
sS'DAQmx_Val_Switch_Topology_2593_8x1_Terminated_Mux'
p31439
S'"2593/8x1 Terminated Mux"'
p31440
sS'DAQmxErrorSwitchActionInListSpansMultipleDevices'
p31441
S'(-200053)'
p31442
sS'DAQmxErrorMarkerPosInvalidForLoopInScript'
p31443
S'(-200248)'
p31444
sS'DAQmxErrorDataOverwrittenInDeviceMemory'
p31445
S'(-200004)'
p31446
sS'DAQmxErrorInvalidDelaySampRateBelowPhaseShiftDCMThresh'
p31447
S'(-200381)'
p31448
sS'DAQmx_Val_Interrupts'
p31449
S'10204'
p31450
sS'DAQmxErrorRequiredPropertyMissing'
p31451
S'(-201039)'
p31452
sS'DAQmxErrorSampClkRateExtSampClkTimebaseRateMismatch'
p31453
S'(-200786)'
p31454
sS'DAQmx_AnlgEdge_StartTrig_Coupling'
p31455
S'0x2233'
p31456
sS'DAQmxErrorInvalidCalConstOscillatorFreqDACValue'
p31457
S'(-200519)'
p31458
sS'DAQmxErrorOutputBufferSizeNotMultOfXferSize'
p31459
S'(-200838)'
p31460
sS'DAQmxWarningPALBadAddressClass'
p31461
S'(50015)'
p31462
sS'DAQmxErrorDifftAIInputSrcInOneChanGroup'
p31463
S'(-200676)'
p31464
sS'DAQmx_Val_OnBrdMemNotEmpty'
p31465
S'10241'
p31466
sS'DAQmx_Val_Degrees'
p31467
S'10146'
p31468
sS'DAQmxErrorPALBadThreadMultitask'
p31469
S'(-50019)'
p31470
sS'DAQmx_Val_ConstVal'
p31471
S'10116'
p31472
sS'DAQmxWarningRISAcqCompletedSomeBinsNotFilled'
p31473
S'(200029)'
p31474
sS'DAQmx_Cal_UserDefinedInfo'
p31475
S'0x1861'
p31476
sS'DAQmxErrorExportSignalPolarityNotSupportedByHW'
p31477
S'(-200364)'
p31478
sS'DAQmxErrorWroteMultiSampsUsingSingleSampWrite'
p31479
S'(-200673)'
p31480
sS'DAQmx_AnlgWin_RefTrig_Btm'
p31481
S'0x1428'
p31482
sS'DAQmxErrorRefAndPauseTrigConfigured'
p31483
S'(-200628)'
p31484
sS'DAQmxErrorOutputFIFOUnderflow2'
p31485
S'(-200621)'
p31486
sS'DAQmxErrorForwardPolynomialCoefNotSpecd'
p31487
S'(-200351)'
p31488
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_Dual_64x1_Mux'
p31489
S'"2530/1-Wire Dual 64x1 Mux"'
p31490
sS'DAQmx_Val_Finite'
p31491
S'10172'
p31492
sS'DAQmxErrorControlLineConflictOnPortC'
p31493
S'(-200126)'
p31494
sS'DAQmx_Val_Switch_Topology_2597_6x1_Terminated_Mux'
p31495
S'"2597/6x1 Terminated Mux"'
p31496
sS'DAQmxErrorCounterOutputPauseTriggerInvalid'
p31497
S'(-200144)'
p31498
sS'DAQmxErrorEventPulseWidthOutOfRange'
p31499
S'(-200346)'
p31500
sS'DAQmxErrorNoDevMemForScript'
p31501
S'(-200317)'
p31502
sS'DAQmxErrorActiveChannelNotSpecified'
p31503
S'(-200093)'
p31504
sS'DAQmxErrorAttributeNotSettableWhenTaskIsRunning'
p31505
S'(-200450)'
p31506
sS'DAQmxErrorInvalidWaveformLengthWithinLoopInScript'
p31507
S'(-200250)'
p31508
sS'DAQmx_Sys_DevNames'
p31509
S'0x193B'
p31510
sS'DAQmxErrorDisconnectPathNotSameAsExistingPath'
p31511
S'(-200190)'
p31512
sS'DAQmxWarningStoppedBeforeDone'
p31513
S'(200010)'
p31514
sS'DAQmx_CI_Encoder_ZInputTerm'
p31515
S'0x219F'
p31516
sS'DAQmxErrorMismatchedInputArraySizes'
p31517
S'(-200672)'
p31518
sS'DAQmx_AI_Excit_UseForScaling'
p31519
S'0x17FC'
p31520
sS'DAQmx_Val_WDTExpiredEvent'
p31521
S'12512'
p31522
sS'DAQmxErrorCIInvalidTimingSrcForSampClkDueToSampTimingType'
p31523
S'(-200800)'
p31524
sS'DAQmx_SampClk_TimebaseDiv'
p31525
S'0x18EB'
p31526
sS'DAQmxErrorExtRefClkRateNotSpecified'
p31527
S'(-200735)'
p31528
sS'DAQmxErrorAttemptToEnableLineNotPreviouslyDisabled'
p31529
S'(-200497)'
p31530
sS'DAQmx_Val_Switch_Topology_2503_2_Wire_24x1_Mux'
p31531
S'"2503/2-Wire 24x1 Mux"'
p31532
sS'DAQmxErrorPALVersionMismatch'
p31533
S'(-50250)'
p31534
sS'DAQmxErrorBufferTooSmallForString'
p31535
S'(-200228)'
p31536
sS'DAQmx_Val_ExtControlled'
p31537
S'10326'
p31538
sS'DAQmx_Val_TwoEdgeSep'
p31539
S'10267'
p31540
sS'DAQmxErrorSampClkDCMBecameUnlocked'
p31541
S'(-200240)'
p31542
sS'DAQmxErrorChannelSizeTooBigForPortWriteType'
p31543
S'(-200465)'
p31544
sS'DAQmx_Val_HalfBridgeI'
p31545
S'10188'
p31546
sS'DAQmxErrorMStudioNoReversePolyScaleCoeffs'
p31547
S'(-200782)'
p31548
sS'DAQmxErrorScanListCannotBeTimed'
p31549
S'(-200067)'
p31550
sS'DAQmxErrorClkOutPhaseShiftDCMBecameUnlocked'
p31551
S'(-200389)'
p31552
sS'DAQmxErrorChanCalRepeatedNumberInPreScaledVals'
p31553
S'(-200939)'
p31554
sS'DAQmx_Val_Switch_Topology_1175_1_Wire_196x1_Mux'
p31555
S'"1175/1-Wire 196x1 Mux"'
p31556
sS'DAQmxErrorDataXferRequestConditionNotSpecifiedForCustomThreshold'
p31557
S'(-200944)'
p31558
sS'DAQmxErrorCppDotNetAPINegativeBufferSize'
p31559
S'(-200591)'
p31560
sS'DAQmx_PersistedTask_Author'
p31561
S'0x22CC'
p31562
sS'DAQmxWarningOutputGainTooHighForRFFreq'
p31563
S'(200032)'
p31564
sS'DAQmx_CO_CtrTimebaseActiveEdge'
p31565
S'0x0341'
p31566
sS'DAQmx_Val_MetersPerSecondSquared'
p31567
S'12470'
p31568
sS'DAQmxErrorPALWaitInterrupted'
p31569
S'(-50700)'
p31570
sS'DAQmxErrorPALFileReadFault'
p31571
S'(-50207)'
p31572
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_Dual_8x16_Matrix'
p31573
S'"1129/2-Wire Dual 8x16 Matrix"'
p31574
sS'DAQmx_CI_TCReached'
p31575
S'0x0150'
p31576
sS'DAQmx_Val_Switch_Topology_2586_10_SPST'
p31577
S'"2586/10-SPST"'
p31578
sS'DAQmx_Val_Tristate'
p31579
S'10310'
p31580
sS'DAQmx_Val_HighImpedance'
p31581
S'12527'
p31582
sS'DAQmx_Val_BuiltIn'
p31583
S'10200'
p31584
sS'DAQmx_Sys_GlobalChans'
p31585
S'0x1265'
p31586
sS'DAQmx_AI_Lowpass_SwitchCap_ClkSrc'
p31587
S'0x1884'
p31588
sS'DAQmxErrorRouteFailedBecauseWatchdogExpired'
p31589
S'(-200681)'
p31590
sS'DAQmxErrorLabVIEWVersionDoesntSupportDAQmxEvents'
p31591
S'(-201000)'
p31592
sS'DAQmxErrorDeviceIDDoesNotMatch'
p31593
S'(-201063)'
p31594
sS'DAQmxWarningPALBadReadCount'
p31595
S'(50011)'
p31596
sS'DAQmx_CI_Freq_DigSync_Enable'
p31597
S'0x21EB'
p31598
sS'DAQmxErrorCompressedSampSizeExceedsResolution'
p31599
S'(-200957)'
p31600
sS'DAQmx_Val_LowFreq1Ctr'
p31601
S'10105'
p31602
sS'DAQmxErrorInconsistentAnalogTrigSettings'
p31603
S'(-200261)'
p31604
sS'DAQmx_AI_CurrentShunt_Loc'
p31605
S'0x17F2'
p31606
sS'DAQmxErrorCanNotPerformOpWhenNoChansInTask'
p31607
S'(-200478)'
p31608
sS'DAQmxErrorRefClkRateRefClkSrcMismatch'
p31609
S'(-200744)'
p31610
sS'DAQmxErrorPasswordTooLong'
p31611
S'(-200109)'
p31612
sS'DAQmx_Val_DoNotAllowRegen'
p31613
S'10158'
p31614
sS'DAQmxErrorInvalidDeviceConnectorNumberSpecd'
p31615
S'(-201045)'
p31616
sS'DAQmxErrorSyncPulseSrcInvalid'
p31617
S'(-201090)'
p31618
sS'DAQmx_CI_MeasType'
p31619
S'0x18A0'
p31620
sS'DAQmxErrorOffsetTooLarge'
p31621
S'(-200269)'
p31622
sS'DAQmxErrorImmedTrigDuringRISMode'
p31623
S'(-200418)'
p31624
sS'DAQmxErrorNoMatchForSpecdDevice'
p31625
S'(-201042)'
p31626
sS'DAQmx_DigEdge_AdvTrig_Src'
p31627
S'0x1362'
p31628
sS'DAQmx_Read_RawDataWidth'
p31629
S'0x217A'
p31630
sS'DAQmx_SyncPulse_Src'
p31631
S'0x223D'
p31632
sS'DAQmxErrorInvalidDTInsideWfmDataType'
p31633
S'(-200327)'
p31634
sS'DAQmxErrorDelayFromSampClkTooLong'
p31635
S'(-200337)'
p31636
sS'DAQmx_AI_Voltage_Units'
p31637
S'0x1094'
p31638
sS'DAQmxErrorDuplicateHiddenChanNamesInCfgFile'
p31639
S'(-201082)'
p31640
sS'DAQmxErrorPortReservedForHandshaking'
p31641
S'(-200118)'
p31642
sS'DAQmxErrorCannotReadWhenAutoStartFalseHWTimedSinglePtAndTaskNotRunning'
p31643
S'(-200833)'
p31644
sS'DAQmxErrorAttrCannotBeReset'
p31645
S'(-200236)'
p31646
sS'DAQmx_Hshk_SampleInputDataWhen'
p31647
S'0x22C4'
p31648
sS'DAQmxErrorRefTrigWhenContinuous'
p31649
S'(-200358)'
p31650
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_Dual_128x1_Mux'
p31651
S'"1130/1-Wire Dual 128x1 Mux"'
p31652
sS'DAQmx_PhysicalChan_TEDS_ModelNum'
p31653
S'0x21DB'
p31654
sS'DAQmxErrorCannotPerformOpWhenTaskNotReserved'
p31655
S'(-200664)'
p31656
sS'DAQmxErrorInternalTimebaseSourceDivisorCombo'
p31657
S'(-200135)'
p31658
sS'DAQmxWarningMultipleWritesBetweenSampClks'
p31659
S'(200033)'
p31660
sS'DAQmxErrorCVIFunctionNotFoundInDAQmxDLL'
p31661
S'(-200398)'
p31662
sS'DAQmx_Val_EverySample'
p31663
S'10164'
p31664
sS'DAQmx_CI_Freq_MeasMeth'
p31665
S'0x0144'
p31666
sS'DAQmxErrorPhysicalChanDoesNotExist'
p31667
S'(-200170)'
p31668
sS'DAQmx_Val_Switch_Topology_2527_1_Wire_Dual_32x1_Mux'
p31669
S'"2527/1-Wire Dual 32x1 Mux"'
p31670
sS'DAQmxErrorNoCommonTrigLineForRoute_Routing'
p31671
S'(-89139)'
p31672
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_Quad_6x1_Mux'
p31673
S'"2501/2-Wire Quad 6x1 Mux"'
p31674
sS'DAQmxErrorCalibrationHandleInvalid'
p31675
S'(-200112)'
p31676
sS'DAQmx_SelfCal_Supported'
p31677
S'0x1860'
p31678
sS'DAQmxErrorRoutingDestTermPXIStarXNotInSlot2_Routing'
p31679
S'(-89148)'
p31680
sS'DAQmxErrorNonBufferedAndDataXferInterrupts'
p31681
S'(-200845)'
p31682
sS'DAQmx_SwitchScan_WaitingForAdv'
p31683
S'0x17D9'
p31684
sS'DAQmxErrorInputSignalSlowerThanMeasTime'
p31685
S'(-200302)'
p31686
sS'DAQmxErrorTaskCannotBeSavedSoInteractiveEditsAllowed'
p31687
S'(-200883)'
p31688
sS'DAQmx_AO_Min'
p31689
S'0x1187'
p31690
sS'DAQmxErrorEveryNSampsAcqIntoBufferEventAlreadyRegistered'
p31691
S'(-200966)'
p31692
sS'DAQmxErrorSWObjectsFoundInFile'
p31693
S'(-201075)'
p31694
sS'DAQmx_Val_Switch_Topology_2530_Independent'
p31695
S'"2530/Independent"'
p31696
sS'DAQmx_AO_CustomScaleName'
p31697
S'0x1188'
p31698
sS'DAQmx_Val_mVoltsPerG'
p31699
S'12509'
p31700
sS'DAQmx_CI_Period_DigFltr_TimebaseSrc'
p31701
S'0x21EE'
p31702
sS'DAQmxErrorInsufficientOnBoardMemForNumRecsAndSamps'
p31703
S'(-200413)'
p31704
sS'DAQmxErrorPALFeatureNotSupported'
p31705
S'(-50256)'
p31706
sS'DAQmx_PersistedTask_AllowInteractiveDeletion'
p31707
S'0x22CE'
p31708
sS'DAQmxErrorMeasCalAdjustOscillatorFrequency'
p31709
S'(-200508)'
p31710
sS'DAQmx_CO_AutoIncrCnt'
p31711
S'0x0295'
p31712
sS'DAQmxErrorCannotSetPropertyWhenTaskRunning'
p31713
S'(-200557)'
p31714
sS'DAQmx_DigEdge_StartTrig_DigSync_Enable'
p31715
S'0x2227'
p31716
sS'DAQmx_Val_Resistance'
p31717
S'10278'
p31718
sS'DAQmxErrorDelayFromStartTrigTooShort'
p31719
S'(-200333)'
p31720
sS'DAQmx_AO_DAC_Ref_AllowConnToGnd'
p31721
S'0x1830'
p31722
sS'DAQmxErrorMeasCalAdjustMainPathPreAmpGain'
p31723
S'(-200503)'
p31724
sS'DAQmx_CI_TwoEdgeSep_SecondTerm'
p31725
S'0x18AE'
p31726
sS'DAQmxErrorInternalTimebaseRateDivisorSourceCombo'
p31727
S'(-200133)'
p31728
sS'DAQmxErrorSCXIDevNotUsablePowerTurnedOff'
p31729
S'(-200835)'
p31730
sS'DAQmx_Val_Auto'
p31731
S'-1'
p31732
sS'DAQmxErrorF64PrptyValNotUnsignedInt'
p31733
S'(-200394)'
p31734
sS'DAQmxWarningPALBadWriteOffset'
p31735
S'(50013)'
p31736
sS'DAQmxErrorOutputBufSizeTooSmallToStartGen'
p31737
S'(-200609)'
p31738
sS'DAQmxErrorResourcesInUseForInversion'
p31739
S'(-200365)'
p31740
sS'DAQmxErrorLines0To3ConfiguredForOutput'
p31741
S'(-200123)'
p31742
sS'DAQmx_AI_ChanCal_Verif_RefVals'
p31743
S'0x22A1'
p31744
sS'DAQmxErrorIdentifierTooLongInScript'
p31745
S'(-200533)'
p31746
sS'DAQmx_Scale_PreScaledUnits'
p31747
S'0x18F7'
p31748
sS'DAQmxErrorRouteNotSupportedByHW'
p31749
S'(-200368)'
p31750
sS'DAQmx_Val_Switch_Topology_2532_2_Wire_8x32_Matrix'
p31751
S'"2532/2-Wire 8x32 Matrix"'
p31752
sS'DAQmxErrorAIInputBufferSizeNotMultOfXferSize'
p31753
S'(-200763)'
p31754
sS'DAQmx_Val_Source'
p31755
S'10439'
p31756
sS'DAQmxErrorCantUseOnlyOnBoardMemWithProgrammedIO'
p31757
S'(-200819)'
p31758
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_8x32_Matrix'
p31759
S'"1129/2-Wire 8x32 Matrix"'
p31760
sS'DAQmxErrorDAQmxVersionNotSupported'
p31761
S'(-201076)'
p31762
sS'DAQmx_DigEdge_WatchdogExpirTrig_Src'
p31763
S'0x21A4'
p31764
sS'DAQmx_CI_SemiPeriod_DigSync_Enable'
p31765
S'0x221D'
p31766
sS'DAQmxErrorCantExceedRelayDriveLimit'
p31767
S'(-200671)'
p31768
sS'DAQmxErrorSwitchOperationChansSpanMultipleDevsInList'
p31769
S'(-200596)'
p31770
sS'DAQmx_AI_DataXferReqCond'
p31771
S'0x188B'
p31772
sS'DAQmx_Val_Strain'
p31773
S'10299'
p31774
sS'DAQmxErrorDigitalOutputNotSupported'
p31775
S'(-200012)'
p31776
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_Quad_16x1_Mux'
p31777
S'"2576/2-Wire Quad 16x1 Mux"'
p31778
sS'DAQmxErrorNeedLabVIEW711PatchToUseDAQmxEvents'
p31779
S'(-200947)'
p31780
sS'DAQmxErrorWatchdogTimeoutOutOfRangeAndNotSpecialVal'
p31781
S'(-200668)'
p31782
sS'DAQmx_Scale_Table_PreScaledVals'
p31783
S'0x1237'
p31784
sS'DAQmxErrorInconsistentExcit'
p31785
S'(-200257)'
p31786
sS'DAQmxErrorConnectionSeparatorAtEndOfList'
p31787
S'(-200059)'
p31788
sS'DAQmxErrorSampClkTbMasterTbDivNotAppropriateForSampTbSrc'
p31789
S'(-200309)'
p31790
sS'DAQmxErrorCOCannotKeepUpInHWTimedSinglePoint'
p31791
S'(-209805)'
p31792
sS'DAQmx_Val_ChannelCurrent'
p31793
g28857
sS'DAQmx_AO_DAC_Offset_Src'
p31794
S'0x2253'
p31795
sS'DAQmx_Val_HighFreq2Ctr'
p31796
S'10157'
p31797
sS'DAQmx_Exported_SampClk_OutputTerm'
p31798
S'0x1663'
p31799
sS'DAQmx_Val_Switch_Topology_2530_2_Wire_64x1_Mux'
p31800
S'"2530/2-Wire 64x1 Mux"'
p31801
sS'DAQmx_Val_ChangeDetection'
p31802
S'12504'
p31803
sS'DAQmxErrorNumSampsToWaitNotMultipleOfAlignmentQuantumInScript'
p31804
S'(-200849)'
p31805
sS'DAQmxErrorSpecdDeviceDoesNotSupportRTSI'
p31806
S'(-201030)'
p31807
sS'DAQmxErrorResourcesInUseForRouteInTask'
p31808
S'(-200370)'
p31809
sS'DAQmxErrorPALResourceNotReserved'
p31810
S'(-50102)'
p31811
sS'DAQmxErrorUnableToDetectExtStimulusFreqDuringCal'
p31812
S'(-200441)'
p31813
sS'DAQmx_CI_Timestamp_InitialSeconds'
p31814
S'0x22B4'
p31815
sS'DAQmx_CO_CtrTimebase_DigFltr_Enable'
p31816
S'0x2276'
p31817
sS'DAQmx_SwitchDev_NumSwitchChans'
p31818
S'0x18E8'
p31819
sS'DAQmxErrorPALComponentNotUnloadable'
p31820
S'(-50262)'
p31821
sS'DAQmxErrorCannotProduceMinPulseWidthGivenPropertyValues'
p31822
S'(-200776)'
p31823
sS'DAQmxErrorCantUsePort3AloneGivenSampTimingTypeOn653x'
p31824
S'(-200900)'
p31825
sS'DAQmx_CI_Encoder_ZIndexVal'
p31826
S'0x0888'
p31827
sS'DAQmxErrorNoMemMapWhenHWTimedSinglePoint'
p31828
S'(-200679)'
p31829
sS'DAQmxErrorFileMissingRequiredDAQmxHeader'
p31830
S'(-201064)'
p31831
sS'DAQmxErrorInvalidSCXISlotNumberSpecd'
p31832
S'(-201032)'
p31833
sS'DAQmxErrorChanSizeTooBigForU8PortRead'
p31834
S'(-200563)'
p31835
sS'DAQmxWarningPretrigCoercion'
p31836
S'(200020)'
p31837
sS'DAQmxErrorOutputBufferUnderwrite'
p31838
S'(-200166)'
p31839
sS'DAQmxErrorRoutingDestTermPXIChassisNotIdentified_Routing'
p31840
S'(-89142)'
p31841
sS'DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove_Routing'
p31842
S'(-89146)'
p31843
sS'DAQmxErrorInvalidAODataWrite'
p31844
S'(-200561)'
p31845
sS'DAQmxErrorInternalAIInputSrcInMultChanGroups'
p31846
S'(-200675)'
p31847
sS'DAQmxWarningWaitForNextSampClkDetectedMissedSampClk'
p31848
S'(209802)'
p31849
sS'DAQmx_Val_PseudoDiff'
p31850
S'12529'
p31851
sS'DAQmxErrorPowerBudgetExceeded'
p31852
S'(-200195)'
p31853
sS'DAQmxErrorNumLinesMismatchInReadOrWrite'
p31854
S'(-200463)'
p31855
sS'DAQmxErrorWaitForNextSampClkDetectedMissedSampClk'
p31856
S'(-209802)'
p31857
sS'DAQmxErrorTableScaleNumPreScaledAndScaledValsNotEqual'
p31858
S'(-200350)'
p31859
sS'DAQmxErrorSimultaneousAOWhenNotOnDemandTiming'
p31860
S'(-200831)'
p31861
sS'DAQmxErrorCanExportOnlyDigEdgeTrigs'
p31862
S'(-200896)'
p31863
sS'DAQmx_Val_VoltsPerG'
p31864
S'12510'
p31865
sS'DAQmx_Val_SemiPeriod'
p31866
S'10289'
p31867
sS'DAQmx_Write_TotalSampPerChanGenerated'
p31868
S'0x192B'
p31869
sS'DAQmx_Val_PathStatus_ChannelInUse'
p31870
S'10434'
p31871
sS'DAQmxErrorAttributeNotQueryableUnlessTaskIsCommitted'
p31872
S'(-200451)'
p31873
sS'DAQmxWarningADCOverloaded'
p31874
S'(200005)'
p31875
sS'DAQmx_Dev_DO_Ports'
p31876
S'0x2323'
p31877
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACRangeAndOffsetVal'
p31878
S'(-200871)'
p31879
sS'DAQmx_Val_PathStatus_Available'
p31880
S'10431'
p31881
sS'DAQmxErrorVoltageExcitIncompatibleWith2WireCfg'
p31882
S'(-200162)'
p31883
sS'DAQmx_Exported_HshkEvent_Interlocked_AssertOnStart'
p31884
S'0x22BE'
p31885
sS'DAQmx_AI_RawSampJustification'
p31886
S'0x0050'
p31887
sS'DAQmxErrorLeadingUnderscoreInString'
p31888
S'(-200555)'
p31889
sS'DAQmx_Val_mVoltsPerVoltPerRadian'
p31890
S'12508'
p31891
sS'DAQmxErrorNegativeWriteSampleNumber'
p31892
S'(-200287)'
p31893
sS'DAQmxErrorSampClkRateInvalid'
p31894
S'(-201093)'
p31895
sS'DAQmxErrorDataXferCustomThresholdNotDMAXferMethodSpecifiedForDev'
p31896
S'(-200945)'
p31897
sS'DAQmx_CI_DupCountPrevent'
p31898
S'0x21AC'
p31899
sS'DAQmx_SampClk_MaxRate'
p31900
S'0x22C8'
p31901
sS'DAQmxErrorInvalidPhysChanType'
p31902
S'(-200430)'
p31903
sS'DAQmx_AO_EnhancedImageRejectionEnable'
p31904
S'0x2241'
p31905
sS'DAQmxErrorStartTrigDelayWithExtSampClk'
p31906
S'(-200436)'
p31907
sS'DAQmxErrorDigFilterNotAvailableOnTerm'
p31908
S'(-200772)'
p31909
sS'DAQmxWarningPALMemoryAlignmentFault'
p31910
S'(50351)'
p31911
sS'DAQmx_Val_ChanPerLine'
p31912
g28763
sS'DAQmx_PersistedScale_AllowInteractiveDeletion'
p31913
S'0x22D6'
p31914
sS'DAQmxErrorAIMinNotSpecified'
p31915
S'(-200694)'
p31916
sS'DAQmxErrorDifftSyncPulseSrcAndSampClkTimebaseSrcDevMultiDevTask'
p31917
S'(-200854)'
p31918
sS'DAQmxErrorTooManyChansForInternalAIInputSrc'
p31919
S'(-200710)'
p31920
sS'DAQmx_CI_CtrTimebase_DigFltr_MinPulseWidth'
p31921
S'0x2272'
p31922
sS'DAQmxWarningUnrecognizedEnumValueEncounteredInStorage'
p31923
S'(200044)'
p31924
sS'DAQmxErrorInvalidCfgCalAdjustMainPathPreAmpGain'
p31925
S'(-200511)'
p31926
sS'DAQmx_CI_Encoder_ZIndexPhase'
p31927
S'0x0889'
p31928
sS'DAQmxErrorChanSizeTooBigForU16PortRead'
p31929
S'(-200878)'
p31930
sS'DAQmx_AI_LeadWireResistance'
p31931
S'0x17EE'
p31932
sS'DAQmx_CI_TwoEdgeSep_Second_DigSync_Enable'
p31933
S'0x2218'
p31934
sS'DAQmx_Val_FirstPretrigSamp'
p31935
S'10427'
p31936
sS'DAQmxErrorInternalClkDCMBecameUnlocked'
p31937
S'(-200386)'
p31938
sS'DAQmx_Read_SleepTime'
p31939
S'0x22B0'
p31940
sS'DAQmx_Val_Switch_Topology_2529_2_Wire_4x32_Matrix'
p31941
S'"2529/2-Wire 4x32 Matrix"'
p31942
sS'DAQmxErrorStartTrigSrcEqualToSampClkSrc'
p31943
S'(-200953)'
p31944
sS'DAQmxErrorCOReadyForNewValNotSupportedWithHWTimedSinglePoint'
p31945
S'(-200975)'
p31946
sS'DAQmx_Val_Switch_Topology_1128_2_Wire_4x8_Matrix'
p31947
S'"1128/2-Wire 4x8 Matrix"'
p31948
sS'DAQmxWarningPALLogicalBufferEmpty'
p31949
S'(50406)'
p31950
sS'DAQmx_Exported_AIConvClk_Pulse_Polarity'
p31951
S'0x1688'
p31952
sS'DAQmx_CI_CountEdges_CountDir_DigFltr_Enable'
p31953
S'0x21F1'
p31954
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_Sixteen_4x1_Mux'
p31955
S'"2576/2-Wire Sixteen 4x1 Mux"'
p31956
sS'DAQmx_Val_Pulse_Freq'
p31957
S'10119'
p31958
sS'DAQmxErrorInvalidTask'
p31959
S'(-200088)'
p31960
sS'DAQmx_Exported_DividedSampClkTimebase_OutputTerm'
p31961
S'0x21A1'
p31962
sS'DAQmxErrorRelayNameNotSpecifiedInList'
p31963
S'(-200531)'
p31964
sS'DAQmx_AI_Atten'
p31965
S'0x1801'
p31966
sS'DAQmx_Val_Meters'
p31967
S'10219'
p31968
sS'DAQmx_Exported_AIHoldCmpltEvent_OutputTerm'
p31969
S'0x18ED'
p31970
sS'DAQmxErrorAIMaxTooSmall'
p31971
S'(-200580)'
p31972
sS'DAQmxErrorLibraryNotPresent'
p31973
S'(-200090)'
p31974
sS'DAQmx_CI_SemiPeriod_DigFltr_TimebaseSrc'
p31975
S'0x221B'
p31976
sS'DAQmxErrorInconsistentNumSamplesToWrite'
p31977
S'(-200103)'
p31978
sS'DAQmx_Exported_ChangeDetectEvent_Pulse_Polarity'
p31979
S'0x2303'
p31980
sS'DAQmx_Dev_PXI_ChassisNum'
p31981
S'0x2329'
p31982
sS'DAQmx_AI_Max'
p31983
S'0x17DD'
p31984
sS'DAQmx_Val_Switch_Topology_2568_31_SPST'
p31985
S'"2568/31-SPST"'
p31986
sS'DAQmxErrorReadNoInputChansInTask'
p31987
S'(-200460)'
p31988
sS'DAQmxErrorAOMinMaxNotSupportedDACOffsetValInappropriate'
p31989
S'(-200870)'
p31990
sS'DAQmx_Val_Switch_Topology_2530_4_Wire_Dual_16x1_Mux'
p31991
S'"2530/4-Wire Dual 16x1 Mux"'
p31992
sS'DAQmx_Val_AllowRegen'
p31993
S'10097'
p31994
sS'DAQmxErrorCustomScaleDoesNotExist'
p31995
S'(-200378)'
p31996
sS'DAQmxErrorAOPropertiesCauseVoltageOverMax'
p31997
S'(-200582)'
p31998
sS'DAQmx_Write_RelativeTo'
p31999
S'0x190C'
p32000
sS'DAQmxErrorMaxSoundPressureAndMicSensitivityNotSupportedByDev'
p32001
S'(-200860)'
p32002
sS'DAQmxErrorDeviceAndConnectorSpecdAlreadyOccupied'
p32003
S'(-201047)'
p32004
sS'DAQmx_AO_OutputType'
p32005
S'0x1108'
p32006
sS'DAQmxErrorRoutingPathNotAvailable_Routing'
p32007
S'(-89124)'
p32008
sS'DAQmxErrorDelayFromSampClkWithExtConv'
p32009
S'(-200435)'
p32010
sS'DAQmx_Val_Switch_Topology_2503_2_Wire_4x6_Matrix'
p32011
S'"2503/2-Wire 4x6 Matrix"'
p32012
sS'DAQmx_CI_PulseWidth_DigSync_Enable'
p32013
S'0x220E'
p32014
sS'DAQmxErrorWaveformLengthNotMultipleOfIncr'
p32015
S'(-200400)'
p32016
sS'DAQmx_Val_Temp_Thrmstr'
p32017
S'10302'
p32018
sS'DAQmxErrorTrigWhenAOHWTimedSinglePtSampMode'
p32019
S'(-200812)'
p32020
sS'DAQmxErrorInvalidDeviceID'
p32021
S'(-200220)'
p32022
sS'DAQmxErrorDevAbsentOrUnavailable'
p32023
S'(-200324)'
p32024
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_Dual_4x32_Matrix'
p32025
S'"1129/2-Wire Dual 4x32 Matrix"'
p32026
sS'DAQmx_AI_StrainGage_PoissonRatio'
p32027
S'0x0998'
p32028
sS'DAQmxErrorDigLinesReservedOrUnavailable'
p32029
S'(-200587)'
p32030
sS'DAQmxErrorPALBadDevice'
p32031
S'(-50002)'
p32032
sS'DAQmxErrorSampleTimingTypeAndDataXferMode'
p32033
S'(-200218)'
p32034
sS'DAQmxWarningReadNotCompleteBeforeSampClk'
p32035
S'(209800)'
p32036
sS'DAQmxErrorCAPIReservedParamNotNULLNorEmpty'
p32037
S'(-200493)'
p32038
sS'DAQmx_Val_ChannelVoltage'
p32039
g28763
sS'DAQmxErrorPALComponentNotFound'
p32040
S'(-50251)'
p32041
sS'DAQmx_StartTrig_DelayUnits'
p32042
S'0x18C8'
p32043
sS'DAQmxErrorSamplesWillNeverBeGenerated'
p32044
S'(-200288)'
p32045
sS'DAQmxErrorRouteNotSupportedByHW_Routing'
p32046
S'(-89136)'
p32047
sS'DAQmxErrorCannotHandshakeWithPort0'
p32048
S'(-200127)'
p32049
sS'DAQmx_Val_PPS'
p32050
S'10080'
p32051
sS'DAQmxErrorNoWatchdogOutputOnPortReservedForInput'
p32052
S'(-200667)'
p32053
sS'DAQmx_Val_B_Type_TC'
p32054
S'10047'
p32055
sS'DAQmx_RealTime_ReportMissedSamp'
p32056
S'0x2319'
p32057
sS'DAQmx_CI_CountEdges_DigFltr_TimebaseRate'
p32058
S'0x21F9'
p32059
sS'DAQmxErrorPrptyGetImpliedActiveChanFailedDueToDifftVals'
p32060
S'(-200658)'
p32061
sS'DAQmx_CI_Period_DigFltr_Enable'
p32062
S'0x21EC'
p32063
sS'DAQmxErrorInvalidCfgCalAdjustMainPathOutputImpedance'
p32064
S'(-200513)'
p32065
sS'DAQmxErrorCannotReadWhenAutoStartFalseAndTaskNotRunningOrCommitted'
p32066
S'(-200473)'
p32067
sS'DAQmxErrorResourcesInUseForInversionInTask'
p32068
S'(-200366)'
p32069
sS'DAQmx_Val_DigLvl'
p32070
S'10152'
p32071
sS'DAQmx_AnlgWin_StartTrig_Coupling'
p32072
S'0x2234'
p32073
sS'DAQmxWarningPALFunctionObsolete'
p32074
S'(50254)'
p32075
sS'DAQmx_SwitchDev_NumColumns'
p32076
S'0x18EA'
p32077
sS'DAQmxErrorScriptDataUnderflow'
p32078
S'(-200316)'
p32079
sS'DAQmx_SwitchScan_RepeatMode'
p32080
S'0x1248'
p32081
sS'DAQmx_AO_DAC_Ref_ConnToGnd'
p32082
S'0x0130'
p32083
sS'DAQmxErrorUnexpectedSeparatorInList'
p32084
S'(-200064)'
p32085
sS'DAQmxErrorMultipleRelaysForSingleRelayOp'
p32086
S'(-200211)'
p32087
sS'DAQmx_AnlgWin_StartTrig_Src'
p32088
S'0x1400'
p32089
sS'DAQmxErrorMStudioNoForwardPolyScaleCoeffsUseCalc'
p32090
S'(-200780)'
p32091
sS'DAQmxErrorPALComponentTooNew'
p32092
S'(-50253)'
p32093
sS'DAQmxErrorAODuringCounter1DMAConflict'
p32094
S'(-200079)'
p32095
sS'DAQmx_Val_SampClkPeriods'
p32096
S'10286'
p32097
sS'DAQmx_DigEdge_ArmStartTrig_Src'
p32098
S'0x1417'
p32099
sS'DAQmx_AO_UseOnlyOnBrdMem'
p32100
S'0x183A'
p32101
sS'DAQmx_Buf_Output_OnbrdBufSize'
p32102
S'0x230B'
p32103
sS'DAQmxErrorIfElseBlockNotAllowedInConditionalRepeatLoopInScript'
p32104
S'(-201013)'
p32105
sS'DAQmxErrorInvalidAnalogTrigSrc'
p32106
S'(-200265)'
p32107
sS'DAQmxWarningPALTransferOverwritten'
p32108
S'(50410)'
p32109
sS'DAQmx_Val_Acquired_Into_Buffer'
p32110
g28857
sS'DAQmxErrorOutputFIFOUnderflow'
p32111
S'(-200016)'
p32112
sS'DAQmxErrorMarkerPosInvalidBeforeIfElseBlockInScript'
p32113
S'(-201010)'
p32114
sS'DAQmx_Val_Switch_Topology_2527_2_Wire_Dual_16x1_Mux'
p32115
S'"2527/2-Wire Dual 16x1 Mux"'
p32116
sS'DAQmxErrorActionNotSupportedTaskNotWatchdog'
p32117
S'(-200635)'
p32118
sS'DAQmxErrorTemperatureOutOfRangeForCalibration'
p32119
S'(-200113)'
p32120
sS'DAQmx_Val_QuarterBridgeI'
p32121
S'10271'
p32122
sS'DAQmxErrorPALResourceNotAvailable'
p32123
S'(-50101)'
p32124
sS'DAQmx_CO_PulseDone'
p32125
S'0x190E'
p32126
sS'DAQmx_AI_Bridge_Balance_CoarsePot'
p32127
S'0x17F1'
p32128
sS'DAQmx_AI_Coupling'
p32129
S'0x0064'
p32130
sS'DAQmx_Val_WaitForInterrupt'
p32131
S'12523'
p32132
sS'DAQmxErrorCannotOpenTopologyCfgFile'
p32133
S'(-200328)'
p32134
sS'DAQmx_AI_Freq_Hyst'
p32135
S'0x0814'
p32136
sS'DAQmxErrorInvalidTableIdentifier'
p32137
S'(-201067)'
p32138
sS'DAQmx_DigPattern_RefTrig_Src'
p32139
S'0x1437'
p32140
sS'DAQmxErrorInvalidRangeStatementCharInList'
p32141
S'(-200208)'
p32142
sS'DAQmxErrorPALBadAddressClass'
p32143
S'(-50015)'
p32144
sS'DAQmxErrorNoCommonTrigLineForTaskRoute'
p32145
S'(-200395)'
p32146
sS'DAQmxErrorSamplesWillNeverBeAvailable'
p32147
S'(-200278)'
p32148
sS'DAQmxErrorRuntimeAborted_Routing'
p32149
S'(-88709)'
p32150
sS'DAQmxErrorLines4To7ConfiguredForInput'
p32151
S'(-200124)'
p32152
sS'DAQmx_CI_TwoEdgeSep_FirstEdge'
p32153
S'0x0833'
p32154
sS'DAQmx_AO_DAC_Rng_High'
p32155
S'0x182E'
p32156
sS'DAQmxErrorInvalidAcqTypeForFREQOUT'
p32157
S'(-200747)'
p32158
sS'DAQmxErrorExpectedSeparatorInList'
p32159
S'(-200061)'
p32160
sS'DAQmx_Val_Switch_Topology_1127_1_Wire_64x1_Mux'
p32161
S'"1127/1-Wire 64x1 Mux"'
p32162
sS'DAQmx_CI_Encoder_ZInput_DigFltr_Enable'
p32163
S'0x2205'
p32164
sS'DAQmx_AI_Gain'
p32165
S'0x1818'
p32166
sS'DAQmxErrorFewerThan2PreScaledVals'
p32167
S'(-200434)'
p32168
sS'DAQmx_CO_Pulse_HighTicks'
p32169
S'0x1169'
p32170
sS'DAQmxErrorOnlyContinuousScanSupported'
p32171
S'(-200192)'
p32172
sS'DAQmxErrorMStudioInvalidPolyDirection'
p32173
S'(-200594)'
p32174
sS'DAQmxErrorReadWaitNextSampClkWaitMismatchOne'
p32175
S'(-200988)'
p32176
sS'DAQmxErrorInvalidCalConstGainDACValue'
p32177
S'(-200516)'
p32178
sS'DAQmx_CI_PulseWidth_Term'
p32179
S'0x18AA'
p32180
sS'DAQmxWarningCAPIStringTruncatedToFitBuffer'
p32181
S'(200026)'
p32182
sS'DAQmxErrorAttrCannotBeRead'
p32183
S'(-200232)'
p32184
sS'DAQmxErrorGlobalChanCannotBeSavedSoInteractiveEditsAllowed'
p32185
S'(-200884)'
p32186
sS'DAQmxErrorExtCalConstsInvalid'
p32187
S'(-200437)'
p32188
sS'DAQmxErrorTEDSSensorNotDetected'
p32189
S'(-200709)'
p32190
sS'DAQmx_AnlgEdge_RefTrig_Slope'
p32191
S'0x1423'
p32192
sS'DAQmx_DI_DigFltr_Enable'
p32193
S'0x21D6'
p32194
sS'DAQmxWarningCounter0DMADuringAIConflict'
p32195
S'(200008)'
p32196
sS'DAQmxErrorCODAQmxWriteMultipleChans'
p32197
S'(-200794)'
p32198
sS'DAQmxErrorInvalidAdvanceEventTriggerType'
p32199
S'(-200070)'
p32200
sS'DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod2'
p32201
S'(-201023)'
p32202
sS'DAQmxErrorIntermediateBufferSizeNotMultipleOfIncr'
p32203
S'(-200347)'
p32204
sS'DAQmx_DigPattern_RefTrig_Pattern'
p32205
S'0x2187'
p32206
sS'DAQmxErrorWaveformNameTooLong'
p32207
S'(-200534)'
p32208
sS'DAQmxErrorAOEveryNSampsEventIntervalNotMultipleOf2'
p32209
S'(-200917)'
p32210
sS'DAQmxWarningPALPhysicalBufferEmpty'
p32211
S'(50408)'
p32212
sS'DAQmx_Sys_NIDAQMinorVersion'
p32213
S'0x1923'
p32214
sS'DAQmx_AIConv_ActiveEdge'
p32215
S'0x1853'
p32216
sS'DAQmxErrorResourcesInUseForProperty_Routing'
p32217
S'(-89132)'
p32218
sS'DAQmx_SampClk_DigSync_Enable'
p32219
S'0x2222'
p32220
sS'DAQmxErrorSCXI1122ResistanceChanNotSupportedForCfg'
p32221
S'(-200105)'
p32222
sS'DAQmx_SwitchDev_PwrDownLatchRelaysAfterSettling'
p32223
S'0x22DB'
p32224
sS'DAQmxErrorStartTrigDigPatternChanNotInTask'
p32225
S'(-200887)'
p32226
sS'DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2'
p32227
S'(-200706)'
p32228
sS'DAQmxErrorCannotReadRelativeToRefTrigUntilDone'
p32229
S'(-200281)'
p32230
sS'DAQmxErrorDAQmxCantRetrieveStringDueToUnknownChar'
p32231
S'(-200810)'
p32232
sS'DAQmxErrorClkDoublerDCMLock'
p32233
S'(-200241)'
p32234
sS'DAQmx_CO_RdyForNewVal'
p32235
S'0x22FF'
p32236
sS'DAQmxErrorCJCChanNameMustBeSetWhenCJCSrcIsScannableChan'
p32237
S'(-201085)'
p32238
sS'DAQmxErrorRecordOverwritten'
p32239
S'(-200006)'
p32240
sS'DAQmx_Exported_HshkEvent_Pulse_Polarity'
p32241
S'0x22C0'
p32242
sS'DAQmx_Val_Switch_Topology_1130_2_Wire_4x32_Matrix'
p32243
S'"1130/2-Wire 4x32 Matrix"'
p32244
sS'DAQmxWarningPALMemoryHeapNotEmpty'
p32245
S'(50355)'
p32246
sS'DAQmx_Scale_ScaledUnits'
p32247
S'0x191B'
p32248
sS'DAQmx_Write_WaitMode'
p32249
S'0x22B1'
p32250
sS'DAQmx_CI_Period_MeasMeth'
p32251
S'0x192C'
p32252
sS'DAQmxErrorZeroReversePolyScaleCoeffs'
p32253
S'(-200408)'
p32254
sS'DAQmxErrorDifferentInternalAIInputSources'
p32255
S'(-200573)'
p32256
sS'DAQmx_AO_LoadImpedance'
p32257
S'0x0121'
p32258
sS'DAQmxErrorDifferentAIInputSrcInOneChanGroup'
p32259
S'(-200572)'
p32260
sS'DAQmxWarningTooManyInterruptsPerSecond'
p32261
S'(200014)'
p32262
sS'DAQmx_Val_HandshakeTriggerDeasserts'
p32263
S'12553'
p32264
sS'DAQmx_Val_PathStatus_SourceChannelConflict'
p32265
S'10435'
p32266
sS'DAQmxErrorCantSetAuthorForLocalChan'
p32267
S'(-201038)'
p32268
sS'DAQmxErrorReadBufferTooSmall'
p32269
S'(-200229)'
p32270
sS'DAQmx_Val_Cfg_Default'
p32271
S'-1'
p32272
sS'DAQmxErrorLinesUsedForStaticInputNotForHandshakingInput'
p32273
S'(-200726)'
p32274
sS'DAQmx_Val_Switch_Topology_1175_2_Wire_95x1_Mux'
p32275
S'"1175/2-Wire 95x1 Mux"'
p32276
sS'DAQmx_CI_Encoder_ZInput_DigSync_Enable'
p32277
S'0x2209'
p32278
sS'DAQmx_Val_Switch_Topology_2596_Dual_6x1_Mux'
p32279
S'"2596/Dual 6x1 Mux"'
p32280
sS'DAQmxErrorStartTrigOutputTermNotSupportedGivenTimingType'
p32281
S'(-200911)'
p32282
sS'DAQmxErrorCannotTristate8255OutputLines'
p32283
S'(-200116)'
p32284
sS'DAQmx_AI_Excit_Src'
p32285
S'0x17F4'
p32286
sS'DAQmxErrorPhysChanDevNotInTask'
p32287
S'(-200648)'
p32288
sS'DAQmx_SwitchChan_Bandwidth'
p32289
S'0x0640'
p32290
sS'DAQmx_AI_RawSampSize'
p32291
S'0x22DA'
p32292
sS'DAQmx_Val_EnteringWin'
p32293
S'10163'
p32294
sS'DAQmxErrorResourceNotFound'
p32295
S'(-54000)'
p32296
sS'DAQmxErrorRouteSrcAndDestSame_Routing'
p32297
S'(-89131)'
p32298
sS'DAQmxErrorInvalidINIFileSyntax'
p32299
S'(-201060)'
p32300
sS'DAQmxErrorInvalidCalArea'
p32301
S'(-200438)'
p32302
sS'DAQmxErrorCorruptedTEDSMemory'
p32303
S'(-200742)'
p32304
sS'DAQmxErrorCannotScanWithCurrentTopology'
p32305
S'(-200205)'
p32306
sS'DAQmx_Dev_CI_PhysicalChans'
p32307
S'0x2324'
p32308
sS'DAQmxErrorAOMinMaxNotInDACRange'
p32309
S'(-200759)'
p32310
sS'DAQmxErrorInputFIFOOverflow2'
p32311
S'(-200361)'
p32312
sS'DAQmx_AO_TermCfg'
p32313
S'0x188E'
p32314
sS'DAQmx_Val_Action_Cancel'
p32315
g28857
sS'DAQmxErrorSampClkSrcInvalidForOutputValidForInput'
p32316
S'(-200610)'
p32317
sS'DAQmxErrorSampleRateNumChansConvertPeriodCombo'
p32318
S'(-200081)'
p32319
sS'DAQmxErrorNumPtsToComputeNotPositive'
p32320
S'(-200401)'
p32321
sS'DAQmx_AI_RVDT_SensitivityUnits'
p32322
S'0x219B'
p32323
sS'DAQmxErrorStartTrigDigPatternSizeDoesNotMatchSourceSize'
p32324
S'(-200894)'
p32325
sS'DAQmxErrorInvalidTrigTypeSendsSWTrig'
p32326
S'(-200372)'
p32327
sS'DAQmx_CI_CountEdges_DigFltr_MinPulseWidth'
p32328
S'0x21F7'
p32329
sS'DAQmxErrorPALDMALinkEventMissed'
p32330
S'(-50450)'
p32331
sS'DAQmxErrorBridgeOffsetNullingCalNotSupported'
p32332
S'(-200696)'
p32333
sS'DAQmxWarningCounter1DMADuringAOConflict'
p32334
S'(200009)'
p32335
sS'DAQmx_Write_DigitalLines_BytesPerChan'
p32336
S'0x217F'
p32337
sS'DAQmxWarningOutputGainTooLowForRFFreq'
p32338
S'(200031)'
p32339
sS'DAQmx_Task_Complete'
p32340
S'0x1274'
p32341
sS'DAQmx_AO_MemMapEnable'
p32342
S'0x188F'
p32343
sS'DAQmx_CI_PulseWidth_DigFltr_TimebaseRate'
p32344
S'0x220D'
p32345
sS'DAQmx_SwitchChan_MaxACCarryCurrent'
p32346
S'0x0648'
p32347
sS'DAQmxErrorChannelNotAvailableInParallelMode'
p32348
S'(-200150)'
p32349
sS'DAQmxErrorCannotGetPropertyWhenTaskNotReservedCommittedOrRunning'
p32350
S'(-200983)'
p32351
sS'DAQmx_AIConv_Rate'
p32352
S'0x1848'
p32353
sS'DAQmxErrorRoutingSrcTermPXIChassisNotIdentified'
p32354
S'(-200698)'
p32355
sS'DAQmx_Val_AdvanceTrigger'
p32356
S'12488'
p32357
sS'DAQmx_Val_Switch_Topology_1127_2_Wire_32x1_Mux'
p32358
S'"1127/2-Wire 32x1 Mux"'
p32359
sS'DAQmxErrorRoutingSrcTermPXIChassisNotIdentified_Routing'
p32360
S'(-89141)'
p32361
sS'DAQmxErrorTEDSMinPhysValGEMaxPhysVal'
p32362
S'(-200815)'
p32363
sS'DAQmx_AI_Bridge_NomResistance'
p32364
S'0x17EC'
p32365
sS'DAQmxErrorMultipleWritesBetweenSampClks'
p32366
S'(-200748)'
p32367
sS'DAQmxErrorPALMessageOverflow'
p32368
S'(-50650)'
p32369
sS'DAQmxErrorTrigLineNotFound_Routing'
p32370
S'(-89125)'
p32371
sS'DAQmx_Val_AO'
p32372
S'10102'
p32373
sS'DAQmxErrorBuiltInTempSensorNotSupported'
p32374
S'(-200255)'
p32375
sS'DAQmx_Val_AI'
p32376
S'10100'
p32377
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_Sixteen_16x1_Mux'
p32378
S'"1130/1-Wire Sixteen 16x1 Mux"'
p32379
sS'DAQmx_Read_Offset'
p32380
S'0x190B'
p32381
sS'DAQmx_Val_AC'
p32382
S'10045'
p32383
sS'DAQmxErrorReadWaitNextSampClkWaitMismatchTwo'
p32384
S'(-200989)'
p32385
sS'DAQmxErrorOverloadedChansExistNotRead'
p32386
S'(-200362)'
p32387
sS'DAQmxErrorPALIrrelevantAttribute'
p32388
S'(-50001)'
p32389
sS'DAQmx_Exported_AdvCmpltEvent_Pulse_Polarity'
p32390
S'0x1652'
p32391
sS'DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseRate'
p32392
S'0x2217'
p32393
sS'DAQmxErrorMemMapAndBuffer'
p32394
S'(-200215)'
p32395
sS'DAQmxErrorExtCalTemperatureNotDAQmx'
p32396
S'(-200544)'
p32397
sS'DAQmx_Val_OutsideWin'
p32398
S'10251'
p32399
sS'DAQmx_Val_Load'
p32400
S'10440'
p32401
sS'DAQmxErrorPXIDevTempCausedShutDown'
p32402
S'(-200623)'
p32403
sS'DAQmx_CI_CountEdges_Dir'
p32404
S'0x0696'
p32405
sS'DAQmxErrorPALBadSelector'
p32406
S'(-50003)'
p32407
sS'DAQmx_AI_Current_Units'
p32408
S'0x0701'
p32409
sS'DAQmxErrorIntermediateBufferFull'
p32410
S'(-200495)'
p32411
sS'DAQmx_CI_CustomScaleName'
p32412
S'0x189E'
p32413
sS'DAQmxErrorAOSampTimingTypeDifferentIn2Tasks'
p32414
S'(-200963)'
p32415
sS'DAQmxErrorPALBadOffset'
p32416
S'(-50007)'
p32417
sS'DAQmxErrorInvalidNumberSamplesToRead'
p32418
S'(-200096)'
p32419
sS'DAQmxErrorNoDMAChansAvailable'
p32420
S'(-200251)'
p32421
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_16x16_Matrix'
p32422
S'"2532/1-Wire Dual 16x16 Matrix"'
p32423
sS'DAQmx_Val_HalfBridgeII'
p32424
S'10189'
p32425
sS'DAQmxErrorWatchdogTimerNotSupported'
p32426
S'(-200662)'
p32427
sS'DAQmxErrorSamplesNotYetAvailable'
p32428
S'(-200284)'
p32429
sS'DAQmxErrorMultipleChansNotSupportedDuringCalSetup'
p32430
S'(-201004)'
p32431
sS'DAQmx_Val_Unknown'
p32432
S'12588'
p32433
sS'DAQmxErrorCantSaveTaskWithoutReplace'
p32434
S'(-200484)'
p32435
sS'DAQmx_Exported_AdvCmpltEvent_Delay'
p32436
S'0x1757'
p32437
sS'DAQmx_CI_SemiPeriod_StartingEdge'
p32438
S'0x22FE'
p32439
sS'DAQmx_Val_Kelvins'
p32440
S'10325'
p32441
sS'DAQmxErrorDuplicateTask'
p32442
S'(-200089)'
p32443
sS'DAQmx_RefClk_Rate'
p32444
S'0x1315'
p32445
sS'DAQmx_CI_Freq_MeasTime'
p32446
S'0x0145'
p32447
sS'DAQmxErrorNonBufferedAndHWTimed'
p32448
S'(-201025)'
p32449
sS'DAQmxErrorNoChansSpecdForPatternSource'
p32450
S'(-200927)'
p32451
sS'DAQmx_AI_Lowpass_Enable'
p32452
S'0x1802'
p32453
sS'DAQmxErrorCounterStartPauseTriggerConflict'
p32454
S'(-200146)'
p32455
sS'DAQmxErrorPALFileWriteFault'
p32456
S'(-50208)'
p32457
sS'DAQmxErrorMStudioNoReversePolyScaleCoeffsUseCalc'
p32458
S'(-200779)'
p32459
sS'DAQmxErrorPALFirmwareFault'
p32460
S'(-50151)'
p32461
sS'DAQmxErrorMemMapAndSimultaneousAO'
p32462
S'(-200830)'
p32463
sS'DAQmx_Val_HalfBridge'
p32464
S'10187'
p32465
sS'DAQmxWarningPALBadDevice'
p32466
S'(50002)'
p32467
sS'DAQmxErrorSampClkTimebaseDCMBecameUnlocked'
p32468
S'(-200238)'
p32469
sS'DAQmxErrorSemicolonDoesNotFollowRangeInList'
p32470
S'(-200054)'
p32471
sS'DAQmx_Val_PCI'
p32472
S'12582'
p32473
sS'DAQmx_Val_Position_AngEncoder'
p32474
S'10360'
p32475
sS'DAQmxErrorCannotAddNewDevsAfterTaskConfiguration'
p32476
S'(-200855)'
p32477
sS'DAQmxErrorWaitIsLastInstructionOfLoopInScript'
p32478
S'(-200038)'
p32479
sS'DAQmxErrorReversePolyOrderLessThanNumPtsToCompute'
p32480
S'(-200403)'
p32481
sS'DAQmx_Val_SynchronousEventCallbacks'
p32482
S'(1<<0)'
p32483
sS'DAQmxErrorDataLineReservedForDynamicOutput'
p32484
S'(-200384)'
p32485
sS'DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseSrc'
p32486
S'0x2207'
p32487
sS'DAQmxErrorPALThreadHasNoThreadObject'
p32488
S'(-50601)'
p32489
sS'DAQmx_Val_DoNotOverwriteUnreadSamps'
p32490
S'10159'
p32491
sS'DAQmxErrorInvalidPhysicalChanForCal'
p32492
S'(-200444)'
p32493
sS'DAQmx_AO_DAC_Ref_Src'
p32494
S'0x0132'
p32495
sS'DAQmxErrorEndpointNotFound'
p32496
S'(-54001)'
p32497
sS'DAQmxErrorSubsetStartOffsetNotAlignedInScript'
p32498
S'(-200033)'
p32499
sS'DAQmxErrorUnexpectedEndOfActionsInList'
p32500
S'(-200196)'
p32501
sS'DAQmxWarningPALBadReadOffset'
p32502
S'(50010)'
p32503
sS'DAQmxErrorSwitchDevShutDownDueToHighTemp'
p32504
S'(-200818)'
p32505
sS'DAQmx_Val_Task_Reserve'
p32506
g30363
sS'DAQmx_AnlgWin_StartTrig_When'
p32507
S'0x1401'
p32508
sS'DAQmx_AI_Accel_SensitivityUnits'
p32509
S'0x219C'
p32510
sS'_NI_float32_DEFINED_'
p32511
g28662
sS'DAQmxErrorChanCalScaleTypeNotSet'
p32512
S'(-200935)'
p32513
sS'DAQmx_CI_Freq_DigFltr_Enable'
p32514
S'0x21E7'
p32515
sS'DAQmxErrorExplicitConnectionExists'
p32516
S'(-200179)'
p32517
sS'DAQmxErrorCannotReadPastEndOfRecord'
p32518
S'(-200614)'
p32519
sS'DAQmx_Scale_Poly_ReverseCoeff'
p32520
S'0x1235'
p32521
sS'DAQmxErrorPropertyNotSupportedNotOutputTask'
p32522
S'(-200456)'
p32523
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACRefVal'
p32524
S'(-200867)'
p32525
sS'DAQmx_CI_TwoEdgeSep_First_DigFltr_Enable'
p32526
S'0x220F'
p32527
sS'DAQmxErrorInvalidRefClkSrcGivenSampClkSrc'
p32528
S'(-200383)'
p32529
sS'DAQmx_AI_Lowpass_SwitchCap_OutClkDiv'
p32530
S'0x1887'
p32531
sS'_NI_uInt64_DEFINED_'
p32532
g28662
sS'DAQmx_Dev_AI_PhysicalChans'
p32533
S'0x231E'
p32534
sS'DAQmxErrorExtraPropertyDetectedInSpecdObject'
p32535
S'(-201040)'
p32536
sS'DAQmxErrorDLLLock'
p32537
S'(-200550)'
p32538
sS'DAQmxErrorMStudioNoPolyScaleCoeffsUseCalc'
p32539
S'(-200781)'
p32540
sS'DAQmxErrorStreamDCMLock'
p32541
S'(-200313)'
p32542
sS'DAQmx_CO_Pulse_Freq_InitialDelay'
p32543
S'0x0299'
p32544
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACRefAndOffsetVal'
p32545
S'(-200866)'
p32546
sS'DAQmxErrorHWTimedSinglePointNotSupportedAI'
p32547
S'(-200821)'
p32548
sS'DAQmx_SwitchChan_MaxACCarryPwr'
p32549
S'0x0642'
p32550
sS'DAQmxErrorSampsPerChanTooBig'
p32551
S'(-200306)'
p32552
sS'DAQmx_CO_CtrTimebaseMasterTimebaseDiv'
p32553
S'0x18C3'
p32554
sS'DAQmxErrorSwitchCannotDriveMultipleTrigLines'
p32555
S'(-200203)'
p32556
sS'DAQmx_Exported_CtrOutEvent_OutputBehavior'
p32557
S'0x174F'
p32558
sS'DAQmxErrorCtrHWTimedSinglePointAndDataXferNotProgIO'
p32559
S'(-200842)'
p32560
sS'DAQmx_Val_Cont'
p32561
S'10117'
p32562
sS'DAQmxErrorEveryNSampsTransferredFromBufferEventAlreadyRegistered'
p32563
S'(-200967)'
p32564
sS'DAQmxErrorAcqStoppedDriverCantXferDataFastEnough'
p32565
S'(-200714)'
p32566
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_24x1_Amplified_Mux'
p32567
S'"2501/2-Wire 24x1 Amplified Mux"'
p32568
sS'DAQmx_AI_Bridge_Balance_FinePot'
p32569
S'0x18F4'
p32570
sS'DAQmx_CI_Period_DigSync_Enable'
p32571
S'0x21F0'
p32572
sS'DAQmxErrorAOPropertiesCauseVoltageBelowMin'
p32573
S'(-200583)'
p32574
sS'DAQmx_CI_NumPossiblyInvalidSamps'
p32575
S'0x193C'
p32576
sS'DAQmx_AI_ChanCal_ApplyCalIfExp'
p32577
S'0x2299'
p32578
sS'DAQmxErrorPulseActiveAtStart'
p32579
S'(-200339)'
p32580
sS'DAQmxErrorTEDSMappingMethodInvalidOrUnsupported'
p32581
S'(-200765)'
p32582
sS'DAQmx_Write_RawDataWidth'
p32583
S'0x217D'
p32584
sS'DAQmxErrorAttrNotSupported'
p32585
S'(-200197)'
p32586
sS'DAQmxError20MhzTimebaseNotSupportedGivenTimingType'
p32587
S'(-200909)'
p32588
sS'DAQmx_Write_Offset'
p32589
S'0x190D'
p32590
sS'DAQmxErrorInvalidIDInListAtBeginningOfSwitchOperation'
p32591
S'(-200595)'
p32592
sS'DAQmxErrorCOMultipleWritesBetweenSampClks'
p32593
S'(-200951)'
p32594
sS'DAQmx_AnlgWin_RefTrig_Src'
p32595
S'0x1426'
p32596
sS'DAQmxErrorPALFunctionNotFound'
p32597
S'(-50255)'
p32598
sS'DAQmxErrorPortDoesNotSupportHandshakingDataIO'
p32599
S'(-200117)'
p32600
sS'DAQmxErrorDACRefValNotSet'
p32601
S'(-200540)'
p32602
sS'DAQmx_AI_CustomScaleName'
p32603
S'0x17E0'
p32604
sS'DAQmxErrorTDCNotEnabledDuringRISMode'
p32605
S'(-200417)'
p32606
sS'DAQmxErrorCalPasswordNotSupported'
p32607
S'(-201006)'
p32608
sS'DAQmx_Val_Immediate'
p32609
S'10198'
p32610
sS'DAQmx_StartTrig_Type'
p32611
S'0x1393'
p32612
sS'DAQmxErrorCannotConnectChansDirectly'
p32613
S'(-200185)'
p32614
sS'DAQmx_OnDemand_SimultaneousAOEnable'
p32615
S'0x21A0'
p32616
sS'DAQmxErrorIdentifierInListTooLong'
p32617
S'(-200058)'
p32618
sS'DAQmxErrorAttributeInconsistentAcrossChannelsOnDevice'
p32619
S'(-200106)'
p32620
sS'DAQmx_Val_Switch_Topology_2575_1_Wire_196x1_Mux'
p32621
S'"2575/1-Wire 196x1 Mux"'
p32622
sS'DAQmxErrorWriteWhenTaskNotRunningCOFreq'
p32623
S'(-200875)'
p32624
sS'DAQmx_SwitchChan_MaxDCSwitchPwr'
p32625
S'0x0649'
p32626
sS'DAQmxErrorSampClkRateNotSupportedWithEARDisabled'
p32627
S'(-201001)'
p32628
sS'DAQmxErrorCabledModuleCannotRouteConvClk'
p32629
S'(-200319)'
p32630
sS'DAQmx_Val_Freq'
p32631
S'10179'
p32632
sS'DAQmxErrorNoMoreSpace'
p32633
S'(-200293)'
p32634
sS'DAQmxErrorDDCClkOutDCMLock'
p32635
S'(-200243)'
p32636
sS'DAQmxWarningPALComponentNotUnloadable'
p32637
S'(50262)'
p32638
sS'DAQmxErrorDigInputOverrun'
p32639
S'(-200715)'
p32640
sS'DAQmx_ChanDescr'
p32641
S'0x1926'
p32642
sS'__CFUNC_C'
p32643
S'__cdecl'
p32644
sS'DAQmx_CI_Freq_DigFltr_MinPulseWidth'
p32645
S'0x21E8'
p32646
sS'DAQmx_Val_Poll'
p32647
S'12524'
p32648
sS'DAQmxErrorSignalEventsNotSupportedByDevice'
p32649
S'(-200982)'
p32650
sS'DAQmxErrorDuplicateDevIDInList'
p32651
S'(-200209)'
p32652
sS'DAQmx_DigEdge_AdvTrig_DigFltr_Enable'
p32653
S'0x2238'
p32654
sS'DAQmx_CI_Encoder_BInput_DigFltr_TimebaseRate'
p32655
S'0x2203'
p32656
sS'NULL'
p32657
S'(0L)'
p32658
sS'DAQmx_Interlocked_HshkTrig_Src'
p32659
S'0x22B8'
p32660
sS'DAQmxErrorPALComponentAlreadyInstalled'
p32661
S'(-50263)'
p32662
sS'DAQmxErrorPALTransferNotInProgress'
p32663
S'(-50402)'
p32664
sS'DAQmxErrorTimeStampOverwritten'
p32665
S'(-200009)'
p32666
sS'DAQmxErrorPALOSInitializationFault'
p32667
S'(-50201)'
p32668
sS'DAQmx_Val_SampClk'
p32669
S'10388'
p32670
sS'DAQmx_Exported_10MHzRefClk_OutputTerm'
p32671
S'0x226E'
p32672
sS'DAQmxErrorMultipleCounterInputTask'
p32673
S'(-200147)'
p32674
sS'DAQmxErrorAutoStartWriteNotAllowedEventRegistered'
p32675
S'(-200985)'
p32676
sS'DAQmxErrorChanDoesNotSupportCompression'
p32677
S'(-200956)'
p32678
sS'DAQmx_Val_DigEdge'
p32679
S'10150'
p32680
sS'DAQmxErrorDACRngLowNotEqualToMinusRefVal'
p32681
S'(-200670)'
p32682
sS'DAQmxErrorPALResourceNotInitialized'
p32683
S'(-50104)'
p32684
sS'DAQmxErrorCIOnboardClockNotSupportedAsInputTerm'
p32685
S'(-200814)'
p32686
sS'DAQmxErrorSampClockSourceNotSupportedGivenTimingType'
p32687
S'(-200908)'
p32688
sS'DAQmx_Val_RefTrig'
p32689
S'10426'
p32690
sS'DAQmxErrorInvalidChannel'
p32691
S'(-200087)'
p32692
sS'DAQmxErrorCanExportOnlyOnboardSampClk'
p32693
S'(-200891)'
p32694
sS'DAQmxErrorDifferentRawDataFormats'
p32695
S'(-200955)'
p32696
sS'DAQmx_CO_OutputState'
p32697
S'0x0294'
p32698
sS'DAQmx_Val_FullBridgeII'
p32699
S'10184'
p32700
sS'DAQmx_AI_Freq_Units'
p32701
S'0x0806'
p32702
sS'DAQmxErrorCOWriteDutyCycleOutOfRange'
p32703
S'(-200684)'
p32704
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_8x16_Matrix'
p32705
S'"2530/1-Wire 8x16 Matrix"'
p32706
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_Octal_16x1_Mux'
p32707
S'"2530/1-Wire Octal 16x1 Mux"'
p32708
sS'DAQmxErrorPowerupStateNotSupported'
p32709
S'(-200663)'
p32710
sS'DAQmxErrorCantSetPropertyTaskNotRunning'
p32711
S'(-200972)'
p32712
sS'DAQmx_CO_Pulse_IdleState'
p32713
S'0x1170'
p32714
sS'DAQmxErrorPALResourceOwnedBySystem'
p32715
S'(-50100)'
p32716
ssS'unions'
p32717
(dp32718
sS'values'
p32719
(dp32720
g28087
I8993
sg28089
I-200186
sg28091
I4113
sg28093
I4115
sg28095
I4112
sg28097
I-200651
sg28099
I8905
sg28101
I-200584
sg28103
I6377
sg28105
I50411
sg28107
I-209801
sg28109
I-200233
sg28111
S'2575/2-Wire 95x1 Mux'
p32721
sg28113
I4247
sg28115
I-200143
sg28117
I-200194
sg28119
I6133
sg28121
I10185
sg28123
I-200094
sg28125
I4960
sg28127
I-200979
sg28129
I-200721
sg28131
I-200270
sg28133
I-200042
sg28135
I10109
sg28137
I-200051
sg28139
I8732
sg28141
I4676
sg28143
I-200616
sg28145
I8730
sg28147
I6204
sg28149
I-200722
sg28151
I6108
sg28153
I-200745
sg28155
I-200882
sg28157
I-200191
sg28159
I-200824
sg28161
I10205
sg28163
I-200507
sg28165
I-200669
sg28167
I-50408
sg28169
I-89135
sg28171
I-200837
sg28173
I-200915
sg28175
I-200201
sg28177
I-50400
sg28179
I-200163
sg28181
I-201053
sg28183
I-50006
sg28185
I209801
sg28187
I-200405
sg28189
I-200653
sg28191
I-200466
sg28193
I-200412
sg28195
I-200680
sg28197
I-200217
sg28199
I8726
sg28201
I-200564
sg28203
I8868
sg28205
I-200971
sg28207
I4472
sg28209
I-200005
sg28211
I6373
sg28213
I8943
sg28215
I50152
sg28217
I10279
sg28219
I-200961
sg28221
I-200686
sg28223
I-200312
sg28225
I-200485
sg28227
I-54011
sg28229
I8883
sg28231
I-200581
sg28233
I6372
sg28235
I6345
sg28237
I6347
sg28239
I6346
sg28241
I8577
sg28243
I-200131
sg28245
I8897
sg28247
I10270
sg28249
I-200528
sg28251
I6226
sg28253
I-200237
sg28255
I-200881
sg28257
I50004
sg28259
I-200277
sg28261
I-200834
sg28263
I10352
sg28265
I-200936
sg28267
I10183
sg28269
I50200
sg28271
I8722
sg28273
I50100
sg28275
I-200342
sg28277
I-50152
sg28279
I-200431
sg28281
I50000
sg28283
I-200034
sg28285
I10359
sg28287
I-200245
sg28289
I12550
sg28291
I-201029
sg28293
S'2576/2-Wire 64x1 Mux'
p32722
sg28295
I-200415
sg28297
I6369
sg28299
I8807
sg28301
I8682
sg28303
I-200283
sg28305
I-200863
sg28307
I-201059
sg28309
I-200214
sg28311
I6277
sg28313
I2389
sg28315
I-200630
sg28317
I10364
sg28319
I-201018
sg28321
I8916
sg28323
I8906
sg28325
I8892
sg28327
I8759
sg28329
I4981
sg28331
S'2585/1-Wire 10x1 Mux'
p32723
sg28333
I-200432
sg28335
I200022
sg28337
I-200406
sg28339
I-50260
sg28341
I-200649
sg28343
Nsg28345
I-200903
sg28347
I-50258
sg28349
I8891
sg28351
I10070
sg28353
I10361
sg28355
I-200382
sg28357
I8754
sg28359
I-200369
sg28361
S'1166/32-SPDT'
p32724
sg28363
I-50403
sg28365
I6300
sg28367
I-200543
sg28369
I-200424
sg28371
I8886
sg28373
I-50300
sg28375
I-200792
sg28377
I-200019
sg28379
I-200142
sg28381
I-50407
sg28383
I6338
sg28385
I10448
sg28387
S'2593/Dual 8x1 Mux'
p32725
sg28389
I8605
sg28391
L1L
sg28393
I-200464
sg28395
I-201079
sg28397
I-200224
sg28399
I6106
sg28401
I-200132
sg28403
I10132
sg28405
I-200525
sg28407
I10131
sg28409
S'2532/1-Wire Dual 4x64 Matrix'
p32726
sg28411
I4470
sg28413
I-50600
sg28415
I-201031
sg28417
I-200295
sg28419
I10273
sg28421
I-200390
sg28423
I50407
sg28425
I8750
sg28427
I-200826
sg28429
S'2584/1-Wire 15x1 Mux'
p32727
sg28431
I-200916
sg28433
I-200433
sg28435
I4864
sg28437
I-200367
sg28439
I6343
sg28441
I-201041
sg28443
I-200711
sg28445
I-200717
sg28447
I-200225
sg28449
I-200738
sg28451
I8866
sg28453
I8820
sg28455
S'2595/4x1 Mux'
p32728
sg28457
S'1193/32x1 Mux'
p32729
sg28459
I-200640
sg28461
I-200048
sg28463
I6310
sg28465
I-88716
sg28467
I10264
sg28469
I-200348
sg28471
I1939
sg28473
I-200159
sg28475
I6251
sg28477
I6441
sg28479
Nsg28481
I-200991
sg28483
I50404
sg28485
S'2576/2-Wire Octal 8x1 Mux'
p32730
sg28487
I6325
sg28489
I8705
sg28491
I-200749
sg28493
I-200024
sg28495
I-200808
sg28497
I-50301
sg28499
I-200571
sg28501
I-200222
sg28503
I-201033
sg28505
I-200446
sg28507
I-200311
sg28509
I8698
sg28511
I-89121
sg28513
I200025
sg28515
I-200003
sg28517
I-201016
sg28519
I10265
sg28521
I8706
sg28523
I8803
sg28525
I4629
sg28527
I-200811
sg28529
I-200692
sg28531
I-200308
sg28533
I-200998
sg28535
I-200461
sg28537
I8569
sg28539
I12531
sg28541
I-200589
sg28543
I-50206
sg28545
I10042
sg28547
I4726
sg28549
I8747
sg28551
I-200829
sg28553
I6445
sg28555
I8893
sg28557
I-200636
sg28559
I-50105
sg28561
I-50020
sg28563
I-89127
sg28565
I8749
sg28567
I-200862
sg28569
I-200244
sg28571
I6374
sg28573
I-200321
sg28575
I-50603
sg28577
I-200253
sg28579
I50103
sg28581
I-201083
sg28583
I8724
sg28585
I4656
sg28587
I-200273
sg28589
I-200472
sg28591
I-200469
sg28593
I50106
sg28595
L0L
sg28597
I-200145
sg28599
I-201086
sg28601
I-200948
sg28603
I5269
sg28605
I12538
sg28607
I10071
sg28609
I-201069
sg28611
I257
sg28613
I-200242
sg28615
I-200069
sg28617
I-201078
sg28619
I4625
sg28621
I-200740
sg28623
I-200551
sg28625
I6389
sg28627
S'2532/2-Wire 16x16 Matrix'
p32731
sg28629
I-200314
sg28631
I-200959
sg28633
I12491
sg28635
I4979
sg28637
I10085
sg28639
I-200505
sg28641
I-200271
sg28643
I-200933
sg28645
I-200276
sg28647
I-200119
sg28649
I10082
sg28651
I8564
sg28653
I-200035
sg28655
I-200568
sg28657
I-200622
sg28659
I-200007
sg28661
Nsg28663
I4657
sg28665
I-200483
sg28667
I-50011
sg28669
I8685
sg28671
S'1127/Independent'
p32732
sg28673
I-200387
sg28675
I-201084
sg28677
I8917
sg28679
I-200188
sg28681
I10430
sg28683
F-1.0
sg28685
I-200542
sg28687
I-201077
sg28689
I-200606
sg28691
I10095
sg28693
I-200654
sg28695
I6349
sg28697
I-200509
sg28699
I-200391
sg28701
I4992
sg28703
I8704
sg28705
I12484
sg28707
I8565
sg28709
I-200569
sg28711
I-89120
sg28713
I8766
sg28715
I-200643
sg28717
I-200153
sg28719
I8964
sg28721
I-200678
sg28723
I4647
sg28725
I10252
sg28727
I-200338
sg28729
I-200373
sg28731
I-200036
sg28733
I-200549
sg28735
I200003
sg28737
I-200363
sg28739
I-200015
sg28741
I12525
sg28743
I-200320
sg28745
Nsg28746
S'2530/1-Wire Quad 32x1 Mux'
p32733
sg28748
I-200666
sg28750
I-200839
sg28752
I-200374
sg28754
I-200523
sg28756
I-200286
sg28758
I-201055
sg28760
I10436
sg28762
I0
sg28764
I-200181
sg28766
I-200490
sg28768
S'2530/1-Wire 128x1 Mux'
p32734
sg28770
I10384
sg28772
I-200642
sg28774
I-200645
sg28776
S'1128/Independent'
p32735
sg28778
I-200210
sg28780
I-200459
sg28782
I-200532
sg28784
I-201095
sg28786
I200028
sg28788
I10269
sg28790
I1585
sg28792
I-200755
sg28794
I8737
sg28796
I-200771
sg28798
I12537
sg28800
I6177
sg28802
I50409
sg28804
I8574
sg28806
I10050
sg28808
I10151
sg28810
I12516
sg28812
I2069
sg28814
I8600
sg28816
I10153
sg28818
I-200331
sg28820
I-200330
sg28822
I-201062
sg28824
I8678
sg28826
I-200453
sg28828
I-200788
sg28830
I-200049
sg28832
I-200783
sg28834
I-54022
sg28836
S'2564/16-SPST'
p32736
sg28838
I8986
sg28840
I-50409
sg28842
I200042
sg28844
I-200457
sg28846
I200041
sg28848
I-200355
sg28850
I5989
sg28852
I-201080
sg28854
I-200050
sg28856
I1
sg28858
I-200629
sg28860
I6305
sg28862
I-200207
sg28864
I-200100
sg28866
I50008
sg28868
I-200823
sg28870
I-50604
sg28872
I4146
sg28874
I-200634
sg28876
I10353
sg28878
I8599
sg28880
I10103
sg28882
I10253
sg28884
I-200969
sg28886
I12522
sg28888
I-200176
sg28890
I12493
sg28892
I-200577
sg28894
I-201087
sg28896
I5137
sg28898
I-89123
sg28900
I200027
sg28902
I4484
sg28904
S'2530/4-Wire 32x1 Mux'
p32737
sg28906
I-200429
sg28908
I-200607
sg28910
I4872
sg28912
S'2527/4-Wire 16x1 Mux'
p32738
sg28914
I-200151
sg28916
I4865
sg28918
I-200700
sg28920
I200024
sg28922
I-200861
sg28924
I-200719
sg28926
I8668
sg28928
S'1130/2-Wire 128x1 Mux'
p32739
sg28930
I8970
sg28932
I10167
sg28934
I2130
sg28936
I-89138
sg28938
I-200099
sg28940
I-200790
sg28942
S'2576/2-Wire Dual 32x1 Mux'
p32740
sg28944
I-200760
sg28946
I-200797
sg28948
I-201014
sg28950
I-200874
sg28952
I8754
sg28954
I4710
sg28956
I-50404
sg28958
I4977
sg28960
I12548
sg28962
Nsg28963
I8700
sg28965
I-200632
sg28967
I-89130
sg28969
I8571
sg28971
S'1192/8-SPDT'
p32741
sg28973
I10292
sg28975
I8742
sg28977
I-201068
sg28979
I-200685
sg28981
I-200828
sg28983
I-200984
sg28985
I10447
sg28987
I6307
sg28989
I-50261
sg28991
I8997
sg28993
I6147
sg28995
I10425
sg28997
I6308
sg28999
I6449
sg29001
I-201049
sg29003
I-89145
sg29005
I8716
sg29007
S'2530/2-Wire Quad 16x1 Mux'
p32742
sg29009
S'1128/1-Wire 64x1 Mux'
p32743
sg29011
I-200695
sg29013
I-200761
sg29015
I1603
sg29017
I-89122
sg29019
I-201009
sg29021
I6166
sg29023
S'1129/2-Wire 16x16 Matrix'
p32744
sg29025
I328
sg29027
I10228
sg29029
I8721
sg29031
I1
sg29033
I12590
sg29035
I5015
sg29037
I-200964
sg29039
S'1193/Quad 4x1 Terminated Mux'
p32745
sg29041
I-200158
sg29043
I5911
sg29045
I8764
sg29047
I-200605
sg29049
I6134
sg29051
I12586
sg29053
I5172
sg29055
I-200973
sg29057
I-200522
sg29059
I-201061
sg29061
I-200047
sg29063
I-50410
sg29065
I4486
sg29067
I8744
sg29069
I-200157
sg29071
I-200219
sg29073
I-200857
sg29075
I-200258
sg29077
I-200618
sg29079
S'2501/2-Wire 4x6 Matrix'
p32746
sg29081
I10280
sg29083
I-50259
sg29085
I-200646
sg29087
I4403
sg29089
I-200752
sg29091
I-200498
sg29093
I200037
sg29095
I-200182
sg29097
I-200152
sg29099
S'1191/Quad 4x1 Mux'
p32747
sg29101
I9002
sg29103
I8788
sg29105
I10301
sg29107
I4980
sg29109
I-200578
sg29111
I4921
sg29113
I-201008
sg29115
I4193
sg29117
I10096
sg29119
I4880
sg29121
I6
sg29123
I1685
sg29125
I-200379
sg29127
I-200148
sg29129
I-200656
sg29131
S'1130/4-Wire 64x1 Mux'
p32748
sg29133
I-200560
sg29135
I-200756
sg29137
S'2599/2-SPDT'
p32749
sg29139
I8941
sg29141
I8920
sg29143
I5416
sg29145
Nsg29146
I200004
sg29148
I10143
sg29150
I-200626
sg29152
I10144
sg29154
I-200332
sg29156
I10145
sg29158
I10200
sg29160
I6316
sg29162
I4679
sg29164
I-200769
sg29166
I-50412
sg29168
I-200449
sg29170
I-200307
sg29172
I5216
sg29174
I1606
sg29176
I10300
sg29178
I-200160
sg29180
I10055
sg29182
S'2530/1-Wire 4x32 Matrix'
p32750
sg29184
I10086
sg29186
I98
sg29188
I6375
sg29190
I10428
sg29192
I-200173
sg29194
I-200305
sg29196
I-200062
sg29198
I4643
sg29200
I-200520
sg29202
I-200420
sg29204
S'2566/16-SPDT'
p32751
sg29206
I-201051
sg29208
S'1130/4-Wire Quad 16x1 Mux'
p32752
sg29210
I8597
sg29212
I1586
sg29214
I5013
sg29216
I10040
sg29218
I-200919
sg29220
I-200349
sg29222
I-50010
sg29224
I-200612
sg29226
I-200768
sg29228
I258
sg29230
I-200611
sg29232
I-200486
sg29234
I-200057
sg29236
I12574
sg29238
I-200541
sg29240
Nsg29242
S'2530/2-Wire Dual 32x1 Mux'
p32753
sg29244
I8681
sg29246
I-200762
sg29248
I-54021
sg29250
I-200734
sg29252
I50402
sg29254
I-200690
sg29256
I-200310
sg29258
I-200095
sg29260
I4985
sg29262
I3
sg29264
I5016
sg29266
I-200702
sg29268
I-200470
sg29270
I6165
sg29272
I-50550
sg29274
I-200574
sg29276
I8991
sg29278
I-200060
sg29280
I54022
sg29282
S'2575/2-Wire 98x1 Mux'
p32754
sg29284
I1945
sg29286
I-201022
sg29288
I-50352
sg29290
I-200586
sg29292
I-200538
sg29294
I-200031
sg29296
I10230
sg29298
I-200987
sg29300
I50012
sg29302
I-200844
sg29304
I-200121
sg29306
I-200753
sg29308
I50202
sg29310
I12490
sg29312
I5203
sg29314
S'2527/2-Wire 32x1 Mux'
p32755
sg29316
I-200300
sg29318
I-200026
sg29320
I-200958
sg29322
I307
sg29324
I6461
sg29326
I-89143
sg29328
I2433
sg29330
I-201070
sg29332
I-201050
sg29334
I4660
sg29336
I-200751
sg29338
I-200872
sg29340
I1601
sg29342
I-200345
sg29344
I-50106
sg29346
I8613
sg29348
I5123
sg29350
I10214
sg29352
I-200600
sg29354
I10424
sg29356
I-200303
sg29358
I-200120
sg29360
I5168
sg29362
I8890
sg29364
I6182
sg29366
I6247
sg29368
I-50150
sg29370
I-54012
sg29372
I1
sg29373
I12552
sg29375
I-200274
sg29377
I6319
sg29379
I-201026
sg29381
I6410
sg29383
I-200968
sg29385
I-200294
sg29387
I-200078
sg29389
I8753
sg29391
I200015
sg29393
I6125
sg29395
I8715
sg29397
I-200895
sg29399
S'2569/100-SPST'
p32756
sg29401
I2167
sg29403
I10134
sg29405
I-200357
sg29407
I10077
sg29409
I-200853
sg29411
I-200731
sg29413
I4932
sg29415
I5
sg29417
I-200912
sg29419
I-200275
sg29421
I-200419
sg29423
I-200530
sg29425
I-200741
sg29427
I-200234
sg29429
I-200993
sg29431
I8710
sg29433
I-200931
sg29435
I-200843
sg29437
I-200682
sg29439
I8701
sg29441
I-200178
sg29443
I10244
sg29445
I-200888
sg29447
I5159
sg29449
I-200479
sg29451
I-200592
sg29453
I-200481
sg29455
I12577
sg29457
I-200322
sg29459
I4150
sg29461
I-200491
sg29463
I12494
sg29465
I4646
sg29467
S'1190/Quad 4x1 Mux'
p32757
sg29469
I-200223
sg29471
I8702
sg29473
I4917
sg29475
I-201019
sg29477
I-200169
sg29479
I-200827
sg29481
S'1193/Quad 8x1 Mux'
p32758
sg29483
I-200864
sg29485
I-200423
sg29487
I-200906
sg29489
I4148
sg29491
I-200340
sg29493
I8694
sg29495
S'2503/1-Wire 48x1 Mux'
p32759
sg29497
I-200101
sg29499
I50019
sg29501
I5208
sg29503
I-200705
sg29505
I8712
sg29507
I10280
sg29509
I2
sg29511
I-200770
sg29513
I-50012
sg29515
I-200266
sg29517
I2
sg29518
I-200803
sg29520
S'2598/Dual Transfer'
p32760
sg29522
I2083
sg29524
I-50209
sg29526
S'1169/100-SPST'
p32761
sg29528
I-200455
sg29530
I8789
sg29532
S'2532/2-Wire 4x64 Matrix'
p32762
sg29534
I10092
sg29536
I10090
sg29538
I10091
sg29540
I4886
sg29542
I-209803
sg29544
I-50264
sg29546
I-200806
sg29548
I200043
sg29550
I-200725
sg29552
I10268
sg29554
I-200467
sg29556
I-200661
sg29558
I-200920
sg29560
Nsg29561
I-200010
sg29563
I2325
sg29565
I-201024
sg29567
I-200279
sg29569
I10072
sg29571
S'1160/16-SPDT'
p32763
sg29573
I8691
sg29575
I-201035
sg28081
Nsg29577
I-200934
sg29579
I200018
sg29581
I5430
sg29583
I-200746
sg29585
I2100
sg29587
I10303
sg29589
I10323
sg29591
I-200439
sg29593
S'1129/2-Wire Quad 4x16 Matrix'
p32764
sg29595
I-200960
sg29597
I-200978
sg29599
I-200044
sg29601
I-200793
sg29603
I8860
sg29605
I-201003
sg29607
I8823
sg29609
I6380
sg29611
I-200558
sg29613
I-200397
sg29615
I-200514
sg29617
I-200501
sg29619
S'2527/Independent'
p32765
sg29621
I-200315
sg29623
I-200994
sg29625
I10307
sg29627
I-200704
sg29629
I104
sg29631
I50014
sg29633
I5122
sg29635
I-50000
sg29637
I-200202
sg29639
I8598
sg29641
I-200869
sg29643
I4662
sg29645
I-200633
sg29647
I-50800
sg29649
I327
sg29651
I-200297
sg29653
I-200590
sg29655
I6273
sg29657
I8763
sg29659
I-200712
sg29661
I10322
sg29663
I1424
sg29665
I-50008
sg29667
S'2503/2-Wire Dual 12x1 Mux'
p32766
sg29669
I10450
sg29671
I-200703
sg29673
I-200227
sg29675
I5154
sg29677
I-200445
sg29679
I13612
sg29681
I-200260
sg29683
I12481
sg29685
I-200660
sg29687
I6382
sg29689
I-200789
sg29691
I-200613
sg29693
I10437
sg29695
I8740
sg29697
I4723
sg29699
I-200928
sg29701
I10069
sg29703
I6393
sg29705
I-200077
sg29707
I12482
sg29709
I-200918
sg29711
I-89133
sg29713
I-200167
sg29715
I-201065
sg29717
I6448
sg29719
I12555
sg29721
I6139
sg29723
I-200773
sg29725
I200038
sg29727
S'1193/Independent'
p32767
sg29729
I5378
sg29731
I4935
sg29733
I50500
sg29735
I5701
sg29737
I50005
sg29739
I-50016
sg29741
I-201057
sg29743
I-200375
sg29745
I-200802
sg29747
I-200221
sg29749
I-200341
sg29751
S'1167/Independent'
p32768
sg29753
I-200593
sg29755
I-200140
sg29757
I-200820
sg29759
I-200052
sg29761
I-50108
sg29763
I8606
sg29765
I4968
sg29767
I-200801
sg29769
I4147
sg29771
I-200976
sg29773
I-200356
sg29775
I-89140
sg29777
I8671
sg29779
I8852
sg29781
I-50351
sg29783
I-200452
sg29785
I-200427
sg29787
I-200068
sg29789
I200012
sg29791
I-200865
sg29793
I10128
sg29795
I-50107
sg29797
I-200102
sg29799
I-200385
sg29801
I-200638
sg29803
I12539
sg29805
I8703
sg29807
I-200504
sg29809
S'1193/Dual 16x1 Mux'
p32769
sg29811
I8899
sg29813
I8693
sg29815
I1616
sg29817
I-200414
sg29819
I4867
sg29821
I-200527
sg29823
I10235
sg29825
I8974
sg29827
I-200556
sg29829
I-200921
sg29831
I-200017
sg29833
I-200728
sg29835
I8817
sg29837
I-200585
sg29839
I-200890
sg29841
I1607
sg29843
I-200189
sg29845
I8720
sg29847
I-200104
sg29849
I-200011
sg29851
I-200235
sg29853
I12528
sg29855
I6442
sg29857
I8735
sg29859
I9000
sg29861
I8992
sg29863
I50107
sg29865
I-50503
sg29867
I-200396
sg29869
I1617
sg29871
I50009
sg29873
I-50103
sg29875
I-201089
sg29877
I8855
sg29879
I-200907
sg29881
I2
sg29882
I6357
sg29884
I-200041
sg29886
I1
sg29887
I0
sg29888
I-200962
sg29890
I-201027
sg29892
I-200524
sg29894
I-200323
sg29896
I-200263
sg29898
I8672
sg29900
I-200074
sg29902
I6358
sg29904
S'1175/2-Wire 98x1 Mux'
p32770
sg29906
I-201052
sg29908
I-89128
sg29910
I-50302
sg29912
I10066
sg29914
I-200199
sg29916
I-200130
sg29918
I1605
sg29920
I-200620
sg29922
I-201037
sg29924
I6231
sg29926
I-200647
sg29928
I-200954
sg29930
I8762
sg29932
I-200644
sg29934
I-200086
sg29936
I-200172
sg29938
I10272
sg29940
I-200608
sg29942
I4965
sg29944
I8670
sg29946
I-200825
sg29948
I10073
sg29950
I-200766
sg29952
I1687
sg29954
I-200599
sg29956
I5703
sg29958
I-201011
sg29960
I6320
sg29962
I8921
sg29964
I-200076
sg29966
I-200344
sg29968
I10113
sg29970
I-200039
sg29972
I-200778
sg29974
I-200846
sg29976
I6313
sg29978
S'1130/2-Wire Octal 16x1 Mux'
p32771
sg29980
I8895
sg29982
I8696
sg29984
I-200125
sg29986
I12530
sg29988
I-200380
sg29990
I50001
sg29992
I-200850
sg29994
I8761
sg29996
I-200325
sg29998
I10239
sg30000
I-200997
sg30002
I-200856
sg30004
I6278
sg30006
I8669
sg30008
I4648
sg30010
I-200252
sg30012
I-89144
sg30014
I-200598
sg30016
I12483
sg30018
I10432
sg30020
I-200924
sg30022
I10053
sg30024
I-200107
sg30026
I10449
sg30028
I10451
sg30030
I-200246
sg30032
I-200990
sg30034
I-200657
sg30036
I-200723
sg30038
I8745
sg30040
I-200336
sg30042
I-200282
sg30044
S'2501/4-Wire 12x1 Mux'
p32772
sg30046
I-200932
sg30048
I8813
sg30050
I-200970
sg30052
I-200154
sg30054
I2320
sg30056
I-200122
sg30058
I10054
sg30060
I5176
sg30062
I-200941
sg30064
I-200256
sg30066
I10356
sg30068
I6446
sg30070
I-200393
sg30072
I8806
sg30074
I-50252
sg30076
I8882
sg30078
I-200999
sg30080
I-89149
sg30082
I-200482
sg30084
S'2501/1-Wire 48x1 Mux'
p32773
sg30086
I10160
sg30088
I-200579
sg30090
I-50175
sg30092
I5127
sg30094
I323
sg30096
I-201017
sg30098
I-200757
sg30100
I8804
sg30102
I-200897
sg30104
I-200758
sg30106
I8847
sg30108
I-200318
sg30110
I-200804
sg30112
I-89147
sg30114
I-200639
sg30116
I-200559
sg30118
I10373
sg30120
I-200177
sg30122
I-200343
sg30124
I-200995
sg30126
I-54023
sg30128
I-201005
sg30130
I50101
sg30132
I-200492
sg30134
I12583
sg30136
I-200046
sg30138
I-200149
sg30140
I8826
sg30142
I10354
sg30144
I-200940
sg30146
I1688
sg30148
I-200767
sg30150
I-50018
sg30152
I-200736
sg30154
I-200213
sg30156
I10254
sg30158
S'2532/1-Wire Dual 8x32 Matrix'
p32774
sg30160
I-88705
sg30162
I-200575
sg30164
I-200877
sg30166
I-200335
sg30168
I8661
sg30170
I10441
sg30172
I5984
sg30174
I-200929
sg30176
I6189
sg30178
I-200597
sg30180
I-200641
sg30182
I4976
sg30184
I-200904
sg30186
I-50406
sg30188
I4722
sg30190
I-200674
sg30192
I-200873
sg30194
I6322
sg30196
I5716
sg30198
I-201012
sg30200
I50007
sg30202
I-200885
sg30204
I10282
sg30206
I-200134
sg30208
I-200570
sg30210
I8663
sg30212
I8572
sg30214
I664
sg30216
I-200180
sg30218
I-200138
sg30220
I-200859
sg30222
I-200799
sg30224
I-50502
sg30226
I-200913
sg30228
I-200910
sg30230
I-50401
sg30232
I8864
sg30234
I-200506
sg30236
I512
sg30238
I-200784
sg30240
I-200518
sg30242
I4176
sg30244
I4711
sg30246
I-201054
sg30248
I-200008
sg30250
I50151
sg30252
I6131
sg30254
I12549
sg30256
I-200774
sg30258
S'2532/1-Wire 16x32 Matrix'
p32775
sg30260
I-201034
sg30262
I-200521
sg30264
I8596
sg30266
S'2527/1-Wire 64x1 Mux'
p32776
sg30268
I-88717
sg30270
I-200943
sg30272
I8723
sg30274
I-200545
sg30276
I6428
sg30278
I-201094
sg30280
S'1127/4-Wire 16x1 Mux'
p32777
sg30282
I-200554
sg30284
I-200014
sg30286
I2192
sg30288
I8972
sg30290
I-200477
sg30292
I200007
sg30294
I-200965
sg30296
I6253
sg30298
I-200889
sg30300
I12505
sg30302
I8863
sg30304
I-200289
sg30306
I-200809
sg30308
S'1194/Quad 4x1 Mux'
p32778
sg30310
I-200688
sg30312
I200039
sg30314
I-200037
sg30316
I825
sg30318
I-200659
sg30320
I-200510
sg30322
I-200526
sg30324
I-50205
sg30326
I-200791
sg30328
I8673
sg30330
I8746
sg30332
I322
sg30334
I200040
sg30336
I-200502
sg30338
S'2501/2-Wire 24x1 Mux'
p32779
sg30340
I659
sg30342
I8805
sg30344
S'2503/4-Wire 12x1 Mux'
p32780
sg30346
I-200795
sg30348
I-200733
sg30350
I50102
sg30352
I8909
sg30354
I-50013
sg30356
I-200187
sg30358
I-200027
sg30360
I6387
sg30362
I4
sg30364
I-200292
sg30366
I6330
sg30368
S'2567/Independent'
p32781
sg30370
I1604
sg30372
I-200442
sg30374
I6244
sg30376
I4931
sg30378
I8618
sg30380
I12584
sg30382
I-200777
sg30384
I6271
sg30386
I-200409
sg30388
I8821
sg30390
I200021
sg30392
I-200548
sg30394
I5124
sg30396
I-200029
sg30398
I-50353
sg30400
I-200868
sg30402
I8887
sg30404
I-201020
sg30406
I2307
sg30408
I-50602
sg30410
I308
sg30412
I200011
sg30414
I-200499
sg30416
I4407
sg30418
I-200411
sg30420
I-89150
sg30422
I-50350
sg30424
I-200072
sg30426
I-200922
sg30428
I4149
sg30430
I5988
sg30432
I-200259
sg30434
I-200708
sg30436
I12526
sg30438
I-200075
sg30440
I-200402
sg30442
Nsg30443
I50255
sg30445
I5161
sg30447
I-200517
sg30449
I-200354
sg30451
I4242
sg30453
I10210
sg30455
I-200063
sg30457
I-200813
sg30459
I5732
sg30461
I6284
sg30463
I10093
sg30465
I-200822
sg30467
I10242
sg30469
I-200699
sg30471
I-200110
sg30473
I-200291
sg30475
I-200547
sg30477
I2434
sg30479
I5912
sg30481
I-88708
sg30483
I10186
sg30485
I10125
sg30487
I8708
sg30489
S'1161/8-SPDT'
p32782
sg30491
I-200200
sg30493
I-50500
sg30495
I2177
sg30497
I-200566
sg30499
S'1163R/Octal 4x1 Mux'
p32783
sg30501
I8699
sg30503
I-200576
sg30505
I-88900
sg30507
I-50005
sg30509
I5156
sg30511
I200019
sg30513
I-200020
sg30515
I8602
sg30517
I10313
sg30519
I-200500
sg30521
I-50014
sg30523
I-200111
sg30525
I-200536
sg30527
I10181
sg30529
I-200886
sg30531
I-200603
sg30533
I10199
sg30535
I-200018
sg30537
I-200730
sg30539
S'1127/2-Wire 4x8 Matrix'
p32784
sg30541
I10208
sg30543
I-201028
sg30545
I10209
sg30547
I10099
sg30549
I-200108
sg30551
S'1129/2-Wire 4x64 Matrix'
p32785
sg30553
I4868
sg30555
I-50254
sg30557
S'2501/1-Wire 48x1 Amplified Mux'
p32786
sg30559
I-200677
sg30561
I1651
sg30563
I-50354
sg30565
I-200055
sg30567
I-200847
sg30569
I0
sg30570
I-200529
sg30572
I-200942
sg30574
I8885
sg30576
I-200974
sg30578
I1
sg30579
I-200539
sg30581
I-200268
sg30583
I12492
sg30585
I-200023
sg30587
I12536
sg30589
I-50501
sg30591
I-200914
sg30593
I-200249
sg30595
I-200193
sg30597
I50104
sg30599
I-200624
sg30601
I-200454
sg30603
I-200329
sg30605
S'2576/Independent'
p32787
sg30607
I280
sg30609
I-200902
sg30611
I-200992
sg30613
I-200930
sg30615
S'1130/1-Wire 8x32 Matrix'
p32788
sg30617
I-200488
sg30619
I12487
sg30621
I-200025
sg30623
I10256
sg30625
I-200226
sg30627
I1682
sg30629
I-200156
sg30631
I-200841
sg30633
I-200754
sg30635
I-200625
sg30637
I-201043
sg30639
I-201073
sg30641
I-200617
sg30643
S'2593/Independent'
p32789
sg30645
I-200996
sg30647
I-200377
sg30649
I-200619
sg30651
I4649
sg30653
I-200602
sg30655
S'1130/1-Wire 4x64 Matrix'
p32790
sg30657
I4966
sg30659
I4675
sg30661
I4982
sg30663
I10178
sg30665
I-201036
sg30667
I-50265
sg30669
I8767
sg30671
I4887
sg30673
I-200407
sg30675
I12556
sg30677
I-200718
sg30679
I2165
sg30681
I-200938
sg30683
I-54010
sg30685
I-200937
sg30687
S'1130/2-Wire Quad 32x1 Mux'
p32791
sg30689
I6248
sg30691
I10106
sg30693
I5140
sg30695
I10101
sg30697
I10390
sg30699
I6170
sg30701
I8912
sg30703
I-200604
sg30705
I200035
sg30707
I1412
sg30709
I-200440
sg30711
I-200562
sg30713
I-200475
sg30715
I-200925
sg30717
I-200171
sg30719
S'1195/Quad 4x1 Mux'
p32792
sg30721
I-200627
sg30723
I8768
sg30725
I10348
sg30727
I8999
sg30729
I-200977
sg30731
I8611
sg30733
I-200701
sg30735
I-201066
sg30737
I-50009
sg30739
I-200326
sg30741
I-200750
sg30743
I-200546
sg30745
I-200899
sg30747
I4658
sg30749
I-200852
sg30751
S'1128/2-Wire 32x1 Mux'
p32793
sg30753
I5
sg30754
S'1128/4-Wire 16x1 Mux'
p32794
sg30756
I4144
sg30758
S'1130/1-Wire Quad 64x1 Mux'
p32795
sg30760
I-50651
sg30762
I-50413
sg30764
I12515
sg30766
I-200496
sg30768
I-200028
sg30770
I6194
sg30772
I-200689
sg30774
I4243
sg30776
I-200371
sg30778
I8824
sg30780
I8616
sg30782
I-200981
sg30784
I10124
sg30786
I10171
sg30788
I-200926
sg30790
I-200428
sg30792
I8898
sg30794
I-200665
sg30796
I8913
sg30798
S'2532/1-Wire 8x64 Matrix'
p32796
sg30800
I-200155
sg30802
I4
sg30804
I8739
sg30806
I-50411
sg30808
I4465
sg30810
I5145
sg30812
I5264
sg30814
I2321
sg30816
S'2565/16-SPST'
p32797
sg30818
I8825
sg30820
I-200065
sg30822
I-200743
sg30824
I-200204
sg30826
I12551
sg30828
I8914
sg30830
I-200022
sg30832
I10284
sg30834
I6230
sg30836
I6188
sg30838
I10342
sg30840
I12540
sg30842
I-200693
sg30844
I-200637
sg30846
I12514
sg30848
I12513
sg30850
I6463
sg30852
S'2529/2-Wire 8x16 Matrix'
p32798
sg30854
I-200720
sg30856
I10192
sg30858
I-200876
sg30860
I-201021
sg30862
I8576
sg30864
I-200858
sg30866
I10186
sg30868
I200030
sg30870
I-201091
sg30872
I-200949
sg30874
I8758
sg30876
S'2532/1-Wire 4x128 Matrix'
p32799
sg30878
I-200553
sg30880
I-200410
sg30882
I8889
sg30884
I8867
sg30886
I-200447
sg30888
I1
sg30889
I10398
sg30891
I-200764
sg30893
I-200359
sg30895
I-200136
sg30897
I-200231
sg30899
I8734
sg30901
I-200030
sg30903
I10110
sg30905
I8751
sg30907
I10078
sg30909
I-200404
sg30911
I10311
sg30913
I-200840
sg30915
S'2529/2-Wire Dual 4x16 Matrix'
p32800
sg30917
I8568
sg30919
I-200184
sg30921
I-200388
sg30923
I-200334
sg30925
I-200901
sg30927
I-200422
sg30929
I8819
sg30931
I8666
sg30933
I6252
sg30935
I10123
sg30937
I10041
sg30939
I6306
sg30941
I8729
sg30943
I8994
sg30945
I-200168
sg30947
I-200416
sg30949
I10389
sg30951
S'2591/4x1 Mux'
p32801
sg30953
I10182
sg30955
I-200097
sg30957
I-50405
sg30959
I-200183
sg30961
I-200552
sg30963
I-200056
sg30965
I6332
sg30967
S'2593/16x1 Mux'
p32802
sg30969
I-201088
sg30971
S'2570/40-SPDT'
p32803
sg30973
I-200796
sg30975
I2361
sg30977
I-200535
sg30979
I50016
sg30981
I5136
sg30983
I-50257
sg30985
I-200071
sg30987
I2085
sg30989
I-201007
sg30991
I-200272
sg30993
I12547
sg30995
I-200697
sg30997
I8998
sg30999
I-200421
sg31001
Nsg31002
I-200212
sg31004
I-201002
sg31006
I10379
sg31008
I0
sg31010
I-200040
sg31012
I5719
sg31014
I10362
sg31016
I6392
sg31018
I8862
sg31020
I-200290
sg31022
I-200832
sg31024
I-200683
sg31026
I-200304
sg31028
I-201048
sg31030
I10107
sg31032
I8757
sg31034
I-200737
sg31036
I5153
sg31038
I-200952
sg31040
I-200032
sg31042
I200016
sg31044
I-200817
sg31046
I-200879
sg31048
I10171
sg31050
I-200512
sg31052
I-89126
sg31054
I-201044
sg31056
I0
sg31057
I-200798
sg31059
S'1130/1-Wire Octal 32x1 Mux'
p32804
sg31061
I6288
sg31063
I-50203
sg31065
I-200443
sg31067
I-201072
sg31069
I6187
sg31071
I-200462
sg31073
I-201058
sg31075
S'2594/4x1 Mux'
p32805
sg31077
I-200775
sg31079
I-200567
sg31081
I-200091
sg31083
I-50204
sg31085
I-200986
sg31087
I50258
sg31089
I-200655
sg31091
I0
sg31092
I-200426
sg31094
I-89137
sg31096
I-200724
sg31098
I10081
sg31100
I-200946
sg31102
I-200264
sg31104
I-200893
sg31106
I200017
sg31108
I8687
sg31110
I-200787
sg31112
I-200716
sg31114
I8942
sg31116
I10083
sg31118
I10433
sg31120
I50256
sg31122
I-200729
sg31124
I8989
sg31126
I-200092
sg31128
I-200262
sg31130
I-50017
sg31132
I5767
sg31134
I12585
sg31136
I-200448
sg31138
I-200360
sg31140
S'1130/Independent'
p32806
sg31142
I10043
sg31144
Nsg31146
I-201015
sg31148
I-200073
sg31150
S'2530/2-Wire 4x16 Matrix'
p32807
sg31152
I329
sg31154
I-200043
sg31156
I12511
sg31158
I-200785
sg31160
I4361
sg31162
I50551
sg31164
I6110
sg31166
I-201081
sg31168
I-200713
sg31170
I-200161
sg31172
I12507
sg31174
I8856
sg31176
I6179
sg31178
I2452
sg31180
I4641
sg31182
I8692
sg31184
I8752
sg31186
I-89129
sg31188
I-200588
sg31190
I-200650
sg31192
I6317
sg31194
I-200082
sg31196
I8725
sg31198
I8748
sg31200
I-200198
sg31202
I-200399
sg31204
S'2593/Dual 4x1 Terminated Mux'
p32808
sg31206
I-200392
sg31208
I5713
sg31210
I135
sg31212
I200036
sg31214
I-200098
sg31216
I-88715
sg31218
I-200066
sg31220
I5014
sg31222
I50105
sg31224
I-200851
sg31226
I-200128
sg31228
I-200565
sg31230
I6323
sg31232
I12486
sg31234
I-200216
sg31236
Nsg31237
I8786
sg31239
I3
sg31240
I12573
sg31242
I10304
sg31244
Nsg31245
I-200247
sg31247
I-200687
sg31249
I4869
sg31251
I-200137
sg31253
I-200352
sg31255
I-200489
sg31257
I-200807
sg31259
I-200601
sg31261
I50006
sg31263
I8741
sg31265
S'2503/2-Wire Quad 6x1 Mux'
p32809
sg31267
I-200836
sg31269
I6331
sg31271
I-200425
sg31273
I5189
sg31275
I-200739
sg31277
S'1193/Dual 8x1 Terminated Mux'
p32810
sg31279
I-54020
sg31281
I-200139
sg31283
I10227
sg31285
I50003
sg31287
I-200230
sg31289
I4969
sg31291
I10438
sg31293
I-200892
sg31295
I-200652
sg31297
I-209800
sg31299
S'1193/16x1 Terminated Mux'
p32811
sg31301
I6250
sg31303
I-200537
sg31305
I-200474
sg31307
I200013
sg31309
I-200494
sg31311
I-201046
sg31313
I-200175
sg31315
I-200254
sg31317
I-200239
sg31319
I-200898
sg31321
I5704
sg31323
I148
sg31325
I-200950
sg31327
I-200376
sg31329
I6415
sg31331
S'2532/1-Wire Sixteen 2x16 Matrix'
p32812
sg31333
I8617
sg31335
I-200515
sg31337
I50405
sg31339
I200034
sg31341
I-201071
sg31343
I-200141
sg31345
I-200727
sg31347
I-200848
sg31349
I5702
sg31351
I-200905
sg31353
I-200816
sg31355
I-200301
sg31357
I-200923
sg31359
I-201092
sg31361
I8714
sg31363
I2
sg31365
I12546
sg31367
I-201074
sg31369
I12506
sg31371
I-50303
sg31373
S'1130/1-Wire 256x1 Mux'
p32813
sg31375
I-89134
sg31377
I-50202
sg31379
I8690
sg31381
I-200691
sg31383
I-50200
sg31385
I5141
sg31387
I-50004
sg31389
I-200353
sg31391
I-200206
sg31393
S'2501/2-Wire Dual 12x1 Mux'
p32814
sg31395
I-200732
sg31397
I-200267
sg31399
I-200880
sg31401
I-54002
sg31403
S'2590/4x1 Mux'
p32815
sg31405
I6275
sg31407
I-200045
sg31409
I8582
sg31411
I-200631
sg31413
I-201056
sg31415
I8861
sg31417
I50403
sg31419
I-200980
sg31421
I6301
sg31423
I10065
sg31425
I-88710
sg31427
I50260
sg31429
I10237
sg31431
I8736
sg31433
I8615
sg31435
I-200615
sg31437
I10137
sg31439
S'2593/8x1 Terminated Mux'
p32816
sg31441
I-200053
sg31443
I-200248
sg31445
I-200004
sg31447
I-200381
sg31449
I10204
sg31451
I-201039
sg31453
I-200786
sg31455
I8755
sg31457
I-200519
sg31459
I-200838
sg31461
I50015
sg31463
I-200676
sg31465
I10241
sg31467
I10146
sg31469
I-50019
sg31471
I10116
sg31473
I200029
sg31475
I6241
sg31477
I-200364
sg31479
I-200673
sg31481
I5160
sg31483
I-200628
sg31485
I-200621
sg31487
I-200351
sg31489
S'2530/1-Wire Dual 64x1 Mux'
p32817
sg31491
I10172
sg31493
I-200126
sg31495
S'2597/6x1 Terminated Mux'
p32818
sg31497
I-200144
sg31499
I-200346
sg31501
I-200317
sg31503
I-200093
sg31505
I-200450
sg31507
I-200250
sg31509
I6459
sg31511
I-200190
sg31513
I200010
sg31515
I8607
sg31517
I-200672
sg31519
I6140
sg31521
I12512
sg31523
I-200800
sg31525
I6379
sg31527
I-200735
sg31529
I-200497
sg31531
S'2503/2-Wire 24x1 Mux'
p32819
sg31533
I-50250
sg31535
I-200228
sg31537
I10326
sg31539
I10267
sg31541
I-200240
sg31543
I-200465
sg31545
I10188
sg31547
I-200782
sg31549
I-200067
sg31551
I-200389
sg31553
I-200939
sg31555
S'1175/1-Wire 196x1 Mux'
p32820
sg31557
I-200944
sg31559
I-200591
sg31561
I8908
sg31563
I200032
sg31565
I833
sg31567
I12470
sg31569
I-50700
sg31571
I-50207
sg31573
S'1129/2-Wire Dual 8x16 Matrix'
p32821
sg31575
I336
sg31577
S'2586/10-SPST'
p32822
sg31579
I10310
sg31581
I12527
sg31583
I10200
sg31585
I4709
sg31587
I6276
sg31589
I-200681
sg31591
I-201000
sg31593
I-201063
sg31595
I50011
sg31597
I8683
sg31599
I-200957
sg31601
I10105
sg31603
I-200261
sg31605
I6130
sg31607
I-200478
sg31609
I-200744
sg31611
I-200109
sg31613
I10158
sg31615
I-201045
sg31617
I-201090
sg31619
I6304
sg31621
I-200269
sg31623
I-200418
sg31625
I-201042
sg31627
I4962
sg31629
I8570
sg31631
I8765
sg31633
I-200327
sg31635
I-200337
sg31637
I4244
sg31639
I-201082
sg31641
I-200118
sg31643
I-200833
sg31645
I-200236
sg31647
I8900
sg31649
I-200358
sg31651
S'1130/1-Wire Dual 128x1 Mux'
p32823
sg31653
I8667
sg31655
I-200664
sg31657
I-200135
sg31659
I200033
sg31661
I-200398
sg31663
I10164
sg31665
I324
sg31667
I-200170
sg31669
S'2527/1-Wire Dual 32x1 Mux'
p32824
sg31671
I-89139
sg31673
S'2501/2-Wire Quad 6x1 Mux'
p32825
sg31675
I-200112
sg31677
I6240
sg31679
I-89148
sg31681
I-200845
sg31683
I6105
sg31685
I-200302
sg31687
I-200883
sg31689
I4487
sg31691
I-200966
sg31693
I-201075
sg31695
S'2530/Independent'
p32826
sg31697
I4488
sg31699
I12509
sg31701
I8686
sg31703
I-200413
sg31705
I-50256
sg31707
I8910
sg31709
I-200508
sg31711
I661
sg31713
I-200557
sg31715
I8743
sg31717
I10278
sg31719
I-200333
sg31721
I6192
sg31723
I-200503
sg31725
I6318
sg31727
I-200133
sg31729
I-200835
sg31731
I-1
sg31733
I-200394
sg31735
I50013
sg31737
I-200609
sg31739
I-200365
sg31741
I-200123
sg31743
I8865
sg31745
I-200533
sg31747
I6391
sg31749
I-200368
sg31751
S'2532/2-Wire 8x32 Matrix'
p32827
sg31753
I-200763
sg31755
I10439
sg31757
I-200819
sg31759
S'1129/2-Wire 8x32 Matrix'
p32828
sg31761
I-201076
sg31763
I8612
sg31765
I8733
sg31767
I-200671
sg31769
I-200596
sg31771
I6283
sg31773
I10299
sg31775
I-200012
sg31777
S'2576/2-Wire Quad 16x1 Mux'
p32829
sg31779
I-200947
sg31781
I-200668
sg31783
I4663
sg31785
I-200257
sg31787
I-200059
sg31789
I-200309
sg31791
I-209805
sg31793
I1
sg31794
I8787
sg31796
I10157
sg31798
I5731
sg31800
S'2530/2-Wire 64x1 Mux'
p32830
sg31802
I12504
sg31804
I-200849
sg31806
I-201030
sg31808
I-200370
sg31810
I-50102
sg31812
I-200441
sg31814
I8884
sg31816
I8822
sg31818
I6376
sg31820
I-50262
sg31822
I-200776
sg31824
I-200900
sg31826
I2184
sg31828
I-200679
sg31830
I-201064
sg31832
I-201032
sg31834
I-200563
sg31836
I200020
sg31838
I-200166
sg31840
I-89142
sg31842
I-89146
sg31844
I-200561
sg31846
I-200675
sg31848
I209802
sg31850
I12529
sg31852
I-200195
sg31854
I-200463
sg31856
I-209802
sg31858
I-200350
sg31860
I-200831
sg31862
I-200896
sg31864
I12510
sg31866
I10289
sg31868
I6443
sg31870
I10434
sg31872
I-200451
sg31874
I200005
sg31876
I8995
sg31878
I-200871
sg31880
I10431
sg31882
I-200162
sg31884
I8894
sg31886
I80
sg31888
I-200555
sg31890
I12508
sg31892
I-200287
sg31894
I-201093
sg31896
I-200945
sg31898
I8620
sg31900
I8904
sg31902
I-200430
sg31904
I8769
sg31906
I-200436
sg31908
I-200772
sg31910
I50351
sg31912
I0
sg31913
I8918
sg31915
I-200694
sg31917
I-200854
sg31919
I-200710
sg31921
I8818
sg31923
I200044
sg31925
I-200511
sg31927
I2185
sg31929
I-200878
sg31931
I6126
sg31933
I8728
sg31935
I10427
sg31937
I-200386
sg31939
I8880
sg31941
S'2529/2-Wire 4x32 Matrix'
p32831
sg31943
I-200953
sg31945
I-200975
sg31947
S'1128/2-Wire 4x8 Matrix'
p32832
sg31949
I50406
sg31951
I5768
sg31953
I8689
sg31955
S'2576/2-Wire Sixteen 4x1 Mux'
p32833
sg31957
I10119
sg31959
I-200088
sg31961
I8609
sg31963
I-200531
sg31965
I6145
sg31967
I10219
sg31969
I6381
sg31971
I-200580
sg31973
I-200090
sg31975
I8731
sg31977
I-200103
sg31979
I8963
sg31981
I9001
sg31983
I6109
sg31985
S'2568/31-SPST'
p32834
sg31987
I-200460
sg31989
I-200870
sg31991
S'2530/4-Wire Dual 16x1 Mux'
p32835
sg31993
I10097
sg31995
I-200378
sg31997
I-200582
sg31999
I6412
sg32001
I-200860
sg32003
I-201047
sg32005
I4360
sg32007
I-89124
sg32009
I-200435
sg32011
S'2503/2-Wire 4x6 Matrix'
p32836
sg32013
I8718
sg32015
I-200400
sg32017
I10302
sg32019
I-200812
sg32021
I-200220
sg32023
I-200324
sg32025
S'1129/2-Wire Dual 4x32 Matrix'
p32837
sg32027
I2456
sg32029
I-200587
sg32031
I-50002
sg32033
I-200218
sg32035
I209800
sg32037
I-200493
sg32039
I0
sg32040
I-50251
sg32042
I6344
sg32044
I-200288
sg32046
I-89136
sg32048
I-200127
sg32050
I10080
sg32052
I-200667
sg32054
I10047
sg32056
I8985
sg32058
I8697
sg32060
I-200658
sg32062
I8684
sg32064
I-200513
sg32066
I-200473
sg32068
I-200366
sg32070
I10152
sg32072
I8756
sg32074
I50254
sg32076
I6378
sg32078
I-200316
sg32080
I4680
sg32082
I304
sg32084
I-200064
sg32086
I-200211
sg32088
I5120
sg32090
I-200780
sg32092
I-50253
sg32094
I-200079
sg32096
I10286
sg32098
I5143
sg32100
I6202
sg32102
I8971
sg32104
I-201013
sg32106
I-200265
sg32108
I50410
sg32110
I1
sg32111
I-200016
sg32113
I-201010
sg32115
S'2527/2-Wire Dual 16x1 Mux'
p32838
sg32117
I-200635
sg32119
I-200113
sg32121
I10271
sg32123
I-50101
sg32125
I6414
sg32127
I6129
sg32129
I100
sg32131
I12523
sg32133
I-200328
sg32135
I2068
sg32137
I-201067
sg32139
I5175
sg32141
I-200208
sg32143
I-50015
sg32145
I-200395
sg32147
I-200278
sg32149
I-88709
sg32151
I-200124
sg32153
I2099
sg32155
I6190
sg32157
I-200747
sg32159
I-200061
sg32161
S'1127/1-Wire 64x1 Mux'
p32839
sg32163
I8709
sg32165
I6168
sg32167
I-200434
sg32169
I4457
sg32171
I-200192
sg32173
I-200594
sg32175
I-200988
sg32177
I-200516
sg32179
I6314
sg32181
I200026
sg32183
I-200232
sg32185
I-200884
sg32187
I-200437
sg32189
I-200709
sg32191
I5155
sg32193
I8662
sg32195
I200008
sg32197
I-200794
sg32199
I-200070
sg32201
I-201023
sg32203
I-200347
sg32205
I8583
sg32207
I-200534
sg32209
I-200917
sg32211
I50408
sg32213
I6435
sg32215
I6227
sg32217
I-89132
sg32219
I8738
sg32221
I-200105
sg32223
I8923
sg32225
I-200887
sg32227
I-200706
sg32229
I-200281
sg32231
I-200810
sg32233
I-200241
sg32235
I8959
sg32237
I-201085
sg32239
I-200006
sg32241
I8896
sg32243
S'1130/2-Wire 4x32 Matrix'
p32840
sg32245
I50355
sg32247
I6427
sg32249
I8881
sg32251
I6444
sg32253
I-200408
sg32255
I-200573
sg32257
I289
sg32259
I-200572
sg32261
I200014
sg32263
I12553
sg32265
I10435
sg32267
I-201038
sg32269
I-200229
sg32271
I-1
sg32273
I-200726
sg32275
S'1175/2-Wire 95x1 Mux'
p32841
sg32277
I8713
sg32279
S'2596/Dual 6x1 Mux'
p32842
sg32281
I-200911
sg32283
I-200116
sg32285
I6132
sg32287
I-200648
sg32289
I1600
sg32291
I8922
sg32293
I10163
sg32295
I-54000
sg32297
I-89131
sg32299
I-201060
sg32301
I-200438
sg32303
I-200742
sg32305
I-200205
sg32307
I8996
sg32309
I-200759
sg32311
I-200361
sg32313
I6286
sg32315
I1
sg32316
I-200610
sg32318
I-200081
sg32320
I-200401
sg32322
I8603
sg32324
I-200894
sg32326
I-200372
sg32328
I8695
sg32330
I-50450
sg32332
I-200696
sg32334
I200009
sg32336
I8575
sg32338
I200031
sg32340
I4724
sg32342
I6287
sg32344
I8717
sg32346
I1608
sg32348
I-200150
sg32350
I-200983
sg32352
I6216
sg32354
I-200698
sg32356
I12488
sg32358
S'1127/2-Wire 32x1 Mux'
p32843
sg32360
I-89141
sg32362
I-200815
sg32364
I6124
sg32366
I-200748
sg32368
I-50650
sg32370
I-89125
sg32372
I10102
sg32374
I-200255
sg32376
I10100
sg32378
S'1130/1-Wire Sixteen 16x1 Mux'
p32844
sg32380
I6411
sg32382
I10045
sg32384
I-200989
sg32386
I-200362
sg32388
I-50001
sg32390
I5714
sg32392
I8727
sg32394
I-200215
sg32396
I-200544
sg32398
I10251
sg32400
I10440
sg32402
I-200623
sg32404
I1686
sg32406
I-50003
sg32408
I1793
sg32410
I-200495
sg32412
I6302
sg32414
I-200963
sg32416
I-50007
sg32418
I-200096
sg32420
I-200251
sg32422
S'2532/1-Wire Dual 16x16 Matrix'
p32845
sg32424
I10189
sg32426
I-200662
sg32428
I-200284
sg32430
I-201004
sg32432
I12588
sg32434
I-200484
sg32436
I5975
sg32438
I8958
sg32440
I10325
sg32442
I-200089
sg32444
I4885
sg32446
I325
sg32448
I-201025
sg32450
I-200927
sg32452
I6146
sg32454
I-200146
sg32456
I-50208
sg32458
I-200779
sg32460
I-50151
sg32462
I-200830
sg32464
I10187
sg32466
I50002
sg32468
I-200238
sg32470
I-200054
sg32472
I12582
sg32474
I10360
sg32476
I-200855
sg32478
I-200038
sg32480
I-200403
sg32482
I1
sg32484
I-200384
sg32486
I8711
sg32488
I-50601
sg32490
I10159
sg32492
I-200444
sg32494
I306
sg32496
I-54001
sg32498
I-200033
sg32500
I-200196
sg32502
I50010
sg32504
I-200818
sg32506
I4
sg32507
I5121
sg32509
I8604
sg32511
Nsg32512
I-200935
sg32514
I8679
sg32516
I-200179
sg32518
I-200614
sg32520
I4661
sg32522
I-200456
sg32524
I-200867
sg32526
I8719
sg32528
I-200383
sg32530
I6279
sg32532
Nsg32533
I8990
sg32535
I-201040
sg32537
I-200550
sg32539
I-200781
sg32541
I-200313
sg32543
I665
sg32545
I-200866
sg32547
I-200821
sg32549
I1602
sg32551
I-200306
sg32553
I6339
sg32555
I-200203
sg32557
I5967
sg32559
I-200842
sg32561
I10117
sg32563
I-200967
sg32565
I-200714
sg32567
S'2501/2-Wire 24x1 Amplified Mux'
p32846
sg32569
I6388
sg32571
I8688
sg32573
I-200583
sg32575
I6460
sg32577
I8857
sg32579
I-200339
sg32581
I-200765
sg32583
I8573
sg32585
I-200197
sg32587
I-200909
sg32589
I6413
sg32591
I-200595
sg32593
I-200951
sg32595
I5158
sg32597
I-50255
sg32599
I-200117
sg32601
I-200540
sg32603
I6112
sg32605
I-200417
sg32607
I-201006
sg32609
I10198
sg32611
I5011
sg32613
I-200185
sg32615
I8608
sg32617
I-200058
sg32619
I-200106
sg32621
S'2575/1-Wire 196x1 Mux'
p32847
sg32623
I-200875
sg32625
I1609
sg32627
I-201001
sg32629
I-200319
sg32631
I10179
sg32633
I-200293
sg32635
I-200243
sg32637
I50262
sg32639
I-200715
sg32641
I6438
sg32643
Nsg32645
I8680
sg32647
I12524
sg32649
I-200982
sg32651
I-200209
sg32653
I8760
sg32655
I8707
sg32657
L0L
sg32659
I8888
sg32661
I-50263
sg32663
I-50402
sg32665
I-200009
sg32667
I-50201
sg32669
I10388
sg32671
I8814
sg32673
I-200147
sg32675
I-200985
sg32677
I-200956
sg32679
I10150
sg32681
I-200670
sg32683
I-50104
sg32685
I-200814
sg32687
I-200908
sg32689
I10426
sg32691
I-200087
sg32693
I-200891
sg32695
I-200955
sg32697
I660
sg32699
I10184
sg32701
I2054
sg32703
I-200684
sg32705
S'2530/1-Wire 8x16 Matrix'
p32848
sg32707
S'2530/1-Wire Octal 16x1 Mux'
p32849
sg32709
I-200663
sg32711
I-200972
sg32713
I4464
sg32715
I-50100
ssS'fnmacros'
p32850
(dp32851
S'DAQmxFailed'
p32852
(S'((%s)<0)'
p32853
(lp32854
I0
atp32855
ssS'structs'
p32856
(dp32857
sS'types'
p32858
(dp32859
S'uInt64'
p32860
(lp32861
S'unsigned'
p32862
asS'int32'
p32863
(lp32864
S'signed long'
p32865
asS'int16'
p32866
(lp32867
S'signed short'
p32868
asS'DAQmxDoneEventCallbackPtr'
p32869
(lp32870
S'int32'
p32871
a((S'taskHandle'
p32872
(lp32873
S'TaskHandle'
p32874
aNtp32875
(S'status'
p32876
(lp32877
S'int32'
p32878
aNtp32879
(S'callbackData'
p32880
(lp32881
S'void'
p32882
ag19
aNtp32883
tp32884
ag2542
ag19
asS'float64'
p32885
(lp32886
S'double'
p32887
asS'TaskHandle'
p32888
(lp32889
S'uInt32'
p32890
asS'bool32'
p32891
(lp32892
S'uInt32'
p32893
asS'uInt8'
p32894
(lp32895
S'unsigned char'
p32896
asS'int8'
p32897
(lp32898
S'signed char'
p32899
asS'DAQmxEveryNSamplesEventCallbackPtr'
p32900
(lp32901
S'int32'
p32902
a((S'taskHandle'
p32903
(lp32904
S'TaskHandle'
p32905
aNtp32906
(S'everyNsamplesEventType'
p32907
(lp32908
S'int32'
p32909
aNtp32910
(S'nSamples'
p32911
(lp32912
S'uInt32'
p32913
aNtp32914
(S'callbackData'
p32915
(lp32916
S'void'
p32917
ag19
aNtp32918
tp32919
ag2542
ag19
asS'uInt16'
p32920
(lp32921
S'unsigned short'
p32922
asS'uInt32'
p32923
(lp32924
S'unsigned long'
p32925
asS'float32'
p32926
(lp32927
S'float'
p32928
asS'DAQmxSignalEventCallbackPtr'
p32929
(lp32930
S'int32'
p32931
a((S'taskHandle'
p32932
(lp32933
S'TaskHandle'
p32934
aNtp32935
(S'signalID'
p32936
(lp32937
S'int32'
p32938
aNtp32939
(S'callbackData'
p32940
(lp32941
S'void'
p32942
ag19
aNtp32943
tp32944
ag2542
ag19
assssS'opts'
p32945
(dp32946
S'files'
p32947
(lp32948
S'NIDAQmx.h'
p32949
asS'replace'
p32950
(dp32951
g32949
Nsss.